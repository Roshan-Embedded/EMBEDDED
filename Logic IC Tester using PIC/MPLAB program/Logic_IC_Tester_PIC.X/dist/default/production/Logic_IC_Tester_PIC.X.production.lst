

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue Oct 10 15:14:37 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    41                           	dabs	1,0x7E,2
    42     0000                     
    43                           ; Generated 22/03/2023 GMT
    44                           ; 
    45                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution. Publication is not required when
    59                           ;        this file is used in an embedded application.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC16F877A Definitions
    75                           ; 
    76                           ; SFR Addresses
    77     0000                     	;# 
    78     0001                     	;# 
    79     0002                     	;# 
    80     0003                     	;# 
    81     0004                     	;# 
    82     0005                     	;# 
    83     0006                     	;# 
    84     0007                     	;# 
    85     0008                     	;# 
    86     0009                     	;# 
    87     000A                     	;# 
    88     000B                     	;# 
    89     000C                     	;# 
    90     000D                     	;# 
    91     000E                     	;# 
    92     000E                     	;# 
    93     000F                     	;# 
    94     0010                     	;# 
    95     0011                     	;# 
    96     0012                     	;# 
    97     0013                     	;# 
    98     0014                     	;# 
    99     0015                     	;# 
   100     0015                     	;# 
   101     0016                     	;# 
   102     0017                     	;# 
   103     0018                     	;# 
   104     0019                     	;# 
   105     001A                     	;# 
   106     001B                     	;# 
   107     001B                     	;# 
   108     001C                     	;# 
   109     001D                     	;# 
   110     001E                     	;# 
   111     001F                     	;# 
   112     0081                     	;# 
   113     0085                     	;# 
   114     0086                     	;# 
   115     0087                     	;# 
   116     0088                     	;# 
   117     0089                     	;# 
   118     008C                     	;# 
   119     008D                     	;# 
   120     008E                     	;# 
   121     0091                     	;# 
   122     0092                     	;# 
   123     0093                     	;# 
   124     0094                     	;# 
   125     0098                     	;# 
   126     0099                     	;# 
   127     009C                     	;# 
   128     009D                     	;# 
   129     009E                     	;# 
   130     009F                     	;# 
   131     010C                     	;# 
   132     010D                     	;# 
   133     010E                     	;# 
   134     010F                     	;# 
   135     018C                     	;# 
   136     018D                     	;# 
   137     0000                     	;# 
   138     0001                     	;# 
   139     0002                     	;# 
   140     0003                     	;# 
   141     0004                     	;# 
   142     0005                     	;# 
   143     0006                     	;# 
   144     0007                     	;# 
   145     0008                     	;# 
   146     0009                     	;# 
   147     000A                     	;# 
   148     000B                     	;# 
   149     000C                     	;# 
   150     000D                     	;# 
   151     000E                     	;# 
   152     000E                     	;# 
   153     000F                     	;# 
   154     0010                     	;# 
   155     0011                     	;# 
   156     0012                     	;# 
   157     0013                     	;# 
   158     0014                     	;# 
   159     0015                     	;# 
   160     0015                     	;# 
   161     0016                     	;# 
   162     0017                     	;# 
   163     0018                     	;# 
   164     0019                     	;# 
   165     001A                     	;# 
   166     001B                     	;# 
   167     001B                     	;# 
   168     001C                     	;# 
   169     001D                     	;# 
   170     001E                     	;# 
   171     001F                     	;# 
   172     0081                     	;# 
   173     0085                     	;# 
   174     0086                     	;# 
   175     0087                     	;# 
   176     0088                     	;# 
   177     0089                     	;# 
   178     008C                     	;# 
   179     008D                     	;# 
   180     008E                     	;# 
   181     0091                     	;# 
   182     0092                     	;# 
   183     0093                     	;# 
   184     0094                     	;# 
   185     0098                     	;# 
   186     0099                     	;# 
   187     009C                     	;# 
   188     009D                     	;# 
   189     009E                     	;# 
   190     009F                     	;# 
   191     010C                     	;# 
   192     010D                     	;# 
   193     010E                     	;# 
   194     010F                     	;# 
   195     018C                     	;# 
   196     018D                     	;# 
   197     0000                     	;# 
   198     0001                     	;# 
   199     0002                     	;# 
   200     0003                     	;# 
   201     0004                     	;# 
   202     0005                     	;# 
   203     0006                     	;# 
   204     0007                     	;# 
   205     0008                     	;# 
   206     0009                     	;# 
   207     000A                     	;# 
   208     000B                     	;# 
   209     000C                     	;# 
   210     000D                     	;# 
   211     000E                     	;# 
   212     000E                     	;# 
   213     000F                     	;# 
   214     0010                     	;# 
   215     0011                     	;# 
   216     0012                     	;# 
   217     0013                     	;# 
   218     0014                     	;# 
   219     0015                     	;# 
   220     0015                     	;# 
   221     0016                     	;# 
   222     0017                     	;# 
   223     0018                     	;# 
   224     0019                     	;# 
   225     001A                     	;# 
   226     001B                     	;# 
   227     001B                     	;# 
   228     001C                     	;# 
   229     001D                     	;# 
   230     001E                     	;# 
   231     001F                     	;# 
   232     0081                     	;# 
   233     0085                     	;# 
   234     0086                     	;# 
   235     0087                     	;# 
   236     0088                     	;# 
   237     0089                     	;# 
   238     008C                     	;# 
   239     008D                     	;# 
   240     008E                     	;# 
   241     0091                     	;# 
   242     0092                     	;# 
   243     0093                     	;# 
   244     0094                     	;# 
   245     0098                     	;# 
   246     0099                     	;# 
   247     009C                     	;# 
   248     009D                     	;# 
   249     009E                     	;# 
   250     009F                     	;# 
   251     010C                     	;# 
   252     010D                     	;# 
   253     010E                     	;# 
   254     010F                     	;# 
   255     018C                     	;# 
   256     018D                     	;# 
   257     0000                     	;# 
   258     0001                     	;# 
   259     0002                     	;# 
   260     0003                     	;# 
   261     0004                     	;# 
   262     0005                     	;# 
   263     0006                     	;# 
   264     0007                     	;# 
   265     0008                     	;# 
   266     0009                     	;# 
   267     000A                     	;# 
   268     000B                     	;# 
   269     000C                     	;# 
   270     000D                     	;# 
   271     000E                     	;# 
   272     000E                     	;# 
   273     000F                     	;# 
   274     0010                     	;# 
   275     0011                     	;# 
   276     0012                     	;# 
   277     0013                     	;# 
   278     0014                     	;# 
   279     0015                     	;# 
   280     0015                     	;# 
   281     0016                     	;# 
   282     0017                     	;# 
   283     0018                     	;# 
   284     0019                     	;# 
   285     001A                     	;# 
   286     001B                     	;# 
   287     001B                     	;# 
   288     001C                     	;# 
   289     001D                     	;# 
   290     001E                     	;# 
   291     001F                     	;# 
   292     0081                     	;# 
   293     0085                     	;# 
   294     0086                     	;# 
   295     0087                     	;# 
   296     0088                     	;# 
   297     0089                     	;# 
   298     008C                     	;# 
   299     008D                     	;# 
   300     008E                     	;# 
   301     0091                     	;# 
   302     0092                     	;# 
   303     0093                     	;# 
   304     0094                     	;# 
   305     0098                     	;# 
   306     0099                     	;# 
   307     009C                     	;# 
   308     009D                     	;# 
   309     009E                     	;# 
   310     009F                     	;# 
   311     010C                     	;# 
   312     010D                     	;# 
   313     010E                     	;# 
   314     010F                     	;# 
   315     018C                     	;# 
   316     018D                     	;# 
   317                           
   318                           	psect	idataBANK0
   319     0004                     __pidataBANK0:
   320                           
   321                           ;initializer for _gate
   322     0004  3401               	retlw	1
   323     0005  3400               	retlw	0
   324     0006  3401               	retlw	1
   325     0007  3400               	retlw	0
   326     0008  3401               	retlw	1
   327     0009  3400               	retlw	0
   328     000A  3401               	retlw	1
   329     000B  3400               	retlw	0
   330     000C  3401               	retlw	1
   331     000D  3400               	retlw	0
   332     000E  3401               	retlw	1
   333     000F  3400               	retlw	0
   334                           
   335                           ;initializer for _n
   336     0010  3409               	retlw	9
   337     0011  3400               	retlw	0
   338                           
   339                           	psect	idataBANK1
   340     09D0                     __pidataBANK1:
   341                           
   342                           ;initializer for _OR_3
   343     09D0  3400               	retlw	0
   344     09D1  3401               	retlw	1
   345     09D2  3401               	retlw	1
   346     09D3  3401               	retlw	1
   347     09D4  3401               	retlw	1
   348     09D5  3401               	retlw	1
   349     09D6  3401               	retlw	1
   350     09D7  3401               	retlw	1
   351                           
   352                           ;initializer for _AND_3
   353     09D8  3400               	retlw	0
   354     09D9  3400               	retlw	0
   355     09DA  3400               	retlw	0
   356     09DB  3400               	retlw	0
   357     09DC  3400               	retlw	0
   358     09DD  3400               	retlw	0
   359     09DE  3400               	retlw	0
   360     09DF  3401               	retlw	1
   361                           
   362                           	psect	strings
   363     0800                     __pstrings:
   364     0800                     stringtab:
   365     0800                     __stringtab:
   366                           
   367                           ;	String table - string pointers are 1 byte each
   368     0800  1BFF               	btfsc	btemp+1,7
   369     0801  280A               	ljmp	stringcode
   370     0802  1383               	bcf	3,7
   371     0803  187F               	btfsc	btemp+1,0
   372     0804  1783               	bsf	3,7
   373     0805  0800               	movf	0,w
   374     0806  0A84               	incf	4,f
   375     0807  1903               	skipnz
   376     0808  0AFF               	incf	btemp+1,f
   377     0809  0008               	return
   378     080A                     stringcode:
   379     080A                     stringdir:
   380     080A  3008               	movlw	high stringdir
   381     080B  008A               	movwf	10
   382     080C  0804               	movf	4,w
   383     080D  0A84               	incf	4,f
   384     080E  0782               	addwf	2,f
   385     080F                     __stringbase:
   386     080F  3400               	retlw	0
   387     0810                     __end_of__stringtab:
   388     0810                     _truth:
   389     0810  346E               	retlw	110
   390     0811  3400               	retlw	0
   391     0812  34F8               	retlw	248
   392     0813  342A               	retlw	42
   393     0814  3466               	retlw	102
   394     0815  342B               	retlw	43
   395     0816  3411               	retlw	17
   396     0817  3427               	retlw	39
   397     0818  347F               	retlw	127
   398     0819  3427               	retlw	39
   399     081A  347E               	retlw	126
   400     081B  3427               	retlw	39
   401     081C                     __end_of_truth:
   402     081C                     _dpowers:
   403     081C  3401               	retlw	1
   404     081D  3400               	retlw	0
   405     081E  340A               	retlw	10
   406     081F  3400               	retlw	0
   407     0820  3464               	retlw	100
   408     0821  3400               	retlw	0
   409     0822  34E8               	retlw	232
   410     0823  3403               	retlw	3
   411     0824  3410               	retlw	16
   412     0825  3427               	retlw	39
   413     0826                     __end_of_dpowers:
   414     0826                     _name:
   415     0826  3437               	retlw	55
   416     0827  3434               	retlw	52
   417     0828  3430               	retlw	48
   418     0829  3434               	retlw	52
   419     082A  3400               	retlw	0
   420     082B  3437               	retlw	55
   421     082C  3434               	retlw	52
   422     082D  3430               	retlw	48
   423     082E  3432               	retlw	50
   424     082F  3400               	retlw	0
   425     0830  3437               	retlw	55
   426     0831  3434               	retlw	52
   427     0832  3430               	retlw	48
   428     0833  3430               	retlw	48
   429     0834  3400               	retlw	0
   430     0835  3437               	retlw	55
   431     0836  3434               	retlw	52
   432     0837  3430               	retlw	48
   433     0838  3438               	retlw	56
   434     0839  3400               	retlw	0
   435     083A  3437               	retlw	55
   436     083B  3434               	retlw	52
   437     083C  3433               	retlw	51
   438     083D  3432               	retlw	50
   439     083E  3400               	retlw	0
   440     083F  3437               	retlw	55
   441     0840  3434               	retlw	52
   442     0841  3438               	retlw	56
   443     0842  3436               	retlw	54
   444     0843  3400               	retlw	0
   445     0844  3431               	retlw	49
   446     0845  3430               	retlw	48
   447     0846  3400               	retlw	0
   448     0847  3400               	retlw	0
   449     0848  3400               	retlw	0
   450     0849  3431               	retlw	49
   451     084A  3431               	retlw	49
   452     084B  3400               	retlw	0
   453     084C  3400               	retlw	0
   454     084D  3400               	retlw	0
   455     084E  3432               	retlw	50
   456     084F  3437               	retlw	55
   457     0850  3400               	retlw	0
   458     0851  3400               	retlw	0
   459     0852  3400               	retlw	0
   460     0853  3434               	retlw	52
   461     0854  3430               	retlw	48
   462     0855  3437               	retlw	55
   463     0856  3435               	retlw	53
   464     0857  3400               	retlw	0
   465     0858  3400               	retlw	0
   466     0859  3400               	retlw	0
   467     085A  3400               	retlw	0
   468     085B  3400               	retlw	0
   469     085C  3400               	retlw	0
   470     085D                     __end_of_name:
   471     001F                     _ADCON0	set	31
   472     0031                     _RB1	set	49
   473     0034                     _RB4	set	52
   474     0045                     _RD5	set	69
   475     0030                     _RB0	set	48
   476     0033                     _RB3	set	51
   477     0036                     _RB6	set	54
   478     0043                     _RD3	set	67
   479     0046                     _RD6	set	70
   480     0032                     _RB2	set	50
   481     0035                     _RB5	set	53
   482     0044                     _RD4	set	68
   483     0047                     _RD7	set	71
   484     002A                     _RA2	set	42
   485     0028                     _RA0	set	40
   486     0029                     _RA1	set	41
   487     002B                     _RA3	set	43
   488     002C                     _RA4	set	44
   489     003F                     _RC7	set	63
   490     003E                     _RC6	set	62
   491     003D                     _RC5	set	61
   492     003C                     _RC4	set	60
   493     003B                     _RC3	set	59
   494     003A                     _RC2	set	58
   495     009F                     _ADCON1	set	159
   496     0087                     _TRISC	set	135
   497     0431                     _TRISB1	set	1073
   498     0434                     _TRISB4	set	1076
   499     0445                     _TRISD5	set	1093
   500     0430                     _TRISB0	set	1072
   501     0433                     _TRISB3	set	1075
   502     0432                     _TRISB2	set	1074
   503     0436                     _TRISB6	set	1078
   504     0435                     _TRISB5	set	1077
   505     0443                     _TRISD3	set	1091
   506     0444                     _TRISD4	set	1092
   507     0446                     _TRISD6	set	1094
   508     0447                     _TRISD7	set	1095
   509     042C                     _TRISA4	set	1068
   510     042B                     _TRISA3	set	1067
   511     042A                     _TRISA2	set	1066
   512     0429                     _TRISA1	set	1065
   513     0428                     _TRISA0	set	1064
   514     043F                     _TRISC7	set	1087
   515     043E                     _TRISC6	set	1086
   516     085D                     STR_5:
   517     085D  344E               	retlw	78	;'N'
   518     085E  346F               	retlw	111	;'o'
   519     085F  3474               	retlw	116	;'t'
   520     0860  3420               	retlw	32	;' '
   521     0861  3444               	retlw	68	;'D'
   522     0862  3474               	retlw	116	;'t'
   523     0863  3463               	retlw	99	;'c'
   524     0864  3420               	retlw	32	;' '
   525     0865  346F               	retlw	111	;'o'
   526     0866  3472               	retlw	114	;'r'
   527     0867  3420               	retlw	32	;' '
   528     0868  3442               	retlw	66	;'B'
   529     0869  3461               	retlw	97	;'a'
   530     086A  3464               	retlw	100	;'d'
   531     086B  3400               	retlw	0
   532     086C                     STR_7:
   533     086C  3420               	retlw	32	;' '
   534     086D  3447               	retlw	71	;'G'
   535     086E  3441               	retlw	65	;'A'
   536     086F  3454               	retlw	84	;'T'
   537     0870  3445               	retlw	69	;'E'
   538     0871  3420               	retlw	32	;' '
   539     0872  3447               	retlw	71	;'G'
   540     0873  344F               	retlw	79	;'O'
   541     0874  344F               	retlw	79	;'O'
   542     0875  3444               	retlw	68	;'D'
   543     0876  3400               	retlw	0
   544     0877                     STR_9:
   545     0877  3449               	retlw	73	;'I'
   546     0878  3443               	retlw	67	;'C'
   547     0879  3420               	retlw	32	;' '
   548     087A  3449               	retlw	73	;'I'
   549     087B  3453               	retlw	83	;'S'
   550     087C  3420               	retlw	32	;' '
   551     087D  3447               	retlw	71	;'G'
   552     087E  344F               	retlw	79	;'O'
   553     087F  344F               	retlw	79	;'O'
   554     0880  3444               	retlw	68	;'D'
   555     0881  3400               	retlw	0
   556     0882                     STR_2:
   557     0882  3449               	retlw	73	;'I'
   558     0883  3443               	retlw	67	;'C'
   559     0884  3420               	retlw	32	;' '
   560     0885  3441               	retlw	65	;'A'
   561     0886  3475               	retlw	117	;'u'
   562     0887  3474               	retlw	116	;'t'
   563     0888  346F               	retlw	111	;'o'
   564     0889  342E               	retlw	46	;'.'
   565     088A  342E               	retlw	46	;'.'
   566     088B  342E               	retlw	46	;'.'
   567     088C  3400               	retlw	0
   568     088D                     STR_8:
   569     088D  3449               	retlw	73	;'I'
   570     088E  3443               	retlw	67	;'C'
   571     088F  3420               	retlw	32	;' '
   572     0890  3449               	retlw	73	;'I'
   573     0891  3453               	retlw	83	;'S'
   574     0892  3420               	retlw	32	;' '
   575     0893  3442               	retlw	66	;'B'
   576     0894  3441               	retlw	65	;'A'
   577     0895  3444               	retlw	68	;'D'
   578     0896  3400               	retlw	0
   579     0897                     STR_1:
   580     0897  3449               	retlw	73	;'I'
   581     0898  3443               	retlw	67	;'C'
   582     0899  3420               	retlw	32	;' '
   583     089A  3454               	retlw	84	;'T'
   584     089B  3445               	retlw	69	;'E'
   585     089C  3453               	retlw	83	;'S'
   586     089D  3454               	retlw	84	;'T'
   587     089E  3445               	retlw	69	;'E'
   588     089F  3452               	retlw	82	;'R'
   589     08A0  3400               	retlw	0
   590     08A1                     STR_3:
   591     08A1  3449               	retlw	73	;'I'
   592     08A2  3443               	retlw	67	;'C'
   593     08A3  3420               	retlw	32	;' '
   594     08A4  3420               	retlw	32	;' '
   595     08A5  3400               	retlw	0
   596     08A6                     STR_4:
   597     08A6  3437               	retlw	55	;'7'
   598     08A7  3434               	retlw	52	;'4'
   599     08A8  3400               	retlw	0
   600     08A9                     STR_6:
   601     08A9  3425               	retlw	37	;'%'
   602     08AA  3464               	retlw	100	;'d'
   603     08AB  3400               	retlw	0
   604     088D                     
   605                           	psect	cinit
   606     07D0                     start_initialization:	
   607                           ; #config settings
   608                           
   609     07D0                     __initialization:
   610                           
   611                           ; Initialize objects allocated to BANK1
   612     07D0  1383               	bcf	3,7	;select IRP bank0
   613     07D1  30B0               	movlw	low (__pdataBANK1+16)
   614     07D2  00FD               	movwf	btemp+-1
   615     07D3  3009               	movlw	high __pidataBANK1
   616     07D4  00FE               	movwf	btemp
   617     07D5  30D0               	movlw	low __pidataBANK1
   618     07D6  00FF               	movwf	btemp+1
   619     07D7  30A0               	movlw	low __pdataBANK1
   620     07D8  0084               	movwf	4
   621     07D9  120A  158A  21E4  120A  118A  	fcall	init_ram0
   622                           
   623                           ; Initialize objects allocated to BANK0
   624     07DE  306B               	movlw	low (__pdataBANK0+14)
   625     07DF  00FD               	movwf	btemp+-1
   626     07E0  3000               	movlw	high __pidataBANK0
   627     07E1  00FE               	movwf	btemp
   628     07E2  3004               	movlw	low __pidataBANK0
   629     07E3  00FF               	movwf	btemp+1
   630     07E4  305D               	movlw	low __pdataBANK0
   631     07E5  0084               	movwf	4
   632     07E6  120A  158A  21E4  120A  118A  	fcall	init_ram0
   633                           
   634                           ; Clear objects allocated to BANK1
   635     07EB  30B0               	movlw	low __pbssBANK1
   636     07EC  0084               	movwf	4
   637     07ED  30B8               	movlw	low (__pbssBANK1+8)
   638     07EE  120A  158A  21BB  120A  118A  	fcall	clear_ram0
   639                           
   640                           ; Clear objects allocated to BANK0
   641     07F3  3041               	movlw	low __pbssBANK0
   642     07F4  0084               	movwf	4
   643     07F5  305D               	movlw	low (__pbssBANK0+28)
   644     07F6  120A  158A  21BB  120A  118A  	fcall	clear_ram0
   645                           
   646                           ; Clear objects allocated to COMMON
   647     07FB  01FD               	clrf	__pbssCOMMON& (0+127)
   648     07FC                     end_of_initialization:	
   649                           ;End of C runtime variable initialization code
   650                           
   651     07FC                     __end_of__initialization:
   652     07FC  0183               	clrf	3
   653     07FD  120A  118A  2879   	ljmp	_main	;jump to C main() function
   654                           
   655                           	psect	bssCOMMON
   656     007D                     __pbssCOMMON:
   657     007D                     _x1:
   658     007D                     	ds	1
   659                           
   660                           	psect	bssBANK0
   661     0041                     __pbssBANK0:
   662     0041                     _gate2:
   663     0041                     	ds	8
   664     0049                     _gate1:
   665     0049                     	ds	8
   666     0051                     _x:
   667     0051                     	ds	2
   668     0053                     _l:
   669     0053                     	ds	2
   670     0055                     _k:
   671     0055                     	ds	2
   672     0057                     _j:
   673     0057                     	ds	2
   674     0059                     _i:
   675     0059                     	ds	2
   676     005B                     _x3:
   677     005B                     	ds	1
   678     005C                     _x2:
   679     005C                     	ds	1
   680                           
   681                           	psect	dataBANK0
   682     005D                     __pdataBANK0:
   683     005D                     _gate:
   684     005D                     	ds	12
   685     0069                     _n:
   686     0069                     	ds	2
   687                           
   688                           	psect	bssBANK1
   689     00B0                     __pbssBANK1:
   690     00B0                     _gate3:
   691     00B0                     	ds	8
   692                           
   693                           	psect	dataBANK1
   694     00A0                     __pdataBANK1:
   695     00A0                     _OR_3:
   696     00A0                     	ds	8
   697     00A8                     _AND_3:
   698     00A8                     	ds	8
   699                           
   700                           	psect	inittext
   701     09E0                     init_fetch0:	
   702                           ;	Called with low address in FSR and high address in W
   703                           
   704     09E0  087E               	movf	btemp,w
   705     09E1  008A               	movwf	10
   706     09E2  087F               	movf	btemp+1,w
   707     09E3  0082               	movwf	2
   708     09E4                     init_ram0:	
   709                           ;Called with:
   710                           ;	high address of idata address in btemp 
   711                           ;	low address of idata address in btemp+1 
   712                           ;	low address of data in FSR
   713                           ;	high address + 1 of data in btemp-1
   714                           
   715     09E4  120A  158A  21E0  120A  158A  	fcall	init_fetch0
   716     09E9  0080               	movwf	0
   717     09EA  0A84               	incf	4,f
   718     09EB  0804               	movf	4,w
   719     09EC  067D               	xorwf	btemp+-1,w
   720     09ED  1903               	btfsc	3,2
   721     09EE  3400               	retlw	0
   722     09EF  0AFF               	incf	btemp+1,f
   723     09F0  1903               	btfsc	3,2
   724     09F1  0AFE               	incf	btemp,f
   725     09F2  29E4               	goto	init_ram0
   726                           
   727                           	psect	clrtext
   728     09BB                     clear_ram0:	
   729                           ;	Called with FSR containing the base address, and
   730                           ;	W with the last address+1
   731                           
   732     09BB  0064               	clrwdt	;clear the watchdog before getting into this loop
   733     09BC                     clrloop0:
   734     09BC  0180               	clrf	0	;clear RAM location pointed to by FSR
   735     09BD  0A84               	incf	4,f	;increment pointer
   736     09BE  0604               	xorwf	4,w	;XOR with final address
   737     09BF  1903               	btfsc	3,2	;have we reached the end yet?
   738     09C0  3400               	retlw	0	;all done for this memory range, return
   739     09C1  0604               	xorwf	4,w	;XOR again to restore value
   740     09C2  29BC               	goto	clrloop0	;do the next byte
   741                           
   742                           	psect	cstackCOMMON
   743     0070                     __pcstackCOMMON:
   744     0070                     ?_Write_IC:
   745     0070                     ?_Auto:	
   746                           ; 1 bytes @ 0x0
   747                           
   748     0070                     ?_Mode_6:	
   749                           ; 1 bytes @ 0x0
   750                           
   751     0070                     ?_gate_1:	
   752                           ; 1 bytes @ 0x0
   753                           
   754     0070                     ??_gate_1:	
   755                           ; 1 bytes @ 0x0
   756                           
   757     0070                     ?_Mode_4:	
   758                           ; 1 bytes @ 0x0
   759                           
   760     0070                     ?_is_all_good:	
   761                           ; 1 bytes @ 0x0
   762                           
   763     0070                     ?_TRI_GOOD:	
   764                           ; 1 bytes @ 0x0
   765                           
   766     0070                     ?_LCD_DATA:	
   767                           ; 1 bytes @ 0x0
   768                           
   769     0070                     ??_LCD_DATA:	
   770                           ; 1 bytes @ 0x0
   771                           
   772     0070                     ?_LCD_CMD:	
   773                           ; 1 bytes @ 0x0
   774                           
   775     0070                     ?_LCD_Clear:	
   776                           ; 1 bytes @ 0x0
   777                           
   778     0070                     ?_LCD_Init:	
   779                           ; 1 bytes @ 0x0
   780                           
   781     0070                     ?_LCD_Write_Char:	
   782                           ; 1 bytes @ 0x0
   783                           
   784     0070                     ?_main:	
   785                           ; 1 bytes @ 0x0
   786                           
   787     0070                     ?___bmul:	
   788                           ; 1 bytes @ 0x0
   789                           
   790     0070                     ?___wmul:	
   791                           ; 1 bytes @ 0x0
   792                           
   793     0070                     ?___lwdiv:	
   794                           ; 2 bytes @ 0x0
   795                           
   796     0070                     LCD_DATA@Data:	
   797                           ; 2 bytes @ 0x0
   798                           
   799     0070                     ___bmul@multiplicand:	
   800                           ; 1 bytes @ 0x0
   801                           
   802     0070                     is_all_good@n:	
   803                           ; 1 bytes @ 0x0
   804                           
   805     0070                     TRI_GOOD@ic_num:	
   806                           ; 2 bytes @ 0x0
   807                           
   808     0070                     ___wmul@multiplier:	
   809                           ; 2 bytes @ 0x0
   810                           
   811     0070                     ___lwdiv@divisor:	
   812                           ; 2 bytes @ 0x0
   813                           
   814                           
   815                           ; 2 bytes @ 0x0
   816     0070                     	ds	1
   817     0071                     ??_LCD_CMD:
   818     0071                     ??_LCD_Write_Char:	
   819                           ; 1 bytes @ 0x1
   820                           
   821     0071                     ??___bmul:	
   822                           ; 1 bytes @ 0x1
   823                           
   824     0071                     ___bmul@product:	
   825                           ; 1 bytes @ 0x1
   826                           
   827                           
   828                           ; 1 bytes @ 0x1
   829     0071                     	ds	1
   830     0072                     ??_TRI_GOOD:
   831     0072                     ___bmul@multiplier:	
   832                           ; 1 bytes @ 0x2
   833                           
   834     0072                     is_all_good@no:	
   835                           ; 1 bytes @ 0x2
   836                           
   837     0072                     ___wmul@multiplicand:	
   838                           ; 2 bytes @ 0x2
   839                           
   840     0072                     ___lwdiv@dividend:	
   841                           ; 2 bytes @ 0x2
   842                           
   843                           
   844                           ; 2 bytes @ 0x2
   845     0072                     	ds	1
   846     0073                     LCD_CMD@CMD:
   847     0073                     LCD_Write_Char@Low4:	
   848                           ; 1 bytes @ 0x3
   849                           
   850                           
   851                           ; 1 bytes @ 0x3
   852     0073                     	ds	1
   853     0074                     ??_is_all_good:
   854     0074                     ??_LCD_Clear:	
   855                           ; 1 bytes @ 0x4
   856                           
   857     0074                     ?_LCD_Set_Cursor:	
   858                           ; 1 bytes @ 0x4
   859                           
   860     0074                     ??_LCD_Init:	
   861                           ; 1 bytes @ 0x4
   862                           
   863     0074                     ??___wmul:	
   864                           ; 1 bytes @ 0x4
   865                           
   866     0074                     ??___lwdiv:	
   867                           ; 1 bytes @ 0x4
   868                           
   869     0074                     LCD_Set_Cursor@c:	
   870                           ; 1 bytes @ 0x4
   871                           
   872     0074                     LCD_Write_Char@High4:	
   873                           ; 1 bytes @ 0x4
   874                           
   875     0074                     ___wmul@product:	
   876                           ; 1 bytes @ 0x4
   877                           
   878     0074                     ___lwdiv@quotient:	
   879                           ; 2 bytes @ 0x4
   880                           
   881                           
   882                           ; 2 bytes @ 0x4
   883     0074                     	ds	1
   884     0075                     ??_LCD_Set_Cursor:
   885     0075                     LCD_Write_Char@Data:	
   886                           ; 1 bytes @ 0x5
   887                           
   888                           
   889                           ; 1 bytes @ 0x5
   890     0075                     	ds	1
   891     0076                     ??_Mode_6:
   892     0076                     ??_Mode_4:	
   893                           ; 1 bytes @ 0x6
   894                           
   895     0076                     ?_LCD_Write_String:	
   896                           ; 1 bytes @ 0x6
   897                           
   898     0076                     LCD_Set_Cursor@r:	
   899                           ; 1 bytes @ 0x6
   900                           
   901     0076                     ___lwdiv@counter:	
   902                           ; 1 bytes @ 0x6
   903                           
   904     0076                     LCD_Write_String@str:	
   905                           ; 1 bytes @ 0x6
   906                           
   907                           
   908                           ; 2 bytes @ 0x6
   909     0076                     	ds	1
   910     0077                     ?___lwmod:
   911     0077                     LCD_Set_Cursor@Low4:	
   912                           ; 2 bytes @ 0x7
   913                           
   914     0077                     ___lwmod@divisor:	
   915                           ; 1 bytes @ 0x7
   916                           
   917                           
   918                           ; 2 bytes @ 0x7
   919     0077                     	ds	1
   920     0078                     ??_LCD_Write_String:
   921     0078                     LCD_Set_Cursor@High4:	
   922                           ; 1 bytes @ 0x8
   923                           
   924                           
   925                           ; 1 bytes @ 0x8
   926     0078                     	ds	1
   927     0079                     LCD_Set_Cursor@Temp:
   928     0079                     ___lwmod@dividend:	
   929                           ; 1 bytes @ 0x9
   930                           
   931                           
   932                           ; 2 bytes @ 0x9
   933     0079                     	ds	2
   934     007B                     ??___lwmod:
   935     007B                     ___lwmod@counter:	
   936                           ; 1 bytes @ 0xB
   937                           
   938     007B                     LCD_Write_String@i:	
   939                           ; 1 bytes @ 0xB
   940                           
   941                           
   942                           ; 2 bytes @ 0xB
   943     007B                     	ds	2
   944     007D                     ??_Write_IC:
   945     007D                     ??_Test:	
   946                           ; 1 bytes @ 0xD
   947                           
   948     007D                     ??_Auto:	
   949                           ; 1 bytes @ 0xD
   950                           
   951                           
   952                           	psect	cstackBANK0
   953     0020                     __pcstackBANK0:	
   954                           ; 1 bytes @ 0xD
   955                           
   956     0020                     ?_TRI_NAN:
   957     0020                     ?_sprintf:	
   958                           ; 1 bytes @ 0x0
   959                           
   960     0020                     sprintf@f:	
   961                           ; 2 bytes @ 0x0
   962                           
   963     0020                     TRI_NAN@ic_num:	
   964                           ; 1 bytes @ 0x0
   965                           
   966                           
   967                           ; 2 bytes @ 0x0
   968     0020                     	ds	2
   969     0022                     ??_TRI_NAN:
   970                           
   971                           ; 1 bytes @ 0x2
   972     0022                     	ds	1
   973     0023                     ??_sprintf:
   974                           
   975                           ; 1 bytes @ 0x3
   976     0023                     	ds	3
   977     0026                     sprintf@ap:
   978                           
   979                           ; 1 bytes @ 0x6
   980     0026                     	ds	1
   981     0027                     sprintf@flag:
   982                           
   983                           ; 1 bytes @ 0x7
   984     0027                     	ds	1
   985     0028                     sprintf@prec:
   986                           
   987                           ; 1 bytes @ 0x8
   988     0028                     	ds	1
   989     0029                     sprintf@val:
   990                           
   991                           ; 2 bytes @ 0x9
   992     0029                     	ds	2
   993     002B                     sprintf@sp:
   994                           
   995                           ; 1 bytes @ 0xB
   996     002B                     	ds	1
   997     002C                     sprintf@c:
   998                           
   999                           ; 1 bytes @ 0xC
  1000     002C                     	ds	1
  1001     002D                     ?_print:
  1002     002D                     print@n:	
  1003                           ; 1 bytes @ 0xD
  1004                           
  1005                           
  1006                           ; 2 bytes @ 0xD
  1007     002D                     	ds	2
  1008     002F                     print@no:
  1009                           
  1010                           ; 2 bytes @ 0xF
  1011     002F                     	ds	2
  1012     0031                     ??_print:
  1013                           
  1014                           ; 1 bytes @ 0x11
  1015     0031                     	ds	6
  1016     0037                     print@charNum:
  1017                           
  1018                           ; 3 bytes @ 0x17
  1019     0037                     	ds	3
  1020     003A                     print@num:
  1021                           
  1022                           ; 2 bytes @ 0x1A
  1023     003A                     	ds	2
  1024     003C                     ?_Test:
  1025     003C                     Test@n:	
  1026                           ; 1 bytes @ 0x1C
  1027                           
  1028     003C                     Auto@i:	
  1029                           ; 2 bytes @ 0x1C
  1030                           
  1031                           
  1032                           ; 2 bytes @ 0x1C
  1033     003C                     	ds	2
  1034     003E                     ??_main:
  1035                           
  1036                           ; 1 bytes @ 0x1E
  1037     003E                     	ds	3
  1038                           
  1039                           	psect	maintext
  1040     0079                     __pmaintext:	
  1041 ;;
  1042 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1043 ;;
  1044 ;; *************** function _main *****************
  1045 ;; Defined at:
  1046 ;;		line 9 in file "main.c"
  1047 ;; Parameters:    Size  Location     Type
  1048 ;;		None
  1049 ;; Auto vars:     Size  Location     Type
  1050 ;;		None
  1051 ;; Return value:  Size  Location     Type
  1052 ;;                  1    wreg      void 
  1053 ;; Registers used:
  1054 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1055 ;; Tracked objects:
  1056 ;;		On entry : B00/0
  1057 ;;		On exit  : 0/0
  1058 ;;		Unchanged: 0/0
  1059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1060 ;;      Params:         0       0       0       0       0
  1061 ;;      Locals:         0       0       0       0       0
  1062 ;;      Temps:          0       3       0       0       0
  1063 ;;      Totals:         0       3       0       0       0
  1064 ;;Total ram usage:        3 bytes
  1065 ;; Hardware stack levels required when called: 5
  1066 ;; This function calls:
  1067 ;;		_Auto
  1068 ;;		_LCD_Clear
  1069 ;;		_LCD_Init
  1070 ;;		_LCD_Set_Cursor
  1071 ;;		_LCD_Write_String
  1072 ;;		_Test
  1073 ;;		_Write_IC
  1074 ;;		___bmul
  1075 ;;		___lwmod
  1076 ;; This function is called by:
  1077 ;;		Startup code after reset
  1078 ;; This function uses a non-reentrant model
  1079 ;;
  1080                           
  1081     0079                     _main:	
  1082                           ;psect for function _main
  1083                           
  1084     0079                     l2376:	
  1085                           ;incstack = 0
  1086                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1087                           
  1088                           
  1089                           ;main.c: 10:   TRISA0=1;
  1090     0079  1683               	bsf	3,5	;RP0=1, select bank1
  1091     007A  1303               	bcf	3,6	;RP1=0, select bank1
  1092     007B  1405               	bsf	5,0	;volatile
  1093                           
  1094                           ;main.c: 11:   TRISA1=1;
  1095     007C  1485               	bsf	5,1	;volatile
  1096                           
  1097                           ;main.c: 12:   TRISA2=1;
  1098     007D  1505               	bsf	5,2	;volatile
  1099                           
  1100                           ;main.c: 13:   TRISA3=1;
  1101     007E  1585               	bsf	5,3	;volatile
  1102                           
  1103                           ;main.c: 14:   TRISA4=1;
  1104     007F  1605               	bsf	5,4	;volatile
  1105     0080                     l2378:
  1106                           
  1107                           ;main.c: 15:   ADCON0=0X00;
  1108     0080  1283               	bcf	3,5	;RP0=0, select bank0
  1109     0081  1303               	bcf	3,6	;RP1=0, select bank0
  1110     0082  019F               	clrf	31	;volatile
  1111     0083                     l2380:
  1112                           
  1113                           ;main.c: 16:   ADCON1=0X06;
  1114     0083  3006               	movlw	6
  1115     0084  1683               	bsf	3,5	;RP0=1, select bank1
  1116     0085  1303               	bcf	3,6	;RP1=0, select bank1
  1117     0086  009F               	movwf	31	;volatile
  1118     0087                     l2382:
  1119                           
  1120                           ;main.c: 17:   LCD_Init();
  1121     0087  120A  118A  2012  120A  118A  	fcall	_LCD_Init
  1122     008C                     l2384:
  1123                           
  1124                           ;main.c: 18:   LCD_Clear();
  1125     008C  120A  158A  21C3  120A  118A  	fcall	_LCD_Clear
  1126     0091                     l2386:
  1127                           
  1128                           ;main.c: 19:   LCD_Set_Cursor(1, 1);
  1129     0091  01F4               	clrf	LCD_Set_Cursor@c
  1130     0092  0AF4               	incf	LCD_Set_Cursor@c,f
  1131     0093  3001               	movlw	1
  1132     0094  120A  158A  2375  120A  118A  	fcall	_LCD_Set_Cursor
  1133     0099                     l2388:
  1134                           
  1135                           ;main.c: 20:   LCD_Write_String("IC TESTER");
  1136     0099  3088               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1137     009A  00F6               	movwf	LCD_Write_String@str
  1138     009B  3080               	movlw	128
  1139     009C  00F7               	movwf	LCD_Write_String@str+1
  1140     009D  120A  158A  22EF  120A  118A  	fcall	_LCD_Write_String
  1141     00A2                     l2390:
  1142                           
  1143                           ;main.c: 22:   {;main.c: 23:       if(RA4==1)
  1144     00A2  1283               	bcf	3,5	;RP0=0, select bank0
  1145     00A3  1303               	bcf	3,6	;RP1=0, select bank0
  1146     00A4  1E05               	btfss	5,4	;volatile
  1147     00A5  28A7               	goto	u3431
  1148     00A6  28A8               	goto	u3430
  1149     00A7                     u3431:
  1150     00A7  28E6               	goto	l2400
  1151     00A8                     u3430:
  1152     00A8                     l2392:
  1153                           
  1154                           ;main.c: 24:       {;main.c: 25:           n = (n + 1) % 10;
  1155     00A8  300A               	movlw	10
  1156     00A9  00F7               	movwf	___lwmod@divisor
  1157     00AA  3000               	movlw	0
  1158     00AB  00F8               	movwf	___lwmod@divisor+1
  1159     00AC  0869               	movf	_n,w
  1160     00AD  3E01               	addlw	1
  1161     00AE  00F9               	movwf	___lwmod@dividend
  1162     00AF  086A               	movf	_n+1,w
  1163     00B0  1803               	skipnc
  1164     00B1  3E01               	addlw	1
  1165     00B2  3E00               	addlw	0
  1166     00B3  00FA               	movwf	___lwmod@dividend+1
  1167     00B4  120A  158A  22B5  120A  118A  	fcall	___lwmod
  1168     00B9  0878               	movf	?___lwmod+1,w
  1169     00BA  1283               	bcf	3,5	;RP0=0, select bank0
  1170     00BB  1303               	bcf	3,6	;RP1=0, select bank0
  1171     00BC  00EA               	movwf	_n+1
  1172     00BD  0877               	movf	?___lwmod,w
  1173     00BE  00E9               	movwf	_n
  1174     00BF                     l2394:
  1175                           
  1176                           ;main.c: 26:           Write_IC();
  1177     00BF  120A  158A  228A  120A  118A  	fcall	_Write_IC
  1178     00C4                     l2396:
  1179                           
  1180                           ;main.c: 27:           LCD_Write_String(name[n]);
  1181     00C4  3005               	movlw	5
  1182     00C5  00F0               	movwf	___bmul@multiplicand
  1183     00C6  1283               	bcf	3,5	;RP0=0, select bank0
  1184     00C7  1303               	bcf	3,6	;RP1=0, select bank0
  1185     00C8  0869               	movf	_n,w
  1186     00C9  120A  158A  21F3  120A  118A  	fcall	___bmul
  1187     00CE  3E17               	addlw	low ((_name-__stringbase)| (0+32768))
  1188     00CF  00F6               	movwf	LCD_Write_String@str
  1189     00D0  3080               	movlw	128
  1190     00D1  00F7               	movwf	LCD_Write_String@str+1
  1191     00D2  120A  158A  22EF  120A  118A  	fcall	_LCD_Write_String
  1192     00D7                     l2398:
  1193                           
  1194                           ;main.c: 28:           _delay((unsigned long)((300)*(16000000/4000.0)));
  1195     00D7  3007               	movlw	7
  1196     00D8  1283               	bcf	3,5	;RP0=0, select bank0
  1197     00D9  1303               	bcf	3,6	;RP1=0, select bank0
  1198     00DA  00C0               	movwf	??_main+2
  1199     00DB  3017               	movlw	23
  1200     00DC  00BF               	movwf	??_main+1
  1201     00DD  3069               	movlw	105
  1202     00DE  00BE               	movwf	??_main
  1203     00DF                     u3477:
  1204     00DF  0BBE               	decfsz	??_main,f
  1205     00E0  28DF               	goto	u3477
  1206     00E1  0BBF               	decfsz	??_main+1,f
  1207     00E2  28DF               	goto	u3477
  1208     00E3  0BC0               	decfsz	??_main+2,f
  1209     00E4  28DF               	goto	u3477
  1210     00E5  28E6               	nop2
  1211     00E6                     l2400:
  1212                           
  1213                           ;main.c: 30:       if(RA3==1)
  1214     00E6  1283               	bcf	3,5	;RP0=0, select bank0
  1215     00E7  1303               	bcf	3,6	;RP1=0, select bank0
  1216     00E8  1D85               	btfss	5,3	;volatile
  1217     00E9  28EB               	goto	u3441
  1218     00EA  28EC               	goto	u3440
  1219     00EB                     u3441:
  1220     00EB  292A               	goto	l2410
  1221     00EC                     u3440:
  1222     00EC                     l2402:
  1223                           
  1224                           ;main.c: 31:       {;main.c: 32:           n = (n -1+10) % 10;
  1225     00EC  300A               	movlw	10
  1226     00ED  00F7               	movwf	___lwmod@divisor
  1227     00EE  3000               	movlw	0
  1228     00EF  00F8               	movwf	___lwmod@divisor+1
  1229     00F0  0869               	movf	_n,w
  1230     00F1  3E09               	addlw	9
  1231     00F2  00F9               	movwf	___lwmod@dividend
  1232     00F3  086A               	movf	_n+1,w
  1233     00F4  1803               	skipnc
  1234     00F5  3E01               	addlw	1
  1235     00F6  3E00               	addlw	0
  1236     00F7  00FA               	movwf	___lwmod@dividend+1
  1237     00F8  120A  158A  22B5  120A  118A  	fcall	___lwmod
  1238     00FD  0878               	movf	?___lwmod+1,w
  1239     00FE  1283               	bcf	3,5	;RP0=0, select bank0
  1240     00FF  1303               	bcf	3,6	;RP1=0, select bank0
  1241     0100  00EA               	movwf	_n+1
  1242     0101  0877               	movf	?___lwmod,w
  1243     0102  00E9               	movwf	_n
  1244     0103                     l2404:
  1245                           
  1246                           ;main.c: 33:           Write_IC();
  1247     0103  120A  158A  228A  120A  118A  	fcall	_Write_IC
  1248     0108                     l2406:
  1249                           
  1250                           ;main.c: 34:           LCD_Write_String(name[n]);
  1251     0108  3005               	movlw	5
  1252     0109  00F0               	movwf	___bmul@multiplicand
  1253     010A  1283               	bcf	3,5	;RP0=0, select bank0
  1254     010B  1303               	bcf	3,6	;RP1=0, select bank0
  1255     010C  0869               	movf	_n,w
  1256     010D  120A  158A  21F3  120A  118A  	fcall	___bmul
  1257     0112  3E17               	addlw	low ((_name-__stringbase)| (0+32768))
  1258     0113  00F6               	movwf	LCD_Write_String@str
  1259     0114  3080               	movlw	128
  1260     0115  00F7               	movwf	LCD_Write_String@str+1
  1261     0116  120A  158A  22EF  120A  118A  	fcall	_LCD_Write_String
  1262     011B                     l2408:
  1263                           
  1264                           ;main.c: 35:           _delay((unsigned long)((300)*(16000000/4000.0)));
  1265     011B  3007               	movlw	7
  1266     011C  1283               	bcf	3,5	;RP0=0, select bank0
  1267     011D  1303               	bcf	3,6	;RP1=0, select bank0
  1268     011E  00C0               	movwf	??_main+2
  1269     011F  3017               	movlw	23
  1270     0120  00BF               	movwf	??_main+1
  1271     0121  3069               	movlw	105
  1272     0122  00BE               	movwf	??_main
  1273     0123                     u3487:
  1274     0123  0BBE               	decfsz	??_main,f
  1275     0124  2923               	goto	u3487
  1276     0125  0BBF               	decfsz	??_main+1,f
  1277     0126  2923               	goto	u3487
  1278     0127  0BC0               	decfsz	??_main+2,f
  1279     0128  2923               	goto	u3487
  1280     0129  292A               	nop2
  1281     012A                     l2410:
  1282                           
  1283                           ;main.c: 37:       if(RA1==1)
  1284     012A  1283               	bcf	3,5	;RP0=0, select bank0
  1285     012B  1303               	bcf	3,6	;RP1=0, select bank0
  1286     012C  1C85               	btfss	5,1	;volatile
  1287     012D  292F               	goto	u3451
  1288     012E  2930               	goto	u3450
  1289     012F                     u3451:
  1290     012F  2962               	goto	l2416
  1291     0130                     u3450:
  1292     0130                     l2412:
  1293                           
  1294                           ;main.c: 38:       {;main.c: 39:           Write_IC();
  1295     0130  120A  158A  228A  120A  118A  	fcall	_Write_IC
  1296                           
  1297                           ;main.c: 40:           LCD_Write_String(name[n]);
  1298     0135  3005               	movlw	5
  1299     0136  00F0               	movwf	___bmul@multiplicand
  1300     0137  1283               	bcf	3,5	;RP0=0, select bank0
  1301     0138  1303               	bcf	3,6	;RP1=0, select bank0
  1302     0139  0869               	movf	_n,w
  1303     013A  120A  158A  21F3  120A  118A  	fcall	___bmul
  1304     013F  3E17               	addlw	low ((_name-__stringbase)| (0+32768))
  1305     0140  00F6               	movwf	LCD_Write_String@str
  1306     0141  3080               	movlw	128
  1307     0142  00F7               	movwf	LCD_Write_String@str+1
  1308     0143  120A  158A  22EF  120A  118A  	fcall	_LCD_Write_String
  1309                           
  1310                           ;main.c: 41:           Test(n);
  1311     0148  1283               	bcf	3,5	;RP0=0, select bank0
  1312     0149  1303               	bcf	3,6	;RP1=0, select bank0
  1313     014A  086A               	movf	_n+1,w
  1314     014B  00BD               	movwf	Test@n+1
  1315     014C  0869               	movf	_n,w
  1316     014D  00BC               	movwf	Test@n
  1317     014E  120A  158A  245A  120A  118A  	fcall	_Test
  1318     0153                     l2414:
  1319                           
  1320                           ;main.c: 42:           _delay((unsigned long)((300)*(16000000/4000.0)));
  1321     0153  3007               	movlw	7
  1322     0154  1283               	bcf	3,5	;RP0=0, select bank0
  1323     0155  1303               	bcf	3,6	;RP1=0, select bank0
  1324     0156  00C0               	movwf	??_main+2
  1325     0157  3017               	movlw	23
  1326     0158  00BF               	movwf	??_main+1
  1327     0159  3069               	movlw	105
  1328     015A  00BE               	movwf	??_main
  1329     015B                     u3497:
  1330     015B  0BBE               	decfsz	??_main,f
  1331     015C  295B               	goto	u3497
  1332     015D  0BBF               	decfsz	??_main+1,f
  1333     015E  295B               	goto	u3497
  1334     015F  0BC0               	decfsz	??_main+2,f
  1335     0160  295B               	goto	u3497
  1336     0161  2962               	nop2
  1337     0162                     l2416:
  1338                           
  1339                           ;main.c: 44:       if(RA0==1)
  1340     0162  1283               	bcf	3,5	;RP0=0, select bank0
  1341     0163  1303               	bcf	3,6	;RP1=0, select bank0
  1342     0164  1C05               	btfss	5,0	;volatile
  1343     0165  2967               	goto	u3461
  1344     0166  2968               	goto	u3460
  1345     0167                     u3461:
  1346     0167  2992               	goto	l2426
  1347     0168                     u3460:
  1348     0168                     l2418:
  1349                           
  1350                           ;main.c: 45:       {;main.c: 46:           LCD_Clear();
  1351     0168  120A  158A  21C3  120A  118A  	fcall	_LCD_Clear
  1352                           
  1353                           ;main.c: 47:           LCD_Set_Cursor(1, 1);
  1354     016D  01F4               	clrf	LCD_Set_Cursor@c
  1355     016E  0AF4               	incf	LCD_Set_Cursor@c,f
  1356     016F  3001               	movlw	1
  1357     0170  120A  158A  2375  120A  118A  	fcall	_LCD_Set_Cursor
  1358     0175                     l2420:
  1359                           
  1360                           ;main.c: 48:           LCD_Write_String("IC Auto...");
  1361     0175  3073               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1362     0176  00F6               	movwf	LCD_Write_String@str
  1363     0177  3080               	movlw	128
  1364     0178  00F7               	movwf	LCD_Write_String@str+1
  1365     0179  120A  158A  22EF  120A  118A  	fcall	_LCD_Write_String
  1366     017E                     l2422:
  1367                           
  1368                           ;main.c: 49:           Auto();
  1369     017E  120A  158A  26F6  120A  118A  	fcall	_Auto
  1370     0183                     l2424:
  1371                           
  1372                           ;main.c: 50:           _delay((unsigned long)((300)*(16000000/4000.0)));
  1373     0183  3007               	movlw	7
  1374     0184  1283               	bcf	3,5	;RP0=0, select bank0
  1375     0185  1303               	bcf	3,6	;RP1=0, select bank0
  1376     0186  00C0               	movwf	??_main+2
  1377     0187  3017               	movlw	23
  1378     0188  00BF               	movwf	??_main+1
  1379     0189  3069               	movlw	105
  1380     018A  00BE               	movwf	??_main
  1381     018B                     u3507:
  1382     018B  0BBE               	decfsz	??_main,f
  1383     018C  298B               	goto	u3507
  1384     018D  0BBF               	decfsz	??_main+1,f
  1385     018E  298B               	goto	u3507
  1386     018F  0BC0               	decfsz	??_main+2,f
  1387     0190  298B               	goto	u3507
  1388     0191  2992               	nop2
  1389     0192                     l2426:
  1390                           
  1391                           ;main.c: 52:       if(RA2==1)
  1392     0192  28A2               	goto	l2390
  1393     0193  120A  118A  2800   	ljmp	start
  1394     0196                     __end_of_main:
  1395                           
  1396                           	psect	text1
  1397     0C5A                     __ptext1:	
  1398 ;; *************** function _Test *****************
  1399 ;; Defined at:
  1400 ;;		line 58 in file "main.c"
  1401 ;; Parameters:    Size  Location     Type
  1402 ;;  n               2   28[BANK0 ] unsigned int 
  1403 ;; Auto vars:     Size  Location     Type
  1404 ;;		None
  1405 ;; Return value:  Size  Location     Type
  1406 ;;                  1    wreg      void 
  1407 ;; Registers used:
  1408 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1409 ;; Tracked objects:
  1410 ;;		On entry : 0/0
  1411 ;;		On exit  : 0/0
  1412 ;;		Unchanged: 0/0
  1413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1414 ;;      Params:         0       2       0       0       0
  1415 ;;      Locals:         0       0       0       0       0
  1416 ;;      Temps:          0       0       0       0       0
  1417 ;;      Totals:         0       2       0       0       0
  1418 ;;Total ram usage:        2 bytes
  1419 ;; Hardware stack levels used: 1
  1420 ;; Hardware stack levels required when called: 4
  1421 ;; This function calls:
  1422 ;;		_Mode_4
  1423 ;;		_Mode_6
  1424 ;;		_TRI_NAN
  1425 ;;		_gate_1
  1426 ;;		_print
  1427 ;; This function is called by:
  1428 ;;		_main
  1429 ;; This function uses a non-reentrant model
  1430 ;;
  1431                           
  1432     0C5A                     _Test:	
  1433                           ;psect for function _Test
  1434                           
  1435     0C5A                     l2286:	
  1436                           ;incstack = 0
  1437                           ; Regs used in _Test: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1438                           
  1439                           
  1440                           ;main.c: 58: void Test(unsigned int n);main.c: 59: {;main.c: 60:     if(n==0){
  1441     0C5A  1283               	bcf	3,5	;RP0=0, select bank0
  1442     0C5B  1303               	bcf	3,6	;RP1=0, select bank0
  1443     0C5C  083C               	movf	Test@n,w
  1444     0C5D  043D               	iorwf	Test@n+1,w
  1445     0C5E  1D03               	btfss	3,2
  1446     0C5F  2C61               	goto	u3351
  1447     0C60  2C62               	goto	u3350
  1448     0C61                     u3351:
  1449     0C61  2C7B               	goto	l2294
  1450     0C62                     u3350:
  1451     0C62                     l2288:
  1452                           
  1453                           ;main.c: 61:         Mode_6();
  1454     0C62  120A  118A  2196  120A  158A  	fcall	_Mode_6
  1455     0C67                     l2290:
  1456                           
  1457                           ;main.c: 62:         print(0,6);
  1458     0C67  3000               	movlw	0
  1459     0C68  1283               	bcf	3,5	;RP0=0, select bank0
  1460     0C69  1303               	bcf	3,6	;RP1=0, select bank0
  1461     0C6A  00AD               	movwf	print@n
  1462     0C6B  00AE               	movwf	print@n+1
  1463     0C6C  3006               	movlw	6
  1464     0C6D  00AF               	movwf	print@no
  1465     0C6E  3000               	movlw	0
  1466     0C6F  00B0               	movwf	print@no+1
  1467     0C70  120A  158A  24B2  120A  158A  	fcall	_print
  1468     0C75                     l2292:
  1469                           
  1470                           ;main.c: 63:         gate_1();}
  1471     0C75  120A  158A  2222  120A  158A  	fcall	_gate_1
  1472     0C7A  2CB1               	goto	l165
  1473     0C7B                     l2294:
  1474     0C7B  083C               	movf	Test@n,w
  1475     0C7C  043D               	iorwf	Test@n+1,w
  1476     0C7D  1903               	btfsc	3,2
  1477     0C7E  2C80               	goto	u3361
  1478     0C7F  2C81               	goto	u3360
  1479     0C80                     u3361:
  1480     0C80  2C9F               	goto	l2304
  1481     0C81                     u3360:
  1482     0C81                     l2296:
  1483     0C81  3000               	movlw	0
  1484     0C82  023D               	subwf	Test@n+1,w
  1485     0C83  3006               	movlw	6
  1486     0C84  1903               	skipnz
  1487     0C85  023C               	subwf	Test@n,w
  1488     0C86  1803               	skipnc
  1489     0C87  2C89               	goto	u3371
  1490     0C88  2C8A               	goto	u3370
  1491     0C89                     u3371:
  1492     0C89  2C9F               	goto	l2304
  1493     0C8A                     u3370:
  1494     0C8A                     l2298:
  1495                           
  1496                           ;main.c: 65:         Mode_4();
  1497     0C8A  120A  118A  251C  120A  158A  	fcall	_Mode_4
  1498     0C8F                     l2300:
  1499                           
  1500                           ;main.c: 66:         print(n,4);
  1501     0C8F  1283               	bcf	3,5	;RP0=0, select bank0
  1502     0C90  1303               	bcf	3,6	;RP1=0, select bank0
  1503     0C91  083D               	movf	Test@n+1,w
  1504     0C92  00AE               	movwf	print@n+1
  1505     0C93  083C               	movf	Test@n,w
  1506     0C94  00AD               	movwf	print@n
  1507     0C95  3004               	movlw	4
  1508     0C96  00AF               	movwf	print@no
  1509     0C97  3000               	movlw	0
  1510     0C98  00B0               	movwf	print@no+1
  1511     0C99  120A  158A  24B2  120A  158A  	fcall	_print
  1512     0C9E  2C75               	goto	l2292
  1513     0C9F                     l2304:
  1514     0C9F  3000               	movlw	0
  1515     0CA0  023D               	subwf	Test@n+1,w
  1516     0CA1  3006               	movlw	6
  1517     0CA2  1903               	skipnz
  1518     0CA3  023C               	subwf	Test@n,w
  1519     0CA4  1C03               	skipc
  1520     0CA5  2CA7               	goto	u3381
  1521     0CA6  2CA8               	goto	u3380
  1522     0CA7                     u3381:
  1523     0CA7  2CB1               	goto	l165
  1524     0CA8                     u3380:
  1525     0CA8                     l2306:
  1526                           
  1527                           ;main.c: 69:         TRI_NAN(n);
  1528     0CA8  083D               	movf	Test@n+1,w
  1529     0CA9  00A1               	movwf	TRI_NAN@ic_num+1
  1530     0CAA  083C               	movf	Test@n,w
  1531     0CAB  00A0               	movwf	TRI_NAN@ic_num
  1532     0CAC  120A  118A  2333  120A  158A  	fcall	_TRI_NAN
  1533     0CB1                     l165:
  1534     0CB1  0008               	return
  1535     0CB2                     __end_of_Test:
  1536                           
  1537                           	psect	text2
  1538     0333                     __ptext2:	
  1539 ;; *************** function _TRI_NAN *****************
  1540 ;; Defined at:
  1541 ;;		line 176 in file "TTL_Logic.c"
  1542 ;; Parameters:    Size  Location     Type
  1543 ;;  ic_num          2    0[BANK0 ] unsigned int 
  1544 ;; Auto vars:     Size  Location     Type
  1545 ;;		None
  1546 ;; Return value:  Size  Location     Type
  1547 ;;                  1    wreg      void 
  1548 ;; Registers used:
  1549 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1550 ;; Tracked objects:
  1551 ;;		On entry : 0/0
  1552 ;;		On exit  : 0/0
  1553 ;;		Unchanged: 0/0
  1554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1555 ;;      Params:         0       2       0       0       0
  1556 ;;      Locals:         0       0       0       0       0
  1557 ;;      Temps:          0       3       0       0       0
  1558 ;;      Totals:         0       5       0       0       0
  1559 ;;Total ram usage:        5 bytes
  1560 ;; Hardware stack levels used: 1
  1561 ;; Hardware stack levels required when called: 3
  1562 ;; This function calls:
  1563 ;;		_LCD_Set_Cursor
  1564 ;;		_LCD_Write_String
  1565 ;;		_TRI_GOOD
  1566 ;; This function is called by:
  1567 ;;		_Test
  1568 ;; This function uses a non-reentrant model
  1569 ;;
  1570                           
  1571     0333                     _TRI_NAN:	
  1572                           ;psect for function _TRI_NAN
  1573                           
  1574     0333                     l2150:	
  1575                           ;incstack = 0
  1576                           ; Regs used in _TRI_NAN: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1577                           
  1578                           
  1579                           ;TTL_Logic.c: 177:     x=0;
  1580     0333  1283               	bcf	3,5	;RP0=0, select bank0
  1581     0334  1303               	bcf	3,6	;RP1=0, select bank0
  1582     0335  01D1               	clrf	_x
  1583     0336  01D2               	clrf	_x+1
  1584     0337                     l2152:
  1585                           
  1586                           ;TTL_Logic.c: 178:     LCD_Set_Cursor(2,1);
  1587     0337  01F4               	clrf	LCD_Set_Cursor@c
  1588     0338  0AF4               	incf	LCD_Set_Cursor@c,f
  1589     0339  3002               	movlw	2
  1590     033A  120A  158A  2375  120A  118A  	fcall	_LCD_Set_Cursor
  1591     033F                     l2154:
  1592                           
  1593                           ;TTL_Logic.c: 179:     if(ic_num==4075){
  1594     033F  30EB               	movlw	235
  1595     0340  1283               	bcf	3,5	;RP0=0, select bank0
  1596     0341  1303               	bcf	3,6	;RP1=0, select bank0
  1597     0342  0620               	xorwf	TRI_NAN@ic_num,w
  1598     0343  300F               	movlw	15
  1599     0344  1903               	skipnz
  1600     0345  0621               	xorwf	TRI_NAN@ic_num+1,w
  1601     0346  1D03               	btfss	3,2
  1602     0347  2B49               	goto	u2921
  1603     0348  2B4A               	goto	u2920
  1604     0349                     u2921:
  1605     0349  2B6B               	goto	l327
  1606     034A                     u2920:
  1607     034A                     l2156:
  1608                           
  1609                           ;TTL_Logic.c: 180:         TRISB0=TRISD7=TRISD6=TRISD5=TRISD4=TRISB6=TRISB3=TRISB2=TRISB
      +                          1=0;
  1610     034A  1683               	bsf	3,5	;RP0=1, select bank1
  1611     034B  1303               	bcf	3,6	;RP1=0, select bank1
  1612     034C  1086               	bcf	6,1	;volatile
  1613     034D  1106               	bcf	6,2	;volatile
  1614     034E  1186               	bcf	6,3	;volatile
  1615     034F  1306               	bcf	6,6	;volatile
  1616     0350  1208               	bcf	8,4	;volatile
  1617     0351  1288               	bcf	8,5	;volatile
  1618     0352  1308               	bcf	8,6	;volatile
  1619     0353  1388               	bcf	8,7	;volatile
  1620     0354  1006               	bcf	6,0	;volatile
  1621                           
  1622                           ;TTL_Logic.c: 181:         TRISB4=TRISB5=TRISD3=1;}
  1623     0355  1588               	bsf	8,3	;volatile
  1624     0356  1988               	btfsc	8,3	;volatile
  1625     0357  2B59               	goto	u2931
  1626     0358  2B5D               	goto	u2930
  1627     0359                     u2931:
  1628     0359  1683               	bsf	3,5	;RP0=1, select bank1
  1629     035A  1303               	bcf	3,6	;RP1=0, select bank1
  1630     035B  1686               	bsf	6,5	;volatile
  1631     035C  2B60               	goto	u2944
  1632     035D                     u2930:
  1633     035D  1683               	bsf	3,5	;RP0=1, select bank1
  1634     035E  1303               	bcf	3,6	;RP1=0, select bank1
  1635     035F  1286               	bcf	6,5	;volatile
  1636     0360                     u2944:
  1637     0360  1A86               	btfsc	6,5	;volatile
  1638     0361  2B63               	goto	u2941
  1639     0362  2B67               	goto	u2940
  1640     0363                     u2941:
  1641     0363  1683               	bsf	3,5	;RP0=1, select bank1
  1642     0364  1303               	bcf	3,6	;RP1=0, select bank1
  1643     0365  1606               	bsf	6,4	;volatile
  1644     0366  2B6A               	goto	u2954
  1645     0367                     u2940:
  1646     0367  1683               	bsf	3,5	;RP0=1, select bank1
  1647     0368  1303               	bcf	3,6	;RP1=0, select bank1
  1648     0369  1206               	bcf	6,4	;volatile
  1649     036A                     u2954:
  1650     036A  2B8B               	goto	l2158
  1651     036B                     l327:	
  1652                           ;TTL_Logic.c: 182:     else{
  1653                           
  1654                           
  1655                           ;TTL_Logic.c: 183:     TRISB0=TRISD7=TRISD6=TRISD5=TRISD4=TRISB5=TRISB4=TRISB3=TRISB1=0;
  1656     036B  1683               	bsf	3,5	;RP0=1, select bank1
  1657     036C  1303               	bcf	3,6	;RP1=0, select bank1
  1658     036D  1086               	bcf	6,1	;volatile
  1659     036E  1186               	bcf	6,3	;volatile
  1660     036F  1206               	bcf	6,4	;volatile
  1661     0370  1286               	bcf	6,5	;volatile
  1662     0371  1208               	bcf	8,4	;volatile
  1663     0372  1288               	bcf	8,5	;volatile
  1664     0373  1308               	bcf	8,6	;volatile
  1665     0374  1388               	bcf	8,7	;volatile
  1666     0375  1006               	bcf	6,0	;volatile
  1667                           
  1668                           ;TTL_Logic.c: 184:     TRISD3=TRISB6=TRISB2=1;}
  1669     0376  1506               	bsf	6,2	;volatile
  1670     0377  1906               	btfsc	6,2	;volatile
  1671     0378  2B7A               	goto	u2961
  1672     0379  2B7E               	goto	u2960
  1673     037A                     u2961:
  1674     037A  1683               	bsf	3,5	;RP0=1, select bank1
  1675     037B  1303               	bcf	3,6	;RP1=0, select bank1
  1676     037C  1706               	bsf	6,6	;volatile
  1677     037D  2B81               	goto	u2974
  1678     037E                     u2960:
  1679     037E  1683               	bsf	3,5	;RP0=1, select bank1
  1680     037F  1303               	bcf	3,6	;RP1=0, select bank1
  1681     0380  1306               	bcf	6,6	;volatile
  1682     0381                     u2974:
  1683     0381  1B06               	btfsc	6,6	;volatile
  1684     0382  2B84               	goto	u2971
  1685     0383  2B88               	goto	u2970
  1686     0384                     u2971:
  1687     0384  1683               	bsf	3,5	;RP0=1, select bank1
  1688     0385  1303               	bcf	3,6	;RP1=0, select bank1
  1689     0386  1588               	bsf	8,3	;volatile
  1690     0387  2B8B               	goto	u2984
  1691     0388                     u2970:
  1692     0388  1683               	bsf	3,5	;RP0=1, select bank1
  1693     0389  1303               	bcf	3,6	;RP1=0, select bank1
  1694     038A  1188               	bcf	8,3	;volatile
  1695     038B                     u2984:
  1696     038B                     l2158:
  1697                           
  1698                           ;TTL_Logic.c: 185:     _delay((unsigned long)((50)*(16000000/4000.0)));
  1699     038B  3002               	movlw	2
  1700     038C  1283               	bcf	3,5	;RP0=0, select bank0
  1701     038D  1303               	bcf	3,6	;RP1=0, select bank0
  1702     038E  00A4               	movwf	??_TRI_NAN+2
  1703     038F  3004               	movlw	4
  1704     0390  00A3               	movwf	??_TRI_NAN+1
  1705     0391  30B9               	movlw	185
  1706     0392  00A2               	movwf	??_TRI_NAN
  1707     0393                     u3517:
  1708     0393  0BA2               	decfsz	??_TRI_NAN,f
  1709     0394  2B93               	goto	u3517
  1710     0395  0BA3               	decfsz	??_TRI_NAN+1,f
  1711     0396  2B93               	goto	u3517
  1712     0397  0BA4               	decfsz	??_TRI_NAN+2,f
  1713     0398  2B93               	goto	u3517
  1714     0399  2B9A               	nop2
  1715     039A                     l2160:
  1716                           
  1717                           ;TTL_Logic.c: 186:     for(i=0;i<2;i++){
  1718     039A  1283               	bcf	3,5	;RP0=0, select bank0
  1719     039B  1303               	bcf	3,6	;RP1=0, select bank0
  1720     039C  01D9               	clrf	_i
  1721     039D  01DA               	clrf	_i+1
  1722     039E                     l2162:
  1723     039E  3000               	movlw	0
  1724     039F  025A               	subwf	_i+1,w
  1725     03A0  3002               	movlw	2
  1726     03A1  1903               	skipnz
  1727     03A2  0259               	subwf	_i,w
  1728     03A3  1C03               	skipc
  1729     03A4  2BA6               	goto	u2991
  1730     03A5  2BA7               	goto	u2990
  1731     03A6                     u2991:
  1732     03A6  2BA8               	goto	l2166
  1733     03A7                     u2990:
  1734     03A7  2CFA               	goto	l2210
  1735     03A8                     l2166:
  1736                           
  1737                           ;TTL_Logic.c: 187:         for(j=0;j<2;j++){
  1738     03A8  01D7               	clrf	_j
  1739     03A9  01D8               	clrf	_j+1
  1740     03AA                     l2168:
  1741     03AA  3000               	movlw	0
  1742     03AB  0258               	subwf	_j+1,w
  1743     03AC  3002               	movlw	2
  1744     03AD  1903               	skipnz
  1745     03AE  0257               	subwf	_j,w
  1746     03AF  1C03               	skipc
  1747     03B0  2BB2               	goto	u3001
  1748     03B1  2BB3               	goto	u3000
  1749     03B2                     u3001:
  1750     03B2  2BB4               	goto	l2172
  1751     03B3                     u3000:
  1752     03B3  2CEB               	goto	l2208
  1753     03B4                     l2172:
  1754                           
  1755                           ;TTL_Logic.c: 188:             for(k=0;k<2;k++){
  1756     03B4  01D5               	clrf	_k
  1757     03B5  01D6               	clrf	_k+1
  1758     03B6                     l2174:
  1759     03B6  3000               	movlw	0
  1760     03B7  0256               	subwf	_k+1,w
  1761     03B8  3002               	movlw	2
  1762     03B9  1903               	skipnz
  1763     03BA  0255               	subwf	_k,w
  1764     03BB  1C03               	skipc
  1765     03BC  2BBE               	goto	u3011
  1766     03BD  2BBF               	goto	u3010
  1767     03BE                     u3011:
  1768     03BE  2BC0               	goto	l2178
  1769     03BF                     u3010:
  1770     03BF  2CDC               	goto	l2206
  1771     03C0                     l2178:
  1772                           
  1773                           ;TTL_Logic.c: 189:                 if(ic_num==4075){
  1774     03C0  30EB               	movlw	235
  1775     03C1  0620               	xorwf	TRI_NAN@ic_num,w
  1776     03C2  300F               	movlw	15
  1777     03C3  1903               	skipnz
  1778     03C4  0621               	xorwf	TRI_NAN@ic_num+1,w
  1779     03C5  1D03               	btfss	3,2
  1780     03C6  2BC8               	goto	u3021
  1781     03C7  2BC9               	goto	u3020
  1782     03C8                     u3021:
  1783     03C8  2C46               	goto	l335
  1784     03C9                     u3020:
  1785     03C9                     l2180:
  1786                           
  1787                           ;TTL_Logic.c: 190:                     RB1=RB0=RD6=(__bit)i;
  1788     03C9  1859               	btfsc	_i,0
  1789     03CA  2BCC               	goto	u3031
  1790     03CB  2BD0               	goto	u3030
  1791     03CC                     u3031:
  1792     03CC  1283               	bcf	3,5	;RP0=0, select bank0
  1793     03CD  1303               	bcf	3,6	;RP1=0, select bank0
  1794     03CE  1708               	bsf	8,6	;volatile
  1795     03CF  2BD3               	goto	u3044
  1796     03D0                     u3030:
  1797     03D0  1283               	bcf	3,5	;RP0=0, select bank0
  1798     03D1  1303               	bcf	3,6	;RP1=0, select bank0
  1799     03D2  1308               	bcf	8,6	;volatile
  1800     03D3                     u3044:
  1801     03D3  1B08               	btfsc	8,6	;volatile
  1802     03D4  2BD6               	goto	u3041
  1803     03D5  2BDA               	goto	u3040
  1804     03D6                     u3041:
  1805     03D6  1283               	bcf	3,5	;RP0=0, select bank0
  1806     03D7  1303               	bcf	3,6	;RP1=0, select bank0
  1807     03D8  1406               	bsf	6,0	;volatile
  1808     03D9  2BDD               	goto	u3054
  1809     03DA                     u3040:
  1810     03DA  1283               	bcf	3,5	;RP0=0, select bank0
  1811     03DB  1303               	bcf	3,6	;RP1=0, select bank0
  1812     03DC  1006               	bcf	6,0	;volatile
  1813     03DD                     u3054:
  1814     03DD  1806               	btfsc	6,0	;volatile
  1815     03DE  2BE0               	goto	u3051
  1816     03DF  2BE4               	goto	u3050
  1817     03E0                     u3051:
  1818     03E0  1283               	bcf	3,5	;RP0=0, select bank0
  1819     03E1  1303               	bcf	3,6	;RP1=0, select bank0
  1820     03E2  1486               	bsf	6,1	;volatile
  1821     03E3  2BE7               	goto	u3064
  1822     03E4                     u3050:
  1823     03E4  1283               	bcf	3,5	;RP0=0, select bank0
  1824     03E5  1303               	bcf	3,6	;RP1=0, select bank0
  1825     03E6  1086               	bcf	6,1	;volatile
  1826     03E7                     u3064:
  1827                           
  1828                           ;TTL_Logic.c: 191:                     RB2=RD7=RD5=(__bit)j;
  1829     03E7  1857               	btfsc	_j,0
  1830     03E8  2BEA               	goto	u3071
  1831     03E9  2BEE               	goto	u3070
  1832     03EA                     u3071:
  1833     03EA  1283               	bcf	3,5	;RP0=0, select bank0
  1834     03EB  1303               	bcf	3,6	;RP1=0, select bank0
  1835     03EC  1688               	bsf	8,5	;volatile
  1836     03ED  2BF1               	goto	u3084
  1837     03EE                     u3070:
  1838     03EE  1283               	bcf	3,5	;RP0=0, select bank0
  1839     03EF  1303               	bcf	3,6	;RP1=0, select bank0
  1840     03F0  1288               	bcf	8,5	;volatile
  1841     03F1                     u3084:
  1842     03F1  1A88               	btfsc	8,5	;volatile
  1843     03F2  2BF4               	goto	u3081
  1844     03F3  2BF8               	goto	u3080
  1845     03F4                     u3081:
  1846     03F4  1283               	bcf	3,5	;RP0=0, select bank0
  1847     03F5  1303               	bcf	3,6	;RP1=0, select bank0
  1848     03F6  1788               	bsf	8,7	;volatile
  1849     03F7  2BFB               	goto	u3094
  1850     03F8                     u3080:
  1851     03F8  1283               	bcf	3,5	;RP0=0, select bank0
  1852     03F9  1303               	bcf	3,6	;RP1=0, select bank0
  1853     03FA  1388               	bcf	8,7	;volatile
  1854     03FB                     u3094:
  1855     03FB  1B88               	btfsc	8,7	;volatile
  1856     03FC  2BFE               	goto	u3091
  1857     03FD  2C02               	goto	u3090
  1858     03FE                     u3091:
  1859     03FE  1283               	bcf	3,5	;RP0=0, select bank0
  1860     03FF  1303               	bcf	3,6	;RP1=0, select bank0
  1861     0400  1506               	bsf	6,2	;volatile
  1862     0401  2C05               	goto	u3104
  1863     0402                     u3090:
  1864     0402  1283               	bcf	3,5	;RP0=0, select bank0
  1865     0403  1303               	bcf	3,6	;RP1=0, select bank0
  1866     0404  1106               	bcf	6,2	;volatile
  1867     0405                     u3104:
  1868                           
  1869                           ;TTL_Logic.c: 192:                     RB3=RB6=RD4=(__bit)k;
  1870     0405  1855               	btfsc	_k,0
  1871     0406  2C08               	goto	u3111
  1872     0407  2C0C               	goto	u3110
  1873     0408                     u3111:
  1874     0408  1283               	bcf	3,5	;RP0=0, select bank0
  1875     0409  1303               	bcf	3,6	;RP1=0, select bank0
  1876     040A  1608               	bsf	8,4	;volatile
  1877     040B  2C0F               	goto	u3124
  1878     040C                     u3110:
  1879     040C  1283               	bcf	3,5	;RP0=0, select bank0
  1880     040D  1303               	bcf	3,6	;RP1=0, select bank0
  1881     040E  1208               	bcf	8,4	;volatile
  1882     040F                     u3124:
  1883     040F  1A08               	btfsc	8,4	;volatile
  1884     0410  2C12               	goto	u3121
  1885     0411  2C16               	goto	u3120
  1886     0412                     u3121:
  1887     0412  1283               	bcf	3,5	;RP0=0, select bank0
  1888     0413  1303               	bcf	3,6	;RP1=0, select bank0
  1889     0414  1706               	bsf	6,6	;volatile
  1890     0415  2C19               	goto	u3134
  1891     0416                     u3120:
  1892     0416  1283               	bcf	3,5	;RP0=0, select bank0
  1893     0417  1303               	bcf	3,6	;RP1=0, select bank0
  1894     0418  1306               	bcf	6,6	;volatile
  1895     0419                     u3134:
  1896     0419  1B06               	btfsc	6,6	;volatile
  1897     041A  2C1C               	goto	u3131
  1898     041B  2C20               	goto	u3130
  1899     041C                     u3131:
  1900     041C  1283               	bcf	3,5	;RP0=0, select bank0
  1901     041D  1303               	bcf	3,6	;RP1=0, select bank0
  1902     041E  1586               	bsf	6,3	;volatile
  1903     041F  2C23               	goto	u3144
  1904     0420                     u3130:
  1905     0420  1283               	bcf	3,5	;RP0=0, select bank0
  1906     0421  1303               	bcf	3,6	;RP1=0, select bank0
  1907     0422  1186               	bcf	6,3	;volatile
  1908     0423                     u3144:
  1909     0423                     l2182:
  1910                           
  1911                           ;TTL_Logic.c: 193:                     _delay((unsigned long)((10)*(16000000/4000.0)));
  1912     0423  3034               	movlw	52
  1913     0424  1283               	bcf	3,5	;RP0=0, select bank0
  1914     0425  1303               	bcf	3,6	;RP1=0, select bank0
  1915     0426  00A3               	movwf	??_TRI_NAN+1
  1916     0427  30F1               	movlw	241
  1917     0428  00A2               	movwf	??_TRI_NAN
  1918     0429                     u3527:
  1919     0429  0BA2               	decfsz	??_TRI_NAN,f
  1920     042A  2C29               	goto	u3527
  1921     042B  0BA3               	decfsz	??_TRI_NAN+1,f
  1922     042C  2C29               	goto	u3527
  1923     042D                     l2184:
  1924                           
  1925                           ;TTL_Logic.c: 194:                     gate1[x]=RB4;
  1926     042D  1283               	bcf	3,5	;RP0=0, select bank0
  1927     042E  1303               	bcf	3,6	;RP1=0, select bank0
  1928     042F  0851               	movf	_x,w
  1929     0430  3E49               	addlw	(low (_gate1| 0))& (0+255)
  1930     0431  0084               	movwf	4
  1931     0432  3000               	movlw	0
  1932     0433  1A06               	btfsc	6,4	;volatile
  1933     0434  3001               	movlw	1
  1934     0435  1383               	bcf	3,7	;select IRP bank0
  1935     0436  0080               	movwf	0
  1936     0437                     l2186:
  1937                           
  1938                           ;TTL_Logic.c: 195:                     gate2[x]=RB5;
  1939     0437  0851               	movf	_x,w
  1940     0438  3E41               	addlw	(low (_gate2| 0))& (0+255)
  1941     0439  0084               	movwf	4
  1942     043A  3000               	movlw	0
  1943     043B  1A86               	btfsc	6,5	;volatile
  1944     043C  3001               	movlw	1
  1945     043D  0080               	movwf	0
  1946     043E                     l2188:
  1947                           
  1948                           ;TTL_Logic.c: 196:                     gate3[x]=RD3;}
  1949     043E  0851               	movf	_x,w
  1950     043F  3EB0               	addlw	(low (_gate3| 0))& (0+255)
  1951     0440  0084               	movwf	4
  1952     0441  3000               	movlw	0
  1953     0442  1988               	btfsc	8,3	;volatile
  1954     0443  3001               	movlw	1
  1955     0444  0080               	movwf	0
  1956     0445  2CC3               	goto	l2198
  1957     0446                     l335:	
  1958                           ;TTL_Logic.c: 197:                 else{
  1959                           
  1960                           
  1961                           ;TTL_Logic.c: 198:                 RB0=RD6=RB3=(__bit)i;
  1962     0446  1859               	btfsc	_i,0
  1963     0447  2C49               	goto	u3151
  1964     0448  2C4D               	goto	u3150
  1965     0449                     u3151:
  1966     0449  1283               	bcf	3,5	;RP0=0, select bank0
  1967     044A  1303               	bcf	3,6	;RP1=0, select bank0
  1968     044B  1586               	bsf	6,3	;volatile
  1969     044C  2C50               	goto	u3164
  1970     044D                     u3150:
  1971     044D  1283               	bcf	3,5	;RP0=0, select bank0
  1972     044E  1303               	bcf	3,6	;RP1=0, select bank0
  1973     044F  1186               	bcf	6,3	;volatile
  1974     0450                     u3164:
  1975     0450  1986               	btfsc	6,3	;volatile
  1976     0451  2C53               	goto	u3161
  1977     0452  2C57               	goto	u3160
  1978     0453                     u3161:
  1979     0453  1283               	bcf	3,5	;RP0=0, select bank0
  1980     0454  1303               	bcf	3,6	;RP1=0, select bank0
  1981     0455  1708               	bsf	8,6	;volatile
  1982     0456  2C5A               	goto	u3174
  1983     0457                     u3160:
  1984     0457  1283               	bcf	3,5	;RP0=0, select bank0
  1985     0458  1303               	bcf	3,6	;RP1=0, select bank0
  1986     0459  1308               	bcf	8,6	;volatile
  1987     045A                     u3174:
  1988     045A  1B08               	btfsc	8,6	;volatile
  1989     045B  2C5D               	goto	u3171
  1990     045C  2C61               	goto	u3170
  1991     045D                     u3171:
  1992     045D  1283               	bcf	3,5	;RP0=0, select bank0
  1993     045E  1303               	bcf	3,6	;RP1=0, select bank0
  1994     045F  1406               	bsf	6,0	;volatile
  1995     0460  2C64               	goto	u3184
  1996     0461                     u3170:
  1997     0461  1283               	bcf	3,5	;RP0=0, select bank0
  1998     0462  1303               	bcf	3,6	;RP1=0, select bank0
  1999     0463  1006               	bcf	6,0	;volatile
  2000     0464                     u3184:
  2001                           
  2002                           ;TTL_Logic.c: 199:                 RD7=RD5=RB4=(__bit)j;
  2003     0464  1857               	btfsc	_j,0
  2004     0465  2C67               	goto	u3191
  2005     0466  2C6B               	goto	u3190
  2006     0467                     u3191:
  2007     0467  1283               	bcf	3,5	;RP0=0, select bank0
  2008     0468  1303               	bcf	3,6	;RP1=0, select bank0
  2009     0469  1606               	bsf	6,4	;volatile
  2010     046A  2C6E               	goto	u3204
  2011     046B                     u3190:
  2012     046B  1283               	bcf	3,5	;RP0=0, select bank0
  2013     046C  1303               	bcf	3,6	;RP1=0, select bank0
  2014     046D  1206               	bcf	6,4	;volatile
  2015     046E                     u3204:
  2016     046E  1A06               	btfsc	6,4	;volatile
  2017     046F  2C71               	goto	u3201
  2018     0470  2C75               	goto	u3200
  2019     0471                     u3201:
  2020     0471  1283               	bcf	3,5	;RP0=0, select bank0
  2021     0472  1303               	bcf	3,6	;RP1=0, select bank0
  2022     0473  1688               	bsf	8,5	;volatile
  2023     0474  2C78               	goto	u3214
  2024     0475                     u3200:
  2025     0475  1283               	bcf	3,5	;RP0=0, select bank0
  2026     0476  1303               	bcf	3,6	;RP1=0, select bank0
  2027     0477  1288               	bcf	8,5	;volatile
  2028     0478                     u3214:
  2029     0478  1A88               	btfsc	8,5	;volatile
  2030     0479  2C7B               	goto	u3211
  2031     047A  2C7F               	goto	u3210
  2032     047B                     u3211:
  2033     047B  1283               	bcf	3,5	;RP0=0, select bank0
  2034     047C  1303               	bcf	3,6	;RP1=0, select bank0
  2035     047D  1788               	bsf	8,7	;volatile
  2036     047E  2C82               	goto	u3224
  2037     047F                     u3210:
  2038     047F  1283               	bcf	3,5	;RP0=0, select bank0
  2039     0480  1303               	bcf	3,6	;RP1=0, select bank0
  2040     0481  1388               	bcf	8,7	;volatile
  2041     0482                     u3224:
  2042                           
  2043                           ;TTL_Logic.c: 200:                 RB1=RD4=RB5=(__bit)k;
  2044     0482  1855               	btfsc	_k,0
  2045     0483  2C85               	goto	u3231
  2046     0484  2C89               	goto	u3230
  2047     0485                     u3231:
  2048     0485  1283               	bcf	3,5	;RP0=0, select bank0
  2049     0486  1303               	bcf	3,6	;RP1=0, select bank0
  2050     0487  1686               	bsf	6,5	;volatile
  2051     0488  2C8C               	goto	u3244
  2052     0489                     u3230:
  2053     0489  1283               	bcf	3,5	;RP0=0, select bank0
  2054     048A  1303               	bcf	3,6	;RP1=0, select bank0
  2055     048B  1286               	bcf	6,5	;volatile
  2056     048C                     u3244:
  2057     048C  1A86               	btfsc	6,5	;volatile
  2058     048D  2C8F               	goto	u3241
  2059     048E  2C93               	goto	u3240
  2060     048F                     u3241:
  2061     048F  1283               	bcf	3,5	;RP0=0, select bank0
  2062     0490  1303               	bcf	3,6	;RP1=0, select bank0
  2063     0491  1608               	bsf	8,4	;volatile
  2064     0492  2C96               	goto	u3254
  2065     0493                     u3240:
  2066     0493  1283               	bcf	3,5	;RP0=0, select bank0
  2067     0494  1303               	bcf	3,6	;RP1=0, select bank0
  2068     0495  1208               	bcf	8,4	;volatile
  2069     0496                     u3254:
  2070     0496  1A08               	btfsc	8,4	;volatile
  2071     0497  2C99               	goto	u3251
  2072     0498  2C9D               	goto	u3250
  2073     0499                     u3251:
  2074     0499  1283               	bcf	3,5	;RP0=0, select bank0
  2075     049A  1303               	bcf	3,6	;RP1=0, select bank0
  2076     049B  1486               	bsf	6,1	;volatile
  2077     049C  2CA0               	goto	u3264
  2078     049D                     u3250:
  2079     049D  1283               	bcf	3,5	;RP0=0, select bank0
  2080     049E  1303               	bcf	3,6	;RP1=0, select bank0
  2081     049F  1086               	bcf	6,1	;volatile
  2082     04A0                     u3264:
  2083     04A0                     l2190:
  2084                           
  2085                           ;TTL_Logic.c: 201:                 _delay((unsigned long)((20)*(16000000/4000.0)));
  2086     04A0  3068               	movlw	104
  2087     04A1  1283               	bcf	3,5	;RP0=0, select bank0
  2088     04A2  1303               	bcf	3,6	;RP1=0, select bank0
  2089     04A3  00A3               	movwf	??_TRI_NAN+1
  2090     04A4  30E3               	movlw	227
  2091     04A5  00A2               	movwf	??_TRI_NAN
  2092     04A6                     u3537:
  2093     04A6  0BA2               	decfsz	??_TRI_NAN,f
  2094     04A7  2CA6               	goto	u3537
  2095     04A8  0BA3               	decfsz	??_TRI_NAN+1,f
  2096     04A9  2CA6               	goto	u3537
  2097     04AA  2CAB               	nop2
  2098     04AB                     l2192:
  2099                           
  2100                           ;TTL_Logic.c: 202:                 gate1[x]=RD3;
  2101     04AB  1283               	bcf	3,5	;RP0=0, select bank0
  2102     04AC  1303               	bcf	3,6	;RP1=0, select bank0
  2103     04AD  0851               	movf	_x,w
  2104     04AE  3E49               	addlw	(low (_gate1| 0))& (0+255)
  2105     04AF  0084               	movwf	4
  2106     04B0  3000               	movlw	0
  2107     04B1  1988               	btfsc	8,3	;volatile
  2108     04B2  3001               	movlw	1
  2109     04B3  1383               	bcf	3,7	;select IRP bank0
  2110     04B4  0080               	movwf	0
  2111     04B5                     l2194:
  2112                           
  2113                           ;TTL_Logic.c: 203:                 gate2[x]=RB6;
  2114     04B5  0851               	movf	_x,w
  2115     04B6  3E41               	addlw	(low (_gate2| 0))& (0+255)
  2116     04B7  0084               	movwf	4
  2117     04B8  3000               	movlw	0
  2118     04B9  1B06               	btfsc	6,6	;volatile
  2119     04BA  3001               	movlw	1
  2120     04BB  0080               	movwf	0
  2121     04BC                     l2196:
  2122                           
  2123                           ;TTL_Logic.c: 204:                 gate3[x]=RB2;}
  2124     04BC  0851               	movf	_x,w
  2125     04BD  3EB0               	addlw	(low (_gate3| 0))& (0+255)
  2126     04BE  0084               	movwf	4
  2127     04BF  3000               	movlw	0
  2128     04C0  1906               	btfsc	6,2	;volatile
  2129     04C1  3001               	movlw	1
  2130     04C2  0080               	movwf	0
  2131     04C3                     l2198:
  2132                           
  2133                           ;TTL_Logic.c: 206:                 x++;
  2134     04C3  3001               	movlw	1
  2135     04C4  07D1               	addwf	_x,f
  2136     04C5  1803               	skipnc
  2137     04C6  0AD2               	incf	_x+1,f
  2138     04C7  3000               	movlw	0
  2139     04C8  07D2               	addwf	_x+1,f
  2140     04C9                     l2200:
  2141                           
  2142                           ;TTL_Logic.c: 207:                 _delay((unsigned long)((10)*(16000000/4000.0)));
  2143     04C9  3034               	movlw	52
  2144     04CA  1283               	bcf	3,5	;RP0=0, select bank0
  2145     04CB  1303               	bcf	3,6	;RP1=0, select bank0
  2146     04CC  00A3               	movwf	??_TRI_NAN+1
  2147     04CD  30F1               	movlw	241
  2148     04CE  00A2               	movwf	??_TRI_NAN
  2149     04CF                     u3547:
  2150     04CF  0BA2               	decfsz	??_TRI_NAN,f
  2151     04D0  2CCF               	goto	u3547
  2152     04D1  0BA3               	decfsz	??_TRI_NAN+1,f
  2153     04D2  2CCF               	goto	u3547
  2154     04D3                     l2202:
  2155                           
  2156                           ;TTL_Logic.c: 208:             }
  2157     04D3  3001               	movlw	1
  2158     04D4  1283               	bcf	3,5	;RP0=0, select bank0
  2159     04D5  1303               	bcf	3,6	;RP1=0, select bank0
  2160     04D6  07D5               	addwf	_k,f
  2161     04D7  1803               	skipnc
  2162     04D8  0AD6               	incf	_k+1,f
  2163     04D9  3000               	movlw	0
  2164     04DA  07D6               	addwf	_k+1,f
  2165     04DB  2BB6               	goto	l2174
  2166     04DC                     l2206:
  2167                           
  2168                           ;TTL_Logic.c: 209:         }
  2169     04DC  3001               	movlw	1
  2170     04DD  07D7               	addwf	_j,f
  2171     04DE  1803               	skipnc
  2172     04DF  0AD8               	incf	_j+1,f
  2173     04E0  3000               	movlw	0
  2174     04E1  07D8               	addwf	_j+1,f
  2175     04E2  3000               	movlw	0
  2176     04E3  0258               	subwf	_j+1,w
  2177     04E4  3002               	movlw	2
  2178     04E5  1903               	skipnz
  2179     04E6  0257               	subwf	_j,w
  2180     04E7  1C03               	skipc
  2181     04E8  2CEA               	goto	u3271
  2182     04E9  2CEB               	goto	u3270
  2183     04EA                     u3271:
  2184     04EA  2BB4               	goto	l2172
  2185     04EB                     u3270:
  2186     04EB                     l2208:
  2187                           
  2188                           ;TTL_Logic.c: 210:     }
  2189     04EB  3001               	movlw	1
  2190     04EC  07D9               	addwf	_i,f
  2191     04ED  1803               	skipnc
  2192     04EE  0ADA               	incf	_i+1,f
  2193     04EF  3000               	movlw	0
  2194     04F0  07DA               	addwf	_i+1,f
  2195     04F1  3000               	movlw	0
  2196     04F2  025A               	subwf	_i+1,w
  2197     04F3  3002               	movlw	2
  2198     04F4  1903               	skipnz
  2199     04F5  0259               	subwf	_i,w
  2200     04F6  1C03               	skipc
  2201     04F7  2CF9               	goto	u3281
  2202     04F8  2CFA               	goto	u3280
  2203     04F9                     u3281:
  2204     04F9  2BA8               	goto	l2166
  2205     04FA                     u3280:
  2206     04FA                     l2210:
  2207                           
  2208                           ;TTL_Logic.c: 212:     if(TRI_GOOD(ic_num)){
  2209     04FA  0821               	movf	TRI_NAN@ic_num+1,w
  2210     04FB  00F1               	movwf	TRI_GOOD@ic_num+1
  2211     04FC  0820               	movf	TRI_NAN@ic_num,w
  2212     04FD  00F0               	movwf	TRI_GOOD@ic_num
  2213     04FE  120A  158A  261A  120A  118A  	fcall	_TRI_GOOD
  2214     0503  3A00               	xorlw	0
  2215     0504  1903               	skipnz
  2216     0505  2D07               	goto	u3291
  2217     0506  2D08               	goto	u3290
  2218     0507                     u3291:
  2219     0507  2D12               	goto	l2214
  2220     0508                     u3290:
  2221     0508                     l2212:
  2222                           
  2223                           ;TTL_Logic.c: 213:         LCD_Write_String("IC IS GOOD");}
  2224     0508  3068               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2225     0509  00F6               	movwf	LCD_Write_String@str
  2226     050A  3080               	movlw	128
  2227     050B  00F7               	movwf	LCD_Write_String@str+1
  2228     050C  120A  158A  22EF  120A  118A  	fcall	_LCD_Write_String
  2229     0511  2D1B               	goto	l339
  2230     0512                     l2214:
  2231     0512  307E               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2232     0513  00F6               	movwf	LCD_Write_String@str
  2233     0514  3080               	movlw	128
  2234     0515  00F7               	movwf	LCD_Write_String@str+1
  2235     0516  120A  158A  22EF  120A  118A  	fcall	_LCD_Write_String
  2236     051B                     l339:
  2237     051B  0008               	return
  2238     051C                     __end_of_TRI_NAN:
  2239                           
  2240                           	psect	text3
  2241     0E1A                     __ptext3:	
  2242 ;; *************** function _TRI_GOOD *****************
  2243 ;; Defined at:
  2244 ;;		line 216 in file "TTL_Logic.c"
  2245 ;; Parameters:    Size  Location     Type
  2246 ;;  ic_num          2    0[COMMON] unsigned int 
  2247 ;; Auto vars:     Size  Location     Type
  2248 ;;		None
  2249 ;; Return value:  Size  Location     Type
  2250 ;;                  1    wreg      _Bool 
  2251 ;; Registers used:
  2252 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2253 ;; Tracked objects:
  2254 ;;		On entry : 0/0
  2255 ;;		On exit  : 0/0
  2256 ;;		Unchanged: 0/0
  2257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2258 ;;      Params:         2       0       0       0       0
  2259 ;;      Locals:         0       0       0       0       0
  2260 ;;      Temps:          3       0       0       0       0
  2261 ;;      Totals:         5       0       0       0       0
  2262 ;;Total ram usage:        5 bytes
  2263 ;; Hardware stack levels used: 1
  2264 ;; This function calls:
  2265 ;;		Nothing
  2266 ;; This function is called by:
  2267 ;;		_TRI_NAN
  2268 ;; This function uses a non-reentrant model
  2269 ;;
  2270                           
  2271     0E1A                     _TRI_GOOD:	
  2272                           ;psect for function _TRI_GOOD
  2273                           
  2274     0E1A                     l1898:	
  2275                           ;incstack = 0
  2276                           ; Regs used in _TRI_GOOD: [wreg-fsr0h+status,2+status,0]
  2277                           
  2278                           
  2279                           ;TTL_Logic.c: 217:     for(i=0;i<8;i++){
  2280     0E1A  1283               	bcf	3,5	;RP0=0, select bank0
  2281     0E1B  1303               	bcf	3,6	;RP1=0, select bank0
  2282     0E1C  01D9               	clrf	_i
  2283     0E1D  01DA               	clrf	_i+1
  2284     0E1E                     l1900:
  2285     0E1E  3000               	movlw	0
  2286     0E1F  025A               	subwf	_i+1,w
  2287     0E20  3008               	movlw	8
  2288     0E21  1903               	skipnz
  2289     0E22  0259               	subwf	_i,w
  2290     0E23  1C03               	skipc
  2291     0E24  2E26               	goto	u2061
  2292     0E25  2E27               	goto	u2060
  2293     0E26                     u2061:
  2294     0E26  2E28               	goto	l1904
  2295     0E27                     u2060:
  2296     0E27  2EF4               	goto	l1942
  2297     0E28                     l1904:
  2298                           
  2299                           ;TTL_Logic.c: 218:         if(ic_num==6){
  2300     0E28  3006               	movlw	6
  2301     0E29  0670               	xorwf	TRI_GOOD@ic_num,w
  2302     0E2A  0471               	iorwf	TRI_GOOD@ic_num+1,w
  2303     0E2B  1D03               	btfss	3,2
  2304     0E2C  2E2E               	goto	u2071
  2305     0E2D  2E2F               	goto	u2070
  2306     0E2E                     u2071:
  2307     0E2E  2E58               	goto	l1912
  2308     0E2F                     u2070:
  2309     0E2F                     l1906:
  2310                           
  2311                           ;TTL_Logic.c: 219:             if(gate1[i]==gate2[i]==gate3[i]==AND_3[i]) return 0;
  2312     0E2F  0859               	movf	_i,w
  2313     0E30  3EA8               	addlw	(low (_AND_3| 0))& (0+255)
  2314     0E31  0084               	movwf	4
  2315     0E32  1383               	bcf	3,7	;select IRP bank1
  2316     0E33  0800               	movf	0,w
  2317     0E34  00F2               	movwf	??_TRI_GOOD
  2318     0E35  0859               	movf	_i,w
  2319     0E36  3EB0               	addlw	(low (_gate3| 0))& (0+255)
  2320     0E37  0084               	movwf	4
  2321     0E38  0800               	movf	0,w
  2322     0E39  00F3               	movwf	??_TRI_GOOD+1
  2323     0E3A  0859               	movf	_i,w
  2324     0E3B  3E41               	addlw	(low (_gate2| 0))& (0+255)
  2325     0E3C  0084               	movwf	4
  2326     0E3D  0800               	movf	0,w
  2327     0E3E  00F4               	movwf	??_TRI_GOOD+2
  2328     0E3F  0859               	movf	_i,w
  2329     0E40  3E49               	addlw	(low (_gate1| 0))& (0+255)
  2330     0E41  0084               	movwf	4
  2331     0E42  0800               	movf	0,w
  2332     0E43  0674               	xorwf	??_TRI_GOOD+2,w
  2333     0E44  1903               	skipnz
  2334     0E45  2E47               	goto	u2081
  2335     0E46  2E49               	goto	u2080
  2336     0E47                     u2081:
  2337     0E47  3001               	movlw	1
  2338     0E48  2E4A               	goto	u2090
  2339     0E49                     u2080:
  2340     0E49  3000               	movlw	0
  2341     0E4A                     u2090:
  2342     0E4A  0673               	xorwf	??_TRI_GOOD+1,w
  2343     0E4B  1903               	skipnz
  2344     0E4C  2E4E               	goto	u2101
  2345     0E4D  2E50               	goto	u2100
  2346     0E4E                     u2101:
  2347     0E4E  3001               	movlw	1
  2348     0E4F  2E51               	goto	u2110
  2349     0E50                     u2100:
  2350     0E50  3000               	movlw	0
  2351     0E51                     u2110:
  2352     0E51  0672               	xorwf	??_TRI_GOOD,w
  2353     0E52  1D03               	skipz
  2354     0E53  2E55               	goto	u2121
  2355     0E54  2E56               	goto	u2120
  2356     0E55                     u2121:
  2357     0E55  2EE5               	goto	l1940
  2358     0E56                     u2120:
  2359     0E56                     l1908:
  2360     0E56  3000               	movlw	0
  2361     0E57  2EF5               	goto	l346
  2362     0E58                     l1912:
  2363     0E58  3007               	movlw	7
  2364     0E59  0670               	xorwf	TRI_GOOD@ic_num,w
  2365     0E5A  0471               	iorwf	TRI_GOOD@ic_num+1,w
  2366     0E5B  1D03               	btfss	3,2
  2367     0E5C  2E5E               	goto	u2131
  2368     0E5D  2E5F               	goto	u2130
  2369     0E5E                     u2131:
  2370     0E5E  2E87               	goto	l1920
  2371     0E5F                     u2130:
  2372     0E5F                     l1914:
  2373                           
  2374                           ;TTL_Logic.c: 222:             if(gate1[i]!=gate2[i]!=gate3[i]!=AND_3[i]) return 0;
  2375     0E5F  0859               	movf	_i,w
  2376     0E60  3EA8               	addlw	(low (_AND_3| 0))& (0+255)
  2377     0E61  0084               	movwf	4
  2378     0E62  1383               	bcf	3,7	;select IRP bank1
  2379     0E63  0800               	movf	0,w
  2380     0E64  00F2               	movwf	??_TRI_GOOD
  2381     0E65  0859               	movf	_i,w
  2382     0E66  3EB0               	addlw	(low (_gate3| 0))& (0+255)
  2383     0E67  0084               	movwf	4
  2384     0E68  0800               	movf	0,w
  2385     0E69  00F3               	movwf	??_TRI_GOOD+1
  2386     0E6A  0859               	movf	_i,w
  2387     0E6B  3E41               	addlw	(low (_gate2| 0))& (0+255)
  2388     0E6C  0084               	movwf	4
  2389     0E6D  0800               	movf	0,w
  2390     0E6E  00F4               	movwf	??_TRI_GOOD+2
  2391     0E6F  0859               	movf	_i,w
  2392     0E70  3E49               	addlw	(low (_gate1| 0))& (0+255)
  2393     0E71  0084               	movwf	4
  2394     0E72  0800               	movf	0,w
  2395     0E73  0674               	xorwf	??_TRI_GOOD+2,w
  2396     0E74  1D03               	skipz
  2397     0E75  2E77               	goto	u2141
  2398     0E76  2E79               	goto	u2140
  2399     0E77                     u2141:
  2400     0E77  3001               	movlw	1
  2401     0E78  2E7A               	goto	u2150
  2402     0E79                     u2140:
  2403     0E79  3000               	movlw	0
  2404     0E7A                     u2150:
  2405     0E7A  0673               	xorwf	??_TRI_GOOD+1,w
  2406     0E7B  1D03               	skipz
  2407     0E7C  2E7E               	goto	u2161
  2408     0E7D  2E80               	goto	u2160
  2409     0E7E                     u2161:
  2410     0E7E  3001               	movlw	1
  2411     0E7F  2E81               	goto	u2170
  2412     0E80                     u2160:
  2413     0E80  3000               	movlw	0
  2414     0E81                     u2170:
  2415     0E81  0672               	xorwf	??_TRI_GOOD,w
  2416     0E82  1903               	skipnz
  2417     0E83  2E85               	goto	u2181
  2418     0E84  2E86               	goto	u2180
  2419     0E85                     u2181:
  2420     0E85  2EE5               	goto	l1940
  2421     0E86                     u2180:
  2422     0E86  2E56               	goto	l1908
  2423     0E87                     l1920:
  2424     0E87  3008               	movlw	8
  2425     0E88  0670               	xorwf	TRI_GOOD@ic_num,w
  2426     0E89  0471               	iorwf	TRI_GOOD@ic_num+1,w
  2427     0E8A  1D03               	btfss	3,2
  2428     0E8B  2E8D               	goto	u2191
  2429     0E8C  2E8E               	goto	u2190
  2430     0E8D                     u2191:
  2431     0E8D  2EB6               	goto	l1928
  2432     0E8E                     u2190:
  2433     0E8E                     l1922:
  2434                           
  2435                           ;TTL_Logic.c: 225:             if(gate1[i]==gate2[i]==gate3[i]==OR_3[i]) return 0;
  2436     0E8E  0859               	movf	_i,w
  2437     0E8F  3EA0               	addlw	(low (_OR_3| 0))& (0+255)
  2438     0E90  0084               	movwf	4
  2439     0E91  1383               	bcf	3,7	;select IRP bank1
  2440     0E92  0800               	movf	0,w
  2441     0E93  00F2               	movwf	??_TRI_GOOD
  2442     0E94  0859               	movf	_i,w
  2443     0E95  3EB0               	addlw	(low (_gate3| 0))& (0+255)
  2444     0E96  0084               	movwf	4
  2445     0E97  0800               	movf	0,w
  2446     0E98  00F3               	movwf	??_TRI_GOOD+1
  2447     0E99  0859               	movf	_i,w
  2448     0E9A  3E41               	addlw	(low (_gate2| 0))& (0+255)
  2449     0E9B  0084               	movwf	4
  2450     0E9C  0800               	movf	0,w
  2451     0E9D  00F4               	movwf	??_TRI_GOOD+2
  2452     0E9E  0859               	movf	_i,w
  2453     0E9F  3E49               	addlw	(low (_gate1| 0))& (0+255)
  2454     0EA0  0084               	movwf	4
  2455     0EA1  0800               	movf	0,w
  2456     0EA2  0674               	xorwf	??_TRI_GOOD+2,w
  2457     0EA3  1903               	skipnz
  2458     0EA4  2EA6               	goto	u2201
  2459     0EA5  2EA8               	goto	u2200
  2460     0EA6                     u2201:
  2461     0EA6  3001               	movlw	1
  2462     0EA7  2EA9               	goto	u2210
  2463     0EA8                     u2200:
  2464     0EA8  3000               	movlw	0
  2465     0EA9                     u2210:
  2466     0EA9  0673               	xorwf	??_TRI_GOOD+1,w
  2467     0EAA  1903               	skipnz
  2468     0EAB  2EAD               	goto	u2221
  2469     0EAC  2EAF               	goto	u2220
  2470     0EAD                     u2221:
  2471     0EAD  3001               	movlw	1
  2472     0EAE  2EB0               	goto	u2230
  2473     0EAF                     u2220:
  2474     0EAF  3000               	movlw	0
  2475     0EB0                     u2230:
  2476     0EB0  0672               	xorwf	??_TRI_GOOD,w
  2477     0EB1  1D03               	skipz
  2478     0EB2  2EB4               	goto	u2241
  2479     0EB3  2EB5               	goto	u2240
  2480     0EB4                     u2241:
  2481     0EB4  2EE5               	goto	l1940
  2482     0EB5                     u2240:
  2483     0EB5  2E56               	goto	l1908
  2484     0EB6                     l1928:
  2485     0EB6  3009               	movlw	9
  2486     0EB7  0670               	xorwf	TRI_GOOD@ic_num,w
  2487     0EB8  0471               	iorwf	TRI_GOOD@ic_num+1,w
  2488     0EB9  1D03               	btfss	3,2
  2489     0EBA  2EBC               	goto	u2251
  2490     0EBB  2EBD               	goto	u2250
  2491     0EBC                     u2251:
  2492     0EBC  2E56               	goto	l1908
  2493     0EBD                     u2250:
  2494     0EBD                     l1930:
  2495                           
  2496                           ;TTL_Logic.c: 228:             if(gate1[i]!=gate2[i]!=gate3[i]!=OR_3[i]) return 0;
  2497     0EBD  0859               	movf	_i,w
  2498     0EBE  3EA0               	addlw	(low (_OR_3| 0))& (0+255)
  2499     0EBF  0084               	movwf	4
  2500     0EC0  1383               	bcf	3,7	;select IRP bank1
  2501     0EC1  0800               	movf	0,w
  2502     0EC2  00F2               	movwf	??_TRI_GOOD
  2503     0EC3  0859               	movf	_i,w
  2504     0EC4  3EB0               	addlw	(low (_gate3| 0))& (0+255)
  2505     0EC5  0084               	movwf	4
  2506     0EC6  0800               	movf	0,w
  2507     0EC7  00F3               	movwf	??_TRI_GOOD+1
  2508     0EC8  0859               	movf	_i,w
  2509     0EC9  3E41               	addlw	(low (_gate2| 0))& (0+255)
  2510     0ECA  0084               	movwf	4
  2511     0ECB  0800               	movf	0,w
  2512     0ECC  00F4               	movwf	??_TRI_GOOD+2
  2513     0ECD  0859               	movf	_i,w
  2514     0ECE  3E49               	addlw	(low (_gate1| 0))& (0+255)
  2515     0ECF  0084               	movwf	4
  2516     0ED0  0800               	movf	0,w
  2517     0ED1  0674               	xorwf	??_TRI_GOOD+2,w
  2518     0ED2  1D03               	skipz
  2519     0ED3  2ED5               	goto	u2261
  2520     0ED4  2ED7               	goto	u2260
  2521     0ED5                     u2261:
  2522     0ED5  3001               	movlw	1
  2523     0ED6  2ED8               	goto	u2270
  2524     0ED7                     u2260:
  2525     0ED7  3000               	movlw	0
  2526     0ED8                     u2270:
  2527     0ED8  0673               	xorwf	??_TRI_GOOD+1,w
  2528     0ED9  1D03               	skipz
  2529     0EDA  2EDC               	goto	u2281
  2530     0EDB  2EDE               	goto	u2280
  2531     0EDC                     u2281:
  2532     0EDC  3001               	movlw	1
  2533     0EDD  2EDF               	goto	u2290
  2534     0EDE                     u2280:
  2535     0EDE  3000               	movlw	0
  2536     0EDF                     u2290:
  2537     0EDF  0672               	xorwf	??_TRI_GOOD,w
  2538     0EE0  1903               	skipnz
  2539     0EE1  2EE3               	goto	u2301
  2540     0EE2  2EE4               	goto	u2300
  2541     0EE3                     u2301:
  2542     0EE3  2EE5               	goto	l1940
  2543     0EE4                     u2300:
  2544     0EE4  2E56               	goto	l1908
  2545     0EE5                     l1940:
  2546                           
  2547                           ;TTL_Logic.c: 231:     }
  2548     0EE5  3001               	movlw	1
  2549     0EE6  07D9               	addwf	_i,f
  2550     0EE7  1803               	skipnc
  2551     0EE8  0ADA               	incf	_i+1,f
  2552     0EE9  3000               	movlw	0
  2553     0EEA  07DA               	addwf	_i+1,f
  2554     0EEB  3000               	movlw	0
  2555     0EEC  025A               	subwf	_i+1,w
  2556     0EED  3008               	movlw	8
  2557     0EEE  1903               	skipnz
  2558     0EEF  0259               	subwf	_i,w
  2559     0EF0  1C03               	skipc
  2560     0EF1  2EF3               	goto	u2311
  2561     0EF2  2EF4               	goto	u2310
  2562     0EF3                     u2311:
  2563     0EF3  2E28               	goto	l1904
  2564     0EF4                     u2310:
  2565     0EF4                     l1942:
  2566                           
  2567                           ;TTL_Logic.c: 232:     return 1;
  2568     0EF4  3001               	movlw	1
  2569     0EF5                     l346:
  2570     0EF5  0008               	return
  2571     0EF6                     __end_of_TRI_GOOD:
  2572                           
  2573                           	psect	text4
  2574     0012                     __ptext4:	
  2575 ;; *************** function _LCD_Init *****************
  2576 ;; Defined at:
  2577 ;;		line 61 in file "lcd.c"
  2578 ;; Parameters:    Size  Location     Type
  2579 ;;		None
  2580 ;; Auto vars:     Size  Location     Type
  2581 ;;		None
  2582 ;; Return value:  Size  Location     Type
  2583 ;;                  1    wreg      void 
  2584 ;; Registers used:
  2585 ;;		wreg, status,2, status,0, pclath, cstack
  2586 ;; Tracked objects:
  2587 ;;		On entry : 0/0
  2588 ;;		On exit  : 0/0
  2589 ;;		Unchanged: 0/0
  2590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2591 ;;      Params:         0       0       0       0       0
  2592 ;;      Locals:         0       0       0       0       0
  2593 ;;      Temps:          2       0       0       0       0
  2594 ;;      Totals:         2       0       0       0       0
  2595 ;;Total ram usage:        2 bytes
  2596 ;; Hardware stack levels used: 1
  2597 ;; Hardware stack levels required when called: 2
  2598 ;; This function calls:
  2599 ;;		_LCD_CMD
  2600 ;;		_LCD_DATA
  2601 ;; This function is called by:
  2602 ;;		_main
  2603 ;; This function uses a non-reentrant model
  2604 ;;
  2605                           
  2606     0012                     _LCD_Init:	
  2607                           ;psect for function _LCD_Init
  2608                           
  2609     0012                     l2250:	
  2610                           ;incstack = 0
  2611                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  2612                           
  2613                           
  2614                           ;lcd.c: 64:   TRISC = 0x00;
  2615     0012  1683               	bsf	3,5	;RP0=1, select bank1
  2616     0013  1303               	bcf	3,6	;RP1=0, select bank1
  2617     0014  0187               	clrf	7	;volatile
  2618     0015                     l2252:
  2619                           
  2620                           ;lcd.c: 65:   TRISC6 = 0;
  2621     0015  1307               	bcf	7,6	;volatile
  2622     0016                     l2254:
  2623                           
  2624                           ;lcd.c: 66:   TRISC7 = 0;
  2625     0016  1387               	bcf	7,7	;volatile
  2626     0017                     l2256:
  2627                           
  2628                           ;lcd.c: 68:   LCD_DATA(0x00);
  2629     0017  3000               	movlw	0
  2630     0018  120A  158A  2243  120A  118A  	fcall	_LCD_DATA
  2631     001D                     l2258:
  2632                           
  2633                           ;lcd.c: 69:   _delay((unsigned long)((30)*(16000000/4000.0)));
  2634     001D  309C               	movlw	156
  2635     001E  00F5               	movwf	??_LCD_Init+1
  2636     001F  30D7               	movlw	215
  2637     0020  00F4               	movwf	??_LCD_Init
  2638     0021                     u3557:
  2639     0021  0BF4               	decfsz	??_LCD_Init,f
  2640     0022  2821               	goto	u3557
  2641     0023  0BF5               	decfsz	??_LCD_Init+1,f
  2642     0024  2821               	goto	u3557
  2643     0025                     l2260:
  2644                           
  2645                           ;lcd.c: 70:   _delay((unsigned long)((500)*(16000000/4000000.0)));
  2646     0025  3003               	movlw	3
  2647     0026  00F5               	movwf	??_LCD_Init+1
  2648     0027  3097               	movlw	151
  2649     0028  00F4               	movwf	??_LCD_Init
  2650     0029                     u3567:
  2651     0029  0BF4               	decfsz	??_LCD_Init,f
  2652     002A  2829               	goto	u3567
  2653     002B  0BF5               	decfsz	??_LCD_Init+1,f
  2654     002C  2829               	goto	u3567
  2655     002D  282E               	nop2
  2656     002E                     l2262:
  2657                           
  2658                           ;lcd.c: 71:   LCD_CMD(0x03);
  2659     002E  3003               	movlw	3
  2660     002F  120A  158A  2208  120A  118A  	fcall	_LCD_CMD
  2661     0034                     l2264:
  2662                           
  2663                           ;lcd.c: 72:   _delay((unsigned long)((5)*(16000000/4000.0)));
  2664     0034  301A               	movlw	26
  2665     0035  00F5               	movwf	??_LCD_Init+1
  2666     0036  30F8               	movlw	248
  2667     0037  00F4               	movwf	??_LCD_Init
  2668     0038                     u3577:
  2669     0038  0BF4               	decfsz	??_LCD_Init,f
  2670     0039  2838               	goto	u3577
  2671     003A  0BF5               	decfsz	??_LCD_Init+1,f
  2672     003B  2838               	goto	u3577
  2673     003C  0000               	nop
  2674     003D                     l2266:
  2675                           
  2676                           ;lcd.c: 73:   LCD_CMD(0x03);
  2677     003D  3003               	movlw	3
  2678     003E  120A  158A  2208  120A  118A  	fcall	_LCD_CMD
  2679     0043                     l2268:
  2680                           
  2681                           ;lcd.c: 74:   _delay((unsigned long)((150)*(16000000/4000000.0)));
  2682     0043  30C7               	movlw	199
  2683     0044  00F4               	movwf	??_LCD_Init
  2684     0045                     u3587:
  2685     0045  0BF4               	decfsz	??_LCD_Init,f
  2686     0046  2845               	goto	u3587
  2687     0047  2848               	nop2
  2688     0048                     l2270:
  2689                           
  2690                           ;lcd.c: 75:   LCD_CMD(0x03);
  2691     0048  3003               	movlw	3
  2692     0049  120A  158A  2208  120A  118A  	fcall	_LCD_CMD
  2693     004E                     l2272:
  2694                           
  2695                           ;lcd.c: 76:   LCD_CMD(0x02);
  2696     004E  3002               	movlw	2
  2697     004F  120A  158A  2208  120A  118A  	fcall	_LCD_CMD
  2698     0054                     l2274:
  2699                           
  2700                           ;lcd.c: 77:   LCD_CMD(0x02);
  2701     0054  3002               	movlw	2
  2702     0055  120A  158A  2208  120A  118A  	fcall	_LCD_CMD
  2703     005A                     l2276:
  2704                           
  2705                           ;lcd.c: 78:   LCD_CMD(0x08);
  2706     005A  3008               	movlw	8
  2707     005B  120A  158A  2208  120A  118A  	fcall	_LCD_CMD
  2708     0060                     l2278:
  2709                           
  2710                           ;lcd.c: 79:   LCD_CMD(0x00);
  2711     0060  3000               	movlw	0
  2712     0061  120A  158A  2208  120A  118A  	fcall	_LCD_CMD
  2713     0066                     l2280:
  2714                           
  2715                           ;lcd.c: 80:   LCD_CMD(0x0C);
  2716     0066  300C               	movlw	12
  2717     0067  120A  158A  2208  120A  118A  	fcall	_LCD_CMD
  2718     006C                     l2282:
  2719                           
  2720                           ;lcd.c: 81:   LCD_CMD(0x00);
  2721     006C  3000               	movlw	0
  2722     006D  120A  158A  2208  120A  118A  	fcall	_LCD_CMD
  2723     0072                     l2284:
  2724                           
  2725                           ;lcd.c: 82:   LCD_CMD(0x06);
  2726     0072  3006               	movlw	6
  2727     0073  120A  158A  2208  120A  118A  	fcall	_LCD_CMD
  2728     0078                     l45:
  2729     0078  0008               	return
  2730     0079                     __end_of_LCD_Init:
  2731                           
  2732                           	psect	text5
  2733     0EF6                     __ptext5:	
  2734 ;; *************** function _Auto *****************
  2735 ;; Defined at:
  2736 ;;		line 16 in file "TTL_Logic.c"
  2737 ;; Parameters:    Size  Location     Type
  2738 ;;		None
  2739 ;; Auto vars:     Size  Location     Type
  2740 ;;  i               2   28[BANK0 ] int 
  2741 ;; Return value:  Size  Location     Type
  2742 ;;                  1    wreg      void 
  2743 ;; Registers used:
  2744 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2745 ;; Tracked objects:
  2746 ;;		On entry : 0/0
  2747 ;;		On exit  : 0/0
  2748 ;;		Unchanged: 0/0
  2749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2750 ;;      Params:         0       0       0       0       0
  2751 ;;      Locals:         0       2       0       0       0
  2752 ;;      Temps:          0       0       0       0       0
  2753 ;;      Totals:         0       2       0       0       0
  2754 ;;Total ram usage:        2 bytes
  2755 ;; Hardware stack levels used: 1
  2756 ;; Hardware stack levels required when called: 4
  2757 ;; This function calls:
  2758 ;;		_LCD_Set_Cursor
  2759 ;;		_LCD_Write_Char
  2760 ;;		_LCD_Write_String
  2761 ;;		_Mode_4
  2762 ;;		_Mode_6
  2763 ;;		_Write_IC
  2764 ;;		___bmul
  2765 ;;		_gate_1
  2766 ;;		_is_all_good
  2767 ;;		_print
  2768 ;; This function is called by:
  2769 ;;		_main
  2770 ;; This function uses a non-reentrant model
  2771 ;;
  2772                           
  2773     0EF6                     _Auto:	
  2774                           ;psect for function _Auto
  2775                           
  2776     0EF6                     l2308:	
  2777                           ;incstack = 0
  2778                           ; Regs used in _Auto: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2779                           
  2780                           
  2781                           ;TTL_Logic.c: 18:     gate_1();
  2782     0EF6  120A  158A  2222  120A  158A  	fcall	_gate_1
  2783     0EFB                     l2310:
  2784                           
  2785                           ;TTL_Logic.c: 19:     Mode_6();
  2786     0EFB  120A  118A  2196  120A  158A  	fcall	_Mode_6
  2787     0F00                     l2312:
  2788                           
  2789                           ;TTL_Logic.c: 20:     if(is_all_good(0,6))
  2790     0F00  3000               	movlw	0
  2791     0F01  00F0               	movwf	is_all_good@n
  2792     0F02  00F1               	movwf	is_all_good@n+1
  2793     0F03  3006               	movlw	6
  2794     0F04  00F2               	movwf	is_all_good@no
  2795     0F05  3000               	movlw	0
  2796     0F06  00F3               	movwf	is_all_good@no+1
  2797     0F07  120A  158A  2409  120A  158A  	fcall	_is_all_good
  2798     0F0C  3A00               	xorlw	0
  2799     0F0D  1903               	skipnz
  2800     0F0E  2F10               	goto	u3391
  2801     0F0F  2F11               	goto	u3390
  2802     0F10                     u3391:
  2803     0F10  2F37               	goto	l2326
  2804     0F11                     u3390:
  2805     0F11                     l2314:
  2806                           
  2807                           ;TTL_Logic.c: 21:     {;TTL_Logic.c: 22:         n=0;
  2808     0F11  1283               	bcf	3,5	;RP0=0, select bank0
  2809     0F12  1303               	bcf	3,6	;RP1=0, select bank0
  2810     0F13  01E9               	clrf	_n
  2811     0F14  01EA               	clrf	_n+1
  2812     0F15                     l2316:
  2813                           
  2814                           ;TTL_Logic.c: 23:         Write_IC();
  2815     0F15  120A  158A  228A  120A  158A  	fcall	_Write_IC
  2816     0F1A                     l2318:
  2817                           
  2818                           ;TTL_Logic.c: 24:         LCD_Write_String(name[0]);
  2819     0F1A  3017               	movlw	(low ((_name-__stringbase)| (0+32768)))& (0+255)
  2820     0F1B  00F6               	movwf	LCD_Write_String@str
  2821     0F1C  3080               	movlw	128
  2822     0F1D  00F7               	movwf	LCD_Write_String@str+1
  2823     0F1E  120A  158A  22EF  120A  158A  	fcall	_LCD_Write_String
  2824     0F23                     l2320:
  2825                           
  2826                           ;TTL_Logic.c: 25:         print(0,6);
  2827     0F23  3000               	movlw	0
  2828     0F24  1283               	bcf	3,5	;RP0=0, select bank0
  2829     0F25  1303               	bcf	3,6	;RP1=0, select bank0
  2830     0F26  00AD               	movwf	print@n
  2831     0F27  00AE               	movwf	print@n+1
  2832     0F28  3006               	movlw	6
  2833     0F29  00AF               	movwf	print@no
  2834     0F2A  3000               	movlw	0
  2835     0F2B  00B0               	movwf	print@no+1
  2836     0F2C  120A  158A  24B2  120A  158A  	fcall	_print
  2837     0F31                     l2322:
  2838                           
  2839                           ;TTL_Logic.c: 26:         gate_1();
  2840     0F31  120A  158A  2222  120A  158A  	fcall	_gate_1
  2841     0F36  2FFF               	goto	l279
  2842     0F37                     l2326:
  2843                           
  2844                           ;TTL_Logic.c: 30:     LCD_Write_Char('.');
  2845     0F37  302E               	movlw	46
  2846     0F38  120A  158A  23BA  120A  158A  	fcall	_LCD_Write_Char
  2847     0F3D                     l2328:
  2848                           
  2849                           ;TTL_Logic.c: 31:     gate_1();
  2850     0F3D  120A  158A  2222  120A  158A  	fcall	_gate_1
  2851     0F42                     l2330:
  2852                           
  2853                           ;TTL_Logic.c: 32:     n=1;
  2854     0F42  3001               	movlw	1
  2855     0F43  1283               	bcf	3,5	;RP0=0, select bank0
  2856     0F44  1303               	bcf	3,6	;RP1=0, select bank0
  2857     0F45  00E9               	movwf	_n
  2858     0F46  3000               	movlw	0
  2859     0F47  00EA               	movwf	_n+1
  2860     0F48                     l2332:
  2861                           
  2862                           ;TTL_Logic.c: 33:     Mode_4();
  2863     0F48  120A  118A  251C  120A  158A  	fcall	_Mode_4
  2864     0F4D                     l2334:
  2865                           
  2866                           ;TTL_Logic.c: 34:     if(is_all_good(1,4))
  2867     0F4D  3001               	movlw	1
  2868     0F4E  00F0               	movwf	is_all_good@n
  2869     0F4F  3000               	movlw	0
  2870     0F50  00F1               	movwf	is_all_good@n+1
  2871     0F51  3004               	movlw	4
  2872     0F52  00F2               	movwf	is_all_good@no
  2873     0F53  3000               	movlw	0
  2874     0F54  00F3               	movwf	is_all_good@no+1
  2875     0F55  120A  158A  2409  120A  158A  	fcall	_is_all_good
  2876     0F5A  3A00               	xorlw	0
  2877     0F5B  1903               	skipnz
  2878     0F5C  2F5E               	goto	u3401
  2879     0F5D  2F5F               	goto	u3400
  2880     0F5E                     u3401:
  2881     0F5E  2F7D               	goto	l2342
  2882     0F5F                     u3400:
  2883     0F5F                     l2336:
  2884                           
  2885                           ;TTL_Logic.c: 35:         {;TTL_Logic.c: 36:             Write_IC();
  2886     0F5F  120A  158A  228A  120A  158A  	fcall	_Write_IC
  2887                           
  2888                           ;TTL_Logic.c: 37:             LCD_Write_String(name[1]);
  2889     0F64  301C               	movlw	(low (((_name-__stringbase)| (0+32768)+5)))& (0+255)
  2890     0F65  00F6               	movwf	LCD_Write_String@str
  2891     0F66  3080               	movlw	128
  2892     0F67  00F7               	movwf	LCD_Write_String@str+1
  2893     0F68  120A  158A  22EF  120A  158A  	fcall	_LCD_Write_String
  2894                           
  2895                           ;TTL_Logic.c: 38:             print(1,4);
  2896     0F6D  3001               	movlw	1
  2897     0F6E  1283               	bcf	3,5	;RP0=0, select bank0
  2898     0F6F  1303               	bcf	3,6	;RP1=0, select bank0
  2899     0F70  00AD               	movwf	print@n
  2900     0F71  3000               	movlw	0
  2901     0F72  00AE               	movwf	print@n+1
  2902     0F73  3004               	movlw	4
  2903     0F74  00AF               	movwf	print@no
  2904     0F75  3000               	movlw	0
  2905     0F76  00B0               	movwf	print@no+1
  2906     0F77  120A  158A  24B2  120A  158A  	fcall	_print
  2907     0F7C  2F31               	goto	l2322
  2908     0F7D                     l2342:
  2909                           
  2910                           ;TTL_Logic.c: 42:     LCD_Write_Char('.');
  2911     0F7D  302E               	movlw	46
  2912     0F7E  120A  158A  23BA  120A  158A  	fcall	_LCD_Write_Char
  2913     0F83                     l2344:
  2914                           
  2915                           ;TTL_Logic.c: 43:     gate_1();
  2916     0F83  120A  158A  2222  120A  158A  	fcall	_gate_1
  2917     0F88                     l2346:
  2918                           
  2919                           ;TTL_Logic.c: 44:     n=2;
  2920     0F88  3002               	movlw	2
  2921     0F89  1283               	bcf	3,5	;RP0=0, select bank0
  2922     0F8A  1303               	bcf	3,6	;RP1=0, select bank0
  2923     0F8B  00E9               	movwf	_n
  2924     0F8C  3000               	movlw	0
  2925     0F8D  00EA               	movwf	_n+1
  2926     0F8E                     l2348:
  2927                           
  2928                           ;TTL_Logic.c: 45:     Mode_4();
  2929     0F8E  120A  118A  251C  120A  158A  	fcall	_Mode_4
  2930     0F93                     l2350:
  2931                           
  2932                           ;TTL_Logic.c: 46:     for(int i=2;i<6;i++){
  2933     0F93  3002               	movlw	2
  2934     0F94  1283               	bcf	3,5	;RP0=0, select bank0
  2935     0F95  1303               	bcf	3,6	;RP1=0, select bank0
  2936     0F96  00BC               	movwf	Auto@i
  2937     0F97  3000               	movlw	0
  2938     0F98  00BD               	movwf	Auto@i+1
  2939     0F99                     l2356:
  2940                           
  2941                           ;TTL_Logic.c: 47:         if(is_all_good(i,4)){
  2942     0F99  1283               	bcf	3,5	;RP0=0, select bank0
  2943     0F9A  1303               	bcf	3,6	;RP1=0, select bank0
  2944     0F9B  083D               	movf	Auto@i+1,w
  2945     0F9C  00F1               	movwf	is_all_good@n+1
  2946     0F9D  083C               	movf	Auto@i,w
  2947     0F9E  00F0               	movwf	is_all_good@n
  2948     0F9F  3004               	movlw	4
  2949     0FA0  00F2               	movwf	is_all_good@no
  2950     0FA1  3000               	movlw	0
  2951     0FA2  00F3               	movwf	is_all_good@no+1
  2952     0FA3  120A  158A  2409  120A  158A  	fcall	_is_all_good
  2953     0FA8  3A00               	xorlw	0
  2954     0FA9  1903               	skipnz
  2955     0FAA  2FAC               	goto	u3411
  2956     0FAB  2FAD               	goto	u3410
  2957     0FAC                     u3411:
  2958     0FAC  2FD5               	goto	l2362
  2959     0FAD                     u3410:
  2960     0FAD                     l2358:
  2961                           
  2962                           ;TTL_Logic.c: 48:             Write_IC();
  2963     0FAD  120A  158A  228A  120A  158A  	fcall	_Write_IC
  2964                           
  2965                           ;TTL_Logic.c: 49:             LCD_Write_String(name[i]);
  2966     0FB2  3005               	movlw	5
  2967     0FB3  00F0               	movwf	___bmul@multiplicand
  2968     0FB4  1283               	bcf	3,5	;RP0=0, select bank0
  2969     0FB5  1303               	bcf	3,6	;RP1=0, select bank0
  2970     0FB6  083C               	movf	Auto@i,w
  2971     0FB7  120A  158A  21F3  120A  158A  	fcall	___bmul
  2972     0FBC  3E17               	addlw	low ((_name-__stringbase)| (0+32768))
  2973     0FBD  00F6               	movwf	LCD_Write_String@str
  2974     0FBE  3080               	movlw	128
  2975     0FBF  00F7               	movwf	LCD_Write_String@str+1
  2976     0FC0  120A  158A  22EF  120A  158A  	fcall	_LCD_Write_String
  2977                           
  2978                           ;TTL_Logic.c: 50:             print(i,4);
  2979     0FC5  1283               	bcf	3,5	;RP0=0, select bank0
  2980     0FC6  1303               	bcf	3,6	;RP1=0, select bank0
  2981     0FC7  083D               	movf	Auto@i+1,w
  2982     0FC8  00AE               	movwf	print@n+1
  2983     0FC9  083C               	movf	Auto@i,w
  2984     0FCA  00AD               	movwf	print@n
  2985     0FCB  3004               	movlw	4
  2986     0FCC  00AF               	movwf	print@no
  2987     0FCD  3000               	movlw	0
  2988     0FCE  00B0               	movwf	print@no+1
  2989     0FCF  120A  158A  24B2  120A  158A  	fcall	_print
  2990     0FD4  2FFF               	goto	l279
  2991     0FD5                     l2362:
  2992     0FD5  3001               	movlw	1
  2993     0FD6  1283               	bcf	3,5	;RP0=0, select bank0
  2994     0FD7  1303               	bcf	3,6	;RP1=0, select bank0
  2995     0FD8  07BC               	addwf	Auto@i,f
  2996     0FD9  1803               	skipnc
  2997     0FDA  0ABD               	incf	Auto@i+1,f
  2998     0FDB  3000               	movlw	0
  2999     0FDC  07BD               	addwf	Auto@i+1,f
  3000     0FDD                     l2364:
  3001     0FDD  083D               	movf	Auto@i+1,w
  3002     0FDE  3A80               	xorlw	128
  3003     0FDF  00FF               	movwf	btemp+1
  3004     0FE0  3080               	movlw	128
  3005     0FE1  027F               	subwf	btemp+1,w
  3006     0FE2  1D03               	skipz
  3007     0FE3  2FE6               	goto	u3425
  3008     0FE4  3006               	movlw	6
  3009     0FE5  023C               	subwf	Auto@i,w
  3010     0FE6                     u3425:
  3011     0FE6  1C03               	skipc
  3012     0FE7  2FE9               	goto	u3421
  3013     0FE8  2FEA               	goto	u3420
  3014     0FE9                     u3421:
  3015     0FE9  2F99               	goto	l2356
  3016     0FEA                     u3420:
  3017     0FEA                     l2366:
  3018                           
  3019                           ;TTL_Logic.c: 52:     LCD_Set_Cursor(2,1);
  3020     0FEA  01F4               	clrf	LCD_Set_Cursor@c
  3021     0FEB  0AF4               	incf	LCD_Set_Cursor@c,f
  3022     0FEC  3002               	movlw	2
  3023     0FED  120A  158A  2375  120A  158A  	fcall	_LCD_Set_Cursor
  3024     0FF2                     l2368:
  3025                           
  3026                           ;TTL_Logic.c: 53:     LCD_Write_String("Not Dtc or Bad");
  3027     0FF2  304E               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  3028     0FF3  00F6               	movwf	LCD_Write_String@str
  3029     0FF4  3080               	movlw	128
  3030     0FF5  00F7               	movwf	LCD_Write_String@str+1
  3031     0FF6  120A  158A  22EF  120A  158A  	fcall	_LCD_Write_String
  3032     0FFB                     l2370:
  3033                           
  3034                           ;TTL_Logic.c: 54:     n=0;
  3035     0FFB  1283               	bcf	3,5	;RP0=0, select bank0
  3036     0FFC  1303               	bcf	3,6	;RP1=0, select bank0
  3037     0FFD  01E9               	clrf	_n
  3038     0FFE  01EA               	clrf	_n+1
  3039     0FFF                     l279:
  3040     0FFF  0008               	return
  3041     1000                     __end_of_Auto:
  3042                           
  3043                           	psect	text6
  3044     0CB2                     __ptext6:	
  3045 ;; *************** function _print *****************
  3046 ;; Defined at:
  3047 ;;		line 56 in file "TTL_Logic.c"
  3048 ;; Parameters:    Size  Location     Type
  3049 ;;  n               2   13[BANK0 ] unsigned int 
  3050 ;;  no              2   15[BANK0 ] unsigned int 
  3051 ;; Auto vars:     Size  Location     Type
  3052 ;;  charNum         3   23[BANK0 ] unsigned char [3]
  3053 ;;  num             2   26[BANK0 ] int 
  3054 ;; Return value:  Size  Location     Type
  3055 ;;                  1    wreg      void 
  3056 ;; Registers used:
  3057 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3058 ;; Tracked objects:
  3059 ;;		On entry : 0/0
  3060 ;;		On exit  : 0/0
  3061 ;;		Unchanged: 0/0
  3062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3063 ;;      Params:         0       4       0       0       0
  3064 ;;      Locals:         0       5       0       0       0
  3065 ;;      Temps:          0       6       0       0       0
  3066 ;;      Totals:         0      15       0       0       0
  3067 ;;Total ram usage:       15 bytes
  3068 ;; Hardware stack levels used: 1
  3069 ;; Hardware stack levels required when called: 3
  3070 ;; This function calls:
  3071 ;;		_LCD_Set_Cursor
  3072 ;;		_LCD_Write_String
  3073 ;;		_sprintf
  3074 ;; This function is called by:
  3075 ;;		_Test
  3076 ;;		_Auto
  3077 ;; This function uses a non-reentrant model
  3078 ;;
  3079                           
  3080     0CB2                     _print:	
  3081                           ;psect for function _print
  3082                           
  3083     0CB2                     l2018:	
  3084                           ;incstack = 0
  3085                           ; Regs used in _print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3086                           
  3087     0CB2                     l2020:
  3088                           
  3089                           ;TTL_Logic.c: 59:     char charNum[3];;TTL_Logic.c: 60:     LCD_Set_Cursor(2,1);
  3090     0CB2  01F4               	clrf	LCD_Set_Cursor@c
  3091     0CB3  0AF4               	incf	LCD_Set_Cursor@c,f
  3092     0CB4  3002               	movlw	2
  3093     0CB5  120A  158A  2375  120A  158A  	fcall	_LCD_Set_Cursor
  3094     0CBA                     l2022:
  3095                           
  3096                           ;TTL_Logic.c: 61:     j=0;
  3097     0CBA  1283               	bcf	3,5	;RP0=0, select bank0
  3098     0CBB  1303               	bcf	3,6	;RP1=0, select bank0
  3099     0CBC  01D7               	clrf	_j
  3100     0CBD  01D8               	clrf	_j+1
  3101     0CBE                     l2024:
  3102                           
  3103                           ;TTL_Logic.c: 62:     for(i=0;i<no;i++)
  3104     0CBE  01D9               	clrf	_i
  3105     0CBF  01DA               	clrf	_i+1
  3106     0CC0  2D12               	goto	l2038
  3107     0CC1                     l2026:
  3108                           
  3109                           ;TTL_Logic.c: 63:     {;TTL_Logic.c: 64:         if(truth[n]==gate[i])
  3110     0CC1  0859               	movf	_i,w
  3111     0CC2  00B1               	movwf	??_print
  3112     0CC3  0731               	addwf	??_print,w
  3113     0CC4  3E5D               	addlw	(low (_gate| 0))& (0+255)
  3114     0CC5  0084               	movwf	4
  3115     0CC6  1383               	bcf	3,7	;select IRP bank0
  3116     0CC7  0800               	movf	0,w
  3117     0CC8  00B2               	movwf	??_print+1
  3118     0CC9  0A84               	incf	4,f
  3119     0CCA  0800               	movf	0,w
  3120     0CCB  00B3               	movwf	??_print+2
  3121     0CCC  082D               	movf	print@n,w
  3122     0CCD  00B4               	movwf	??_print+3
  3123     0CCE  0734               	addwf	??_print+3,w
  3124     0CCF  3E01               	addlw	low ((_truth-__stringbase)| (0+32768))
  3125     0CD0  0084               	movwf	4
  3126     0CD1  120A  158A  200A  120A  158A  	fcall	stringdir
  3127     0CD6  00B5               	movwf	??_print+4
  3128     0CD7  120A  158A  200A  120A  158A  	fcall	stringdir
  3129     0CDC  00B6               	movwf	??_print+5
  3130     0CDD  0833               	movf	??_print+2,w
  3131     0CDE  0636               	xorwf	??_print+5,w
  3132     0CDF  1D03               	skipz
  3133     0CE0  2CE3               	goto	u2525
  3134     0CE1  0832               	movf	??_print+1,w
  3135     0CE2  0635               	xorwf	??_print+4,w
  3136     0CE3                     u2525:
  3137     0CE3  1D03               	skipz
  3138     0CE4  2CE6               	goto	u2521
  3139     0CE5  2CE7               	goto	u2520
  3140     0CE6                     u2521:
  3141     0CE6  2D0C               	goto	l2036
  3142     0CE7                     u2520:
  3143     0CE7                     l2028:
  3144                           
  3145                           ;TTL_Logic.c: 65:         {;TTL_Logic.c: 66:             num=i+1;
  3146     0CE7  0859               	movf	_i,w
  3147     0CE8  3E01               	addlw	1
  3148     0CE9  00BA               	movwf	print@num
  3149     0CEA  085A               	movf	_i+1,w
  3150     0CEB  1803               	skipnc
  3151     0CEC  3E01               	addlw	1
  3152     0CED  3E00               	addlw	0
  3153     0CEE  00BB               	movwf	print@num+1
  3154     0CEF                     l2030:
  3155                           
  3156                           ;TTL_Logic.c: 67:             sprintf(charNum, "%d", num);
  3157     0CEF  309A               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  3158     0CF0  00A0               	movwf	sprintf@f
  3159     0CF1  083B               	movf	print@num+1,w
  3160     0CF2  00A2               	movwf	?_sprintf+2
  3161     0CF3  083A               	movf	print@num,w
  3162     0CF4  00A1               	movwf	?_sprintf+1
  3163     0CF5  3037               	movlw	(low (print@charNum| 0))& (0+255)
  3164     0CF6  120A  158A  2540  120A  158A  	fcall	_sprintf
  3165     0CFB                     l2032:
  3166                           
  3167                           ;TTL_Logic.c: 68:             LCD_Write_String(charNum);
  3168     0CFB  3037               	movlw	(low (print@charNum| 0))& (0+255)
  3169     0CFC  00F6               	movwf	LCD_Write_String@str
  3170     0CFD  3000               	movlw	0
  3171     0CFE  00F7               	movwf	LCD_Write_String@str+1
  3172     0CFF  120A  158A  22EF  120A  158A  	fcall	_LCD_Write_String
  3173     0D04                     l2034:
  3174                           
  3175                           ;TTL_Logic.c: 69:             j++;
  3176     0D04  3001               	movlw	1
  3177     0D05  1283               	bcf	3,5	;RP0=0, select bank0
  3178     0D06  1303               	bcf	3,6	;RP1=0, select bank0
  3179     0D07  07D7               	addwf	_j,f
  3180     0D08  1803               	skipnc
  3181     0D09  0AD8               	incf	_j+1,f
  3182     0D0A  3000               	movlw	0
  3183     0D0B  07D8               	addwf	_j+1,f
  3184     0D0C                     l2036:
  3185                           
  3186                           ;TTL_Logic.c: 71:     }
  3187     0D0C  3001               	movlw	1
  3188     0D0D  07D9               	addwf	_i,f
  3189     0D0E  1803               	skipnc
  3190     0D0F  0ADA               	incf	_i+1,f
  3191     0D10  3000               	movlw	0
  3192     0D11  07DA               	addwf	_i+1,f
  3193     0D12                     l2038:
  3194     0D12  0830               	movf	print@no+1,w
  3195     0D13  025A               	subwf	_i+1,w
  3196     0D14  1D03               	skipz
  3197     0D15  2D18               	goto	u2535
  3198     0D16  082F               	movf	print@no,w
  3199     0D17  0259               	subwf	_i,w
  3200     0D18                     u2535:
  3201     0D18  1C03               	skipc
  3202     0D19  2D1B               	goto	u2531
  3203     0D1A  2D1C               	goto	u2530
  3204     0D1B                     u2531:
  3205     0D1B  2CC1               	goto	l2026
  3206     0D1C                     u2530:
  3207     0D1C                     l2040:
  3208                           
  3209                           ;TTL_Logic.c: 72:     if(j>1){LCD_Write_String(" GATE GOOD");}
  3210     0D1C  3000               	movlw	0
  3211     0D1D  0258               	subwf	_j+1,w
  3212     0D1E  3002               	movlw	2
  3213     0D1F  1903               	skipnz
  3214     0D20  0257               	subwf	_j,w
  3215     0D21  1C03               	skipc
  3216     0D22  2D24               	goto	u2541
  3217     0D23  2D25               	goto	u2540
  3218     0D24                     u2541:
  3219     0D24  2D2E               	goto	l2044
  3220     0D25                     u2540:
  3221     0D25                     l2042:
  3222     0D25  305D               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  3223     0D26  00F6               	movwf	LCD_Write_String@str
  3224     0D27  3080               	movlw	128
  3225     0D28  00F7               	movwf	LCD_Write_String@str+1
  3226     0D29  120A  158A  22EF  120A  158A  	fcall	_LCD_Write_String
  3227     0D2E                     l2044:
  3228                           
  3229                           ;TTL_Logic.c: 73:     if(j==0){LCD_Write_String("IC IS BAD");}
  3230     0D2E  1283               	bcf	3,5	;RP0=0, select bank0
  3231     0D2F  1303               	bcf	3,6	;RP1=0, select bank0
  3232     0D30  0857               	movf	_j,w
  3233     0D31  0458               	iorwf	_j+1,w
  3234     0D32  1D03               	btfss	3,2
  3235     0D33  2D35               	goto	u2551
  3236     0D34  2D36               	goto	u2550
  3237     0D35                     u2551:
  3238     0D35  2D3F               	goto	l292
  3239     0D36                     u2550:
  3240     0D36                     l2046:
  3241     0D36  307E               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  3242     0D37  00F6               	movwf	LCD_Write_String@str
  3243     0D38  3080               	movlw	128
  3244     0D39  00F7               	movwf	LCD_Write_String@str+1
  3245     0D3A  120A  158A  22EF  120A  158A  	fcall	_LCD_Write_String
  3246     0D3F                     l292:
  3247     0D3F  0008               	return
  3248     0D40                     __end_of_print:
  3249                           
  3250                           	psect	text7
  3251     0D40                     __ptext7:	
  3252 ;; *************** function _sprintf *****************
  3253 ;; Defined at:
  3254 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  3255 ;; Parameters:    Size  Location     Type
  3256 ;;  sp              1    wreg     PTR unsigned char 
  3257 ;;		 -> print@charNum(3), 
  3258 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  3259 ;;		 -> STR_6(3), 
  3260 ;; Auto vars:     Size  Location     Type
  3261 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  3262 ;;		 -> print@charNum(3), 
  3263 ;;  tmpval          4    0        struct .
  3264 ;;  val             2    9[BANK0 ] unsigned int 
  3265 ;;  cp              2    0        PTR const unsigned char 
  3266 ;;  len             2    0        unsigned int 
  3267 ;;  c               1   12[BANK0 ] unsigned char 
  3268 ;;  prec            1    8[BANK0 ] char 
  3269 ;;  flag            1    7[BANK0 ] unsigned char 
  3270 ;;  ap              1    6[BANK0 ] PTR void [1]
  3271 ;;		 -> ?_sprintf(2), 
  3272 ;; Return value:  Size  Location     Type
  3273 ;;                  2    0[BANK0 ] int 
  3274 ;; Registers used:
  3275 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3276 ;; Tracked objects:
  3277 ;;		On entry : 0/0
  3278 ;;		On exit  : 0/0
  3279 ;;		Unchanged: 0/0
  3280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3281 ;;      Params:         0       3       0       0       0
  3282 ;;      Locals:         0       7       0       0       0
  3283 ;;      Temps:          0       3       0       0       0
  3284 ;;      Totals:         0      13       0       0       0
  3285 ;;Total ram usage:       13 bytes
  3286 ;; Hardware stack levels used: 1
  3287 ;; Hardware stack levels required when called: 1
  3288 ;; This function calls:
  3289 ;;		___lwdiv
  3290 ;;		___lwmod
  3291 ;; This function is called by:
  3292 ;;		_print
  3293 ;; This function uses a non-reentrant model
  3294 ;;
  3295                           
  3296     0D40                     _sprintf:	
  3297                           ;psect for function _sprintf
  3298                           
  3299                           
  3300                           ;incstack = 0
  3301                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3302                           ;sprintf@sp stored from wreg
  3303     0D40  1283               	bcf	3,5	;RP0=0, select bank0
  3304     0D41  1303               	bcf	3,6	;RP1=0, select bank0
  3305     0D42  00AB               	movwf	sprintf@sp
  3306     0D43                     l1834:
  3307                           
  3308                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  3309     0D43  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  3310     0D44  00A6               	movwf	sprintf@ap
  3311                           
  3312                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3313     0D45  2E05               	goto	l1888
  3314     0D46                     l1836:
  3315                           
  3316                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  3317     0D46  3025               	movlw	37
  3318     0D47  062C               	xorwf	sprintf@c,w
  3319     0D48  1903               	btfsc	3,2
  3320     0D49  2D4B               	goto	u1991
  3321     0D4A  2D4C               	goto	u1990
  3322     0D4B                     u1991:
  3323     0D4B  2D56               	goto	l1842
  3324     0D4C                     u1990:
  3325     0D4C                     l1838:
  3326                           
  3327                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  3328     0D4C  082B               	movf	sprintf@sp,w
  3329     0D4D  0084               	movwf	4
  3330     0D4E  082C               	movf	sprintf@c,w
  3331     0D4F  1383               	bcf	3,7	;select IRP bank0
  3332     0D50  0080               	movwf	0
  3333     0D51                     l1840:
  3334     0D51  3001               	movlw	1
  3335     0D52  00FF               	movwf	btemp+1
  3336     0D53  087F               	movf	btemp+1,w
  3337     0D54  07AB               	addwf	sprintf@sp,f
  3338                           
  3339                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 559:    continue;
  3340     0D55  2E05               	goto	l1888
  3341     0D56                     l1842:
  3342                           
  3343                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  3344     0D56  01A7               	clrf	sprintf@flag
  3345     0D57                     l1846:	
  3346                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  3347                           
  3348     0D57  3001               	movlw	1
  3349     0D58  07A0               	addwf	sprintf@f,f
  3350     0D59  30FF               	movlw	-1
  3351     0D5A  0720               	addwf	sprintf@f,w
  3352     0D5B  0084               	movwf	4
  3353     0D5C  120A  158A  200A  120A  158A  	fcall	stringdir
  3354     0D61  00AC               	movwf	sprintf@c
  3355     0D62  00A3               	movwf	??_sprintf
  3356     0D63  01A4               	clrf	??_sprintf+1
  3357                           
  3358                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3359                           ; Switch size 1, requested type "simple"
  3360                           ; Number of cases is 1, Range of values is 0 to 0
  3361                           ; switch strategies available:
  3362                           ; Name         Instructions Cycles
  3363                           ; simple_byte            4     3 (average)
  3364                           ; direct_byte           11     8 (fixed)
  3365                           ; jumptable            260     6 (fixed)
  3366                           ;	Chosen strategy is simple_byte
  3367     0D64  0824               	movf	??_sprintf+1,w
  3368     0D65  3A00               	xorlw	0	; case 0
  3369     0D66  1903               	skipnz
  3370     0D67  2D69               	goto	l2448
  3371     0D68  2E05               	goto	l1888
  3372     0D69                     l2448:
  3373                           
  3374                           ; Switch size 1, requested type "simple"
  3375                           ; Number of cases is 3, Range of values is 0 to 105
  3376                           ; switch strategies available:
  3377                           ; Name         Instructions Cycles
  3378                           ; simple_byte           10     6 (average)
  3379                           ; jumptable            260     6 (fixed)
  3380                           ;	Chosen strategy is simple_byte
  3381     0D69  0823               	movf	??_sprintf,w
  3382     0D6A  3A00               	xorlw	0	; case 0
  3383     0D6B  1903               	skipnz
  3384     0D6C  2E15               	goto	l1890
  3385     0D6D  3A64               	xorlw	100	; case 100
  3386     0D6E  1903               	skipnz
  3387     0D6F  2D74               	goto	l1848
  3388     0D70  3A0D               	xorlw	13	; case 105
  3389     0D71  1903               	skipnz
  3390     0D72  2D74               	goto	l1848
  3391     0D73  2E05               	goto	l1888
  3392     0D74                     l1848:
  3393                           
  3394                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3395     0D74  0826               	movf	sprintf@ap,w
  3396     0D75  0084               	movwf	4
  3397     0D76  1383               	bcf	3,7	;select IRP bank0
  3398     0D77  0800               	movf	0,w
  3399     0D78  00A9               	movwf	sprintf@val
  3400     0D79  0A84               	incf	4,f
  3401     0D7A  0800               	movf	0,w
  3402     0D7B  00AA               	movwf	sprintf@val+1
  3403     0D7C                     l1850:
  3404     0D7C  3002               	movlw	2
  3405     0D7D  00FF               	movwf	btemp+1
  3406     0D7E  087F               	movf	btemp+1,w
  3407     0D7F  07A6               	addwf	sprintf@ap,f
  3408     0D80                     l1852:
  3409                           
  3410                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  3411     0D80  1FAA               	btfss	sprintf@val+1,7
  3412     0D81  2D83               	goto	u2001
  3413     0D82  2D84               	goto	u2000
  3414     0D83                     u2001:
  3415     0D83  2D8D               	goto	l1858
  3416     0D84                     u2000:
  3417     0D84                     l1854:
  3418                           
  3419                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  3420     0D84  3003               	movlw	3
  3421     0D85  00FF               	movwf	btemp+1
  3422     0D86  087F               	movf	btemp+1,w
  3423     0D87  04A7               	iorwf	sprintf@flag,f
  3424     0D88                     l1856:
  3425                           
  3426                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  3427     0D88  09A9               	comf	sprintf@val,f
  3428     0D89  09AA               	comf	sprintf@val+1,f
  3429     0D8A  0AA9               	incf	sprintf@val,f
  3430     0D8B  1903               	skipnz
  3431     0D8C  0AAA               	incf	sprintf@val+1,f
  3432     0D8D                     l1858:
  3433                           
  3434                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  3435     0D8D  01AC               	clrf	sprintf@c
  3436     0D8E  0AAC               	incf	sprintf@c,f
  3437     0D8F                     l1864:
  3438                           
  3439                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  3440     0D8F  082C               	movf	sprintf@c,w
  3441     0D90  00A3               	movwf	??_sprintf
  3442     0D91  0723               	addwf	??_sprintf,w
  3443     0D92  3E0D               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3444     0D93  0084               	movwf	4
  3445     0D94  120A  158A  200A  120A  158A  	fcall	stringdir
  3446     0D99  00A4               	movwf	??_sprintf+1
  3447     0D9A  120A  158A  200A  120A  158A  	fcall	stringdir
  3448     0D9F  00A5               	movwf	??_sprintf+2
  3449     0DA0  0825               	movf	??_sprintf+2,w
  3450     0DA1  022A               	subwf	sprintf@val+1,w
  3451     0DA2  1D03               	skipz
  3452     0DA3  2DA6               	goto	u2015
  3453     0DA4  0824               	movf	??_sprintf+1,w
  3454     0DA5  0229               	subwf	sprintf@val,w
  3455     0DA6                     u2015:
  3456     0DA6  1803               	skipnc
  3457     0DA7  2DA9               	goto	u2011
  3458     0DA8  2DAA               	goto	u2010
  3459     0DA9                     u2011:
  3460     0DA9  2DAB               	goto	l1868
  3461     0DAA                     u2010:
  3462     0DAA  2DB5               	goto	l1872
  3463     0DAB                     l1868:
  3464     0DAB  3001               	movlw	1
  3465     0DAC  00FF               	movwf	btemp+1
  3466     0DAD  087F               	movf	btemp+1,w
  3467     0DAE  07AC               	addwf	sprintf@c,f
  3468     0DAF                     l1870:
  3469     0DAF  3005               	movlw	5
  3470     0DB0  062C               	xorwf	sprintf@c,w
  3471     0DB1  1D03               	btfss	3,2
  3472     0DB2  2DB4               	goto	u2021
  3473     0DB3  2DB5               	goto	u2020
  3474     0DB4                     u2021:
  3475     0DB4  2D8F               	goto	l1864
  3476     0DB5                     u2020:
  3477     0DB5                     l1872:
  3478                           
  3479                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  3480     0DB5  0827               	movf	sprintf@flag,w
  3481     0DB6  3903               	andlw	3
  3482     0DB7  1903               	btfsc	3,2
  3483     0DB8  2DBA               	goto	u2031
  3484     0DB9  2DBB               	goto	u2030
  3485     0DBA                     u2031:
  3486     0DBA  2DC4               	goto	l1878
  3487     0DBB                     u2030:
  3488     0DBB                     l1874:
  3489                           
  3490                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  3491     0DBB  082B               	movf	sprintf@sp,w
  3492     0DBC  0084               	movwf	4
  3493     0DBD  302D               	movlw	45
  3494     0DBE  1383               	bcf	3,7	;select IRP bank0
  3495     0DBF  0080               	movwf	0
  3496     0DC0                     l1876:
  3497     0DC0  3001               	movlw	1
  3498     0DC1  00FF               	movwf	btemp+1
  3499     0DC2  087F               	movf	btemp+1,w
  3500     0DC3  07AB               	addwf	sprintf@sp,f
  3501     0DC4                     l1878:
  3502                           
  3503                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  3504     0DC4  082C               	movf	sprintf@c,w
  3505     0DC5  00A8               	movwf	sprintf@prec
  3506                           
  3507                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3508     0DC6  2DFC               	goto	l1886
  3509     0DC7                     l1880:
  3510                           
  3511                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  3512     0DC7  300A               	movlw	10
  3513     0DC8  00F7               	movwf	___lwmod@divisor
  3514     0DC9  3000               	movlw	0
  3515     0DCA  00F8               	movwf	___lwmod@divisor+1
  3516     0DCB  0828               	movf	sprintf@prec,w
  3517     0DCC  00A3               	movwf	??_sprintf
  3518     0DCD  0723               	addwf	??_sprintf,w
  3519     0DCE  3E0D               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3520     0DCF  0084               	movwf	4
  3521     0DD0  120A  158A  200A  120A  158A  	fcall	stringdir
  3522     0DD5  00F0               	movwf	___lwdiv@divisor
  3523     0DD6  120A  158A  200A  120A  158A  	fcall	stringdir
  3524     0DDB  00F1               	movwf	___lwdiv@divisor+1
  3525     0DDC  082A               	movf	sprintf@val+1,w
  3526     0DDD  00F3               	movwf	___lwdiv@dividend+1
  3527     0DDE  0829               	movf	sprintf@val,w
  3528     0DDF  00F2               	movwf	___lwdiv@dividend
  3529     0DE0  120A  158A  2331  120A  158A  	fcall	___lwdiv
  3530     0DE5  0871               	movf	?___lwdiv+1,w
  3531     0DE6  00FA               	movwf	___lwmod@dividend+1
  3532     0DE7  0870               	movf	?___lwdiv,w
  3533     0DE8  00F9               	movwf	___lwmod@dividend
  3534     0DE9  120A  158A  22B5  120A  158A  	fcall	___lwmod
  3535     0DEE  0877               	movf	?___lwmod,w
  3536     0DEF  3E30               	addlw	48
  3537     0DF0  1283               	bcf	3,5	;RP0=0, select bank0
  3538     0DF1  1303               	bcf	3,6	;RP1=0, select bank0
  3539     0DF2  00AC               	movwf	sprintf@c
  3540     0DF3                     l1882:
  3541                           
  3542                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  3543     0DF3  082B               	movf	sprintf@sp,w
  3544     0DF4  0084               	movwf	4
  3545     0DF5  082C               	movf	sprintf@c,w
  3546     0DF6  1383               	bcf	3,7	;select IRP bank0
  3547     0DF7  0080               	movwf	0
  3548     0DF8                     l1884:
  3549     0DF8  3001               	movlw	1
  3550     0DF9  00FF               	movwf	btemp+1
  3551     0DFA  087F               	movf	btemp+1,w
  3552     0DFB  07AB               	addwf	sprintf@sp,f
  3553     0DFC                     l1886:
  3554                           
  3555                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3556     0DFC  30FF               	movlw	255
  3557     0DFD  00FF               	movwf	btemp+1
  3558     0DFE  087F               	movf	btemp+1,w
  3559     0DFF  07A8               	addwf	sprintf@prec,f
  3560     0E00  0A28               	incf	sprintf@prec,w
  3561     0E01  1D03               	btfss	3,2
  3562     0E02  2E04               	goto	u2041
  3563     0E03  2E05               	goto	u2040
  3564     0E04                     u2041:
  3565     0E04  2DC7               	goto	l1880
  3566     0E05                     u2040:
  3567     0E05                     l1888:
  3568                           
  3569                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3570     0E05  3001               	movlw	1
  3571     0E06  07A0               	addwf	sprintf@f,f
  3572     0E07  30FF               	movlw	-1
  3573     0E08  0720               	addwf	sprintf@f,w
  3574     0E09  0084               	movwf	4
  3575     0E0A  120A  158A  200A  120A  158A  	fcall	stringdir
  3576     0E0F  00AC               	movwf	sprintf@c
  3577     0E10  082C               	movf	sprintf@c,w
  3578     0E11  1D03               	btfss	3,2
  3579     0E12  2E14               	goto	u2051
  3580     0E13  2E15               	goto	u2050
  3581     0E14                     u2051:
  3582     0E14  2D46               	goto	l1836
  3583     0E15                     u2050:
  3584     0E15                     l1890:
  3585                           
  3586                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3587     0E15  082B               	movf	sprintf@sp,w
  3588     0E16  0084               	movwf	4
  3589     0E17  1383               	bcf	3,7	;select IRP bank0
  3590     0E18  0180               	clrf	0
  3591     0E19                     l466:
  3592     0E19  0008               	return
  3593     0E1A                     __end_of_sprintf:
  3594                           
  3595                           	psect	text8
  3596     0AB5                     __ptext8:	
  3597 ;; *************** function ___lwmod *****************
  3598 ;; Defined at:
  3599 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwmod.c"
  3600 ;; Parameters:    Size  Location     Type
  3601 ;;  divisor         2    7[COMMON] unsigned int 
  3602 ;;  dividend        2    9[COMMON] unsigned int 
  3603 ;; Auto vars:     Size  Location     Type
  3604 ;;  counter         1   11[COMMON] unsigned char 
  3605 ;; Return value:  Size  Location     Type
  3606 ;;                  2    7[COMMON] unsigned int 
  3607 ;; Registers used:
  3608 ;;		wreg, status,2, status,0, btemp+1
  3609 ;; Tracked objects:
  3610 ;;		On entry : 0/0
  3611 ;;		On exit  : 0/0
  3612 ;;		Unchanged: 0/0
  3613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3614 ;;      Params:         4       0       0       0       0
  3615 ;;      Locals:         1       0       0       0       0
  3616 ;;      Temps:          0       0       0       0       0
  3617 ;;      Totals:         5       0       0       0       0
  3618 ;;Total ram usage:        5 bytes
  3619 ;; Hardware stack levels used: 1
  3620 ;; This function calls:
  3621 ;;		Nothing
  3622 ;; This function is called by:
  3623 ;;		_main
  3624 ;;		_sprintf
  3625 ;; This function uses a non-reentrant model
  3626 ;;
  3627                           
  3628     0AB5                     ___lwmod:	
  3629                           ;psect for function ___lwmod
  3630                           
  3631     0AB5                     l1782:	
  3632                           ;incstack = 0
  3633                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  3634                           
  3635     0AB5  0877               	movf	___lwmod@divisor,w
  3636     0AB6  0478               	iorwf	___lwmod@divisor+1,w
  3637     0AB7  1903               	btfsc	3,2
  3638     0AB8  2ABA               	goto	u1861
  3639     0AB9  2ABB               	goto	u1860
  3640     0ABA                     u1861:
  3641     0ABA  2AEA               	goto	l1800
  3642     0ABB                     u1860:
  3643     0ABB                     l1784:
  3644     0ABB  01FB               	clrf	___lwmod@counter
  3645     0ABC  0AFB               	incf	___lwmod@counter,f
  3646     0ABD  2AC9               	goto	l1790
  3647     0ABE                     l1786:
  3648     0ABE  3001               	movlw	1
  3649     0ABF                     u1875:
  3650     0ABF  1003               	clrc
  3651     0AC0  0DF7               	rlf	___lwmod@divisor,f
  3652     0AC1  0DF8               	rlf	___lwmod@divisor+1,f
  3653     0AC2  3EFF               	addlw	-1
  3654     0AC3  1D03               	skipz
  3655     0AC4  2ABF               	goto	u1875
  3656     0AC5                     l1788:
  3657     0AC5  3001               	movlw	1
  3658     0AC6  00FF               	movwf	btemp+1
  3659     0AC7  087F               	movf	btemp+1,w
  3660     0AC8  07FB               	addwf	___lwmod@counter,f
  3661     0AC9                     l1790:
  3662     0AC9  1FF8               	btfss	___lwmod@divisor+1,7
  3663     0ACA  2ACC               	goto	u1881
  3664     0ACB  2ACD               	goto	u1880
  3665     0ACC                     u1881:
  3666     0ACC  2ABE               	goto	l1786
  3667     0ACD                     u1880:
  3668     0ACD                     l1792:
  3669     0ACD  0878               	movf	___lwmod@divisor+1,w
  3670     0ACE  027A               	subwf	___lwmod@dividend+1,w
  3671     0ACF  1D03               	skipz
  3672     0AD0  2AD3               	goto	u1895
  3673     0AD1  0877               	movf	___lwmod@divisor,w
  3674     0AD2  0279               	subwf	___lwmod@dividend,w
  3675     0AD3                     u1895:
  3676     0AD3  1C03               	skipc
  3677     0AD4  2AD6               	goto	u1891
  3678     0AD5  2AD7               	goto	u1890
  3679     0AD6                     u1891:
  3680     0AD6  2ADD               	goto	l1796
  3681     0AD7                     u1890:
  3682     0AD7                     l1794:
  3683     0AD7  0877               	movf	___lwmod@divisor,w
  3684     0AD8  02F9               	subwf	___lwmod@dividend,f
  3685     0AD9  0878               	movf	___lwmod@divisor+1,w
  3686     0ADA  1C03               	skipc
  3687     0ADB  03FA               	decf	___lwmod@dividend+1,f
  3688     0ADC  02FA               	subwf	___lwmod@dividend+1,f
  3689     0ADD                     l1796:
  3690     0ADD  3001               	movlw	1
  3691     0ADE                     u1905:
  3692     0ADE  1003               	clrc
  3693     0ADF  0CF8               	rrf	___lwmod@divisor+1,f
  3694     0AE0  0CF7               	rrf	___lwmod@divisor,f
  3695     0AE1  3EFF               	addlw	-1
  3696     0AE2  1D03               	skipz
  3697     0AE3  2ADE               	goto	u1905
  3698     0AE4                     l1798:
  3699     0AE4  3001               	movlw	1
  3700     0AE5  02FB               	subwf	___lwmod@counter,f
  3701     0AE6  1D03               	btfss	3,2
  3702     0AE7  2AE9               	goto	u1911
  3703     0AE8  2AEA               	goto	u1910
  3704     0AE9                     u1911:
  3705     0AE9  2ACD               	goto	l1792
  3706     0AEA                     u1910:
  3707     0AEA                     l1800:
  3708     0AEA  087A               	movf	___lwmod@dividend+1,w
  3709     0AEB  00F8               	movwf	?___lwmod+1
  3710     0AEC  0879               	movf	___lwmod@dividend,w
  3711     0AED  00F7               	movwf	?___lwmod
  3712     0AEE                     l752:
  3713     0AEE  0008               	return
  3714     0AEF                     __end_of___lwmod:
  3715                           
  3716                           	psect	text9
  3717     0B31                     __ptext9:	
  3718 ;; *************** function ___lwdiv *****************
  3719 ;; Defined at:
  3720 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
  3721 ;; Parameters:    Size  Location     Type
  3722 ;;  divisor         2    0[COMMON] unsigned int 
  3723 ;;  dividend        2    2[COMMON] unsigned int 
  3724 ;; Auto vars:     Size  Location     Type
  3725 ;;  quotient        2    4[COMMON] unsigned int 
  3726 ;;  counter         1    6[COMMON] unsigned char 
  3727 ;; Return value:  Size  Location     Type
  3728 ;;                  2    0[COMMON] unsigned int 
  3729 ;; Registers used:
  3730 ;;		wreg, status,2, status,0, btemp+1
  3731 ;; Tracked objects:
  3732 ;;		On entry : 0/0
  3733 ;;		On exit  : 0/0
  3734 ;;		Unchanged: 0/0
  3735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3736 ;;      Params:         4       0       0       0       0
  3737 ;;      Locals:         3       0       0       0       0
  3738 ;;      Temps:          0       0       0       0       0
  3739 ;;      Totals:         7       0       0       0       0
  3740 ;;Total ram usage:        7 bytes
  3741 ;; Hardware stack levels used: 1
  3742 ;; This function calls:
  3743 ;;		Nothing
  3744 ;; This function is called by:
  3745 ;;		_sprintf
  3746 ;; This function uses a non-reentrant model
  3747 ;;
  3748                           
  3749     0B31                     ___lwdiv:	
  3750                           ;psect for function ___lwdiv
  3751                           
  3752     0B31                     l1756:	
  3753                           ;incstack = 0
  3754                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  3755                           
  3756     0B31  01F4               	clrf	___lwdiv@quotient
  3757     0B32  01F5               	clrf	___lwdiv@quotient+1
  3758     0B33                     l1758:
  3759     0B33  0870               	movf	___lwdiv@divisor,w
  3760     0B34  0471               	iorwf	___lwdiv@divisor+1,w
  3761     0B35  1903               	btfsc	3,2
  3762     0B36  2B38               	goto	u1791
  3763     0B37  2B39               	goto	u1790
  3764     0B38                     u1791:
  3765     0B38  2B70               	goto	l1778
  3766     0B39                     u1790:
  3767     0B39                     l1760:
  3768     0B39  01F6               	clrf	___lwdiv@counter
  3769     0B3A  0AF6               	incf	___lwdiv@counter,f
  3770     0B3B  2B47               	goto	l1766
  3771     0B3C                     l1762:
  3772     0B3C  3001               	movlw	1
  3773     0B3D                     u1805:
  3774     0B3D  1003               	clrc
  3775     0B3E  0DF0               	rlf	___lwdiv@divisor,f
  3776     0B3F  0DF1               	rlf	___lwdiv@divisor+1,f
  3777     0B40  3EFF               	addlw	-1
  3778     0B41  1D03               	skipz
  3779     0B42  2B3D               	goto	u1805
  3780     0B43                     l1764:
  3781     0B43  3001               	movlw	1
  3782     0B44  00FF               	movwf	btemp+1
  3783     0B45  087F               	movf	btemp+1,w
  3784     0B46  07F6               	addwf	___lwdiv@counter,f
  3785     0B47                     l1766:
  3786     0B47  1FF1               	btfss	___lwdiv@divisor+1,7
  3787     0B48  2B4A               	goto	u1811
  3788     0B49  2B4B               	goto	u1810
  3789     0B4A                     u1811:
  3790     0B4A  2B3C               	goto	l1762
  3791     0B4B                     u1810:
  3792     0B4B                     l1768:
  3793     0B4B  3001               	movlw	1
  3794     0B4C                     u1825:
  3795     0B4C  1003               	clrc
  3796     0B4D  0DF4               	rlf	___lwdiv@quotient,f
  3797     0B4E  0DF5               	rlf	___lwdiv@quotient+1,f
  3798     0B4F  3EFF               	addlw	-1
  3799     0B50  1D03               	skipz
  3800     0B51  2B4C               	goto	u1825
  3801     0B52  0871               	movf	___lwdiv@divisor+1,w
  3802     0B53  0273               	subwf	___lwdiv@dividend+1,w
  3803     0B54  1D03               	skipz
  3804     0B55  2B58               	goto	u1835
  3805     0B56  0870               	movf	___lwdiv@divisor,w
  3806     0B57  0272               	subwf	___lwdiv@dividend,w
  3807     0B58                     u1835:
  3808     0B58  1C03               	skipc
  3809     0B59  2B5B               	goto	u1831
  3810     0B5A  2B5C               	goto	u1830
  3811     0B5B                     u1831:
  3812     0B5B  2B63               	goto	l1774
  3813     0B5C                     u1830:
  3814     0B5C                     l1770:
  3815     0B5C  0870               	movf	___lwdiv@divisor,w
  3816     0B5D  02F2               	subwf	___lwdiv@dividend,f
  3817     0B5E  0871               	movf	___lwdiv@divisor+1,w
  3818     0B5F  1C03               	skipc
  3819     0B60  03F3               	decf	___lwdiv@dividend+1,f
  3820     0B61  02F3               	subwf	___lwdiv@dividend+1,f
  3821     0B62                     l1772:
  3822     0B62  1474               	bsf	___lwdiv@quotient,0
  3823     0B63                     l1774:
  3824     0B63  3001               	movlw	1
  3825     0B64                     u1845:
  3826     0B64  1003               	clrc
  3827     0B65  0CF1               	rrf	___lwdiv@divisor+1,f
  3828     0B66  0CF0               	rrf	___lwdiv@divisor,f
  3829     0B67  3EFF               	addlw	-1
  3830     0B68  1D03               	skipz
  3831     0B69  2B64               	goto	u1845
  3832     0B6A                     l1776:
  3833     0B6A  3001               	movlw	1
  3834     0B6B  02F6               	subwf	___lwdiv@counter,f
  3835     0B6C  1D03               	btfss	3,2
  3836     0B6D  2B6F               	goto	u1851
  3837     0B6E  2B70               	goto	u1850
  3838     0B6F                     u1851:
  3839     0B6F  2B4B               	goto	l1768
  3840     0B70                     u1850:
  3841     0B70                     l1778:
  3842     0B70  0875               	movf	___lwdiv@quotient+1,w
  3843     0B71  00F1               	movwf	?___lwdiv+1
  3844     0B72  0874               	movf	___lwdiv@quotient,w
  3845     0B73  00F0               	movwf	?___lwdiv
  3846     0B74                     l742:
  3847     0B74  0008               	return
  3848     0B75                     __end_of___lwdiv:
  3849                           
  3850                           	psect	text10
  3851     0C09                     __ptext10:	
  3852 ;; *************** function _is_all_good *****************
  3853 ;; Defined at:
  3854 ;;		line 75 in file "TTL_Logic.c"
  3855 ;; Parameters:    Size  Location     Type
  3856 ;;  n               2    0[COMMON] unsigned int 
  3857 ;;  no              2    2[COMMON] unsigned int 
  3858 ;; Auto vars:     Size  Location     Type
  3859 ;;		None
  3860 ;; Return value:  Size  Location     Type
  3861 ;;                  1    wreg      _Bool 
  3862 ;; Registers used:
  3863 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  3864 ;; Tracked objects:
  3865 ;;		On entry : 0/0
  3866 ;;		On exit  : 0/0
  3867 ;;		Unchanged: 0/0
  3868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3869 ;;      Params:         4       0       0       0       0
  3870 ;;      Locals:         0       0       0       0       0
  3871 ;;      Temps:          6       0       0       0       0
  3872 ;;      Totals:        10       0       0       0       0
  3873 ;;Total ram usage:       10 bytes
  3874 ;; Hardware stack levels used: 2
  3875 ;; This function calls:
  3876 ;;		Nothing
  3877 ;; This function is called by:
  3878 ;;		_Auto
  3879 ;; This function uses a non-reentrant model
  3880 ;;
  3881                           
  3882     0C09                     _is_all_good:	
  3883                           ;psect for function _is_all_good
  3884                           
  3885     0C09                     l2216:	
  3886                           ;incstack = 0
  3887                           ; Regs used in _is_all_good: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  3888                           
  3889                           
  3890                           ;TTL_Logic.c: 75: _Bool is_all_good(unsigned int n,unsigned int no);TTL_Logic.c: 76: {;T
      +                          TL_Logic.c: 77:     j=0;
  3891     0C09  1283               	bcf	3,5	;RP0=0, select bank0
  3892     0C0A  1303               	bcf	3,6	;RP1=0, select bank0
  3893     0C0B  01D7               	clrf	_j
  3894     0C0C  01D8               	clrf	_j+1
  3895                           
  3896                           ;TTL_Logic.c: 78:     for(i=0;i<no;i++)
  3897     0C0D  01D9               	clrf	_i
  3898     0C0E  01DA               	clrf	_i+1
  3899     0C0F  2C42               	goto	l295
  3900     0C10                     l2218:
  3901                           
  3902                           ;TTL_Logic.c: 79:     {;TTL_Logic.c: 80:         if(truth[n]==gate[i])
  3903     0C10  0859               	movf	_i,w
  3904     0C11  00F4               	movwf	??_is_all_good
  3905     0C12  0774               	addwf	??_is_all_good,w
  3906     0C13  3E5D               	addlw	(low (_gate| 0))& (0+255)
  3907     0C14  0084               	movwf	4
  3908     0C15  1383               	bcf	3,7	;select IRP bank0
  3909     0C16  0800               	movf	0,w
  3910     0C17  00F5               	movwf	??_is_all_good+1
  3911     0C18  0A84               	incf	4,f
  3912     0C19  0800               	movf	0,w
  3913     0C1A  00F6               	movwf	??_is_all_good+2
  3914     0C1B  0870               	movf	is_all_good@n,w
  3915     0C1C  00F7               	movwf	??_is_all_good+3
  3916     0C1D  0777               	addwf	??_is_all_good+3,w
  3917     0C1E  3E01               	addlw	low ((_truth-__stringbase)| (0+32768))
  3918     0C1F  0084               	movwf	4
  3919     0C20  120A  158A  200A  120A  158A  	fcall	stringdir
  3920     0C25  00F8               	movwf	??_is_all_good+4
  3921     0C26  120A  158A  200A  120A  158A  	fcall	stringdir
  3922     0C2B  00F9               	movwf	??_is_all_good+5
  3923     0C2C  0876               	movf	??_is_all_good+2,w
  3924     0C2D  0679               	xorwf	??_is_all_good+5,w
  3925     0C2E  1D03               	skipz
  3926     0C2F  2C32               	goto	u3305
  3927     0C30  0875               	movf	??_is_all_good+1,w
  3928     0C31  0678               	xorwf	??_is_all_good+4,w
  3929     0C32                     u3305:
  3930     0C32  1D03               	skipz
  3931     0C33  2C35               	goto	u3301
  3932     0C34  2C36               	goto	u3300
  3933     0C35                     u3301:
  3934     0C35  2C3C               	goto	l297
  3935     0C36                     u3300:
  3936     0C36                     l2220:
  3937                           
  3938                           ;TTL_Logic.c: 81:         {;TTL_Logic.c: 82:             j++;}}
  3939     0C36  3001               	movlw	1
  3940     0C37  07D7               	addwf	_j,f
  3941     0C38  1803               	skipnc
  3942     0C39  0AD8               	incf	_j+1,f
  3943     0C3A  3000               	movlw	0
  3944     0C3B  07D8               	addwf	_j+1,f
  3945     0C3C                     l297:
  3946     0C3C  3001               	movlw	1
  3947     0C3D  07D9               	addwf	_i,f
  3948     0C3E  1803               	skipnc
  3949     0C3F  0ADA               	incf	_i+1,f
  3950     0C40  3000               	movlw	0
  3951     0C41  07DA               	addwf	_i+1,f
  3952     0C42                     l295:
  3953     0C42  0873               	movf	is_all_good@no+1,w
  3954     0C43  025A               	subwf	_i+1,w
  3955     0C44  1D03               	skipz
  3956     0C45  2C48               	goto	u3315
  3957     0C46  0872               	movf	is_all_good@no,w
  3958     0C47  0259               	subwf	_i,w
  3959     0C48                     u3315:
  3960     0C48  1C03               	skipc
  3961     0C49  2C4B               	goto	u3311
  3962     0C4A  2C4C               	goto	u3310
  3963     0C4B                     u3311:
  3964     0C4B  2C10               	goto	l2218
  3965     0C4C                     u3310:
  3966     0C4C                     l2222:
  3967                           
  3968                           ;TTL_Logic.c: 83:     if(j==no) return 1;
  3969     0C4C  0873               	movf	is_all_good@no+1,w
  3970     0C4D  0658               	xorwf	_j+1,w
  3971     0C4E  1D03               	skipz
  3972     0C4F  2C52               	goto	u3325
  3973     0C50  0872               	movf	is_all_good@no,w
  3974     0C51  0657               	xorwf	_j,w
  3975     0C52                     u3325:
  3976     0C52  1D03               	skipz
  3977     0C53  2C55               	goto	u3321
  3978     0C54  2C56               	goto	u3320
  3979     0C55                     u3321:
  3980     0C55  2C58               	goto	l2230
  3981     0C56                     u3320:
  3982     0C56                     l2224:
  3983     0C56  3001               	movlw	1
  3984     0C57  2C59               	goto	l300
  3985     0C58                     l2230:
  3986     0C58  3000               	movlw	0
  3987     0C59                     l300:
  3988     0C59  0008               	return
  3989     0C5A                     __end_of_is_all_good:
  3990                           
  3991                           	psect	text11
  3992     0A22                     __ptext11:	
  3993 ;; *************** function _gate_1 *****************
  3994 ;; Defined at:
  3995 ;;		line 169 in file "TTL_Logic.c"
  3996 ;; Parameters:    Size  Location     Type
  3997 ;;		None
  3998 ;; Auto vars:     Size  Location     Type
  3999 ;;		None
  4000 ;; Return value:  Size  Location     Type
  4001 ;;                  1    wreg      void 
  4002 ;; Registers used:
  4003 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4004 ;; Tracked objects:
  4005 ;;		On entry : 0/0
  4006 ;;		On exit  : 0/0
  4007 ;;		Unchanged: 0/0
  4008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4009 ;;      Params:         0       0       0       0       0
  4010 ;;      Locals:         0       0       0       0       0
  4011 ;;      Temps:          1       0       0       0       0
  4012 ;;      Totals:         1       0       0       0       0
  4013 ;;Total ram usage:        1 bytes
  4014 ;; Hardware stack levels used: 1
  4015 ;; This function calls:
  4016 ;;		Nothing
  4017 ;; This function is called by:
  4018 ;;		_Test
  4019 ;;		_Auto
  4020 ;; This function uses a non-reentrant model
  4021 ;;
  4022                           
  4023     0A22                     _gate_1:	
  4024                           ;psect for function _gate_1
  4025                           
  4026     0A22                     l2048:	
  4027                           ;incstack = 0
  4028                           ; Regs used in _gate_1: [wreg-fsr0h+status,2+status,0]
  4029                           
  4030                           
  4031                           ;TTL_Logic.c: 171:     for(i=0;i<6;i++)
  4032     0A22  1283               	bcf	3,5	;RP0=0, select bank0
  4033     0A23  1303               	bcf	3,6	;RP1=0, select bank0
  4034     0A24  01D9               	clrf	_i
  4035     0A25  01DA               	clrf	_i+1
  4036     0A26                     l2050:
  4037     0A26  3000               	movlw	0
  4038     0A27  025A               	subwf	_i+1,w
  4039     0A28  3006               	movlw	6
  4040     0A29  1903               	skipnz
  4041     0A2A  0259               	subwf	_i,w
  4042     0A2B  1C03               	skipc
  4043     0A2C  2A2E               	goto	u2561
  4044     0A2D  2A2F               	goto	u2560
  4045     0A2E                     u2561:
  4046     0A2E  2A30               	goto	l2054
  4047     0A2F                     u2560:
  4048     0A2F  2A42               	goto	l324
  4049     0A30                     l2054:
  4050                           
  4051                           ;TTL_Logic.c: 172:     {;TTL_Logic.c: 173:         gate[i]=1;
  4052     0A30  0859               	movf	_i,w
  4053     0A31  00F0               	movwf	??_gate_1
  4054     0A32  0770               	addwf	??_gate_1,w
  4055     0A33  3E5D               	addlw	(low (_gate| 0))& (0+255)
  4056     0A34  0084               	movwf	4
  4057     0A35  3001               	movlw	1
  4058     0A36  1383               	bcf	3,7	;select IRP bank0
  4059     0A37  0080               	movwf	0
  4060     0A38  0A84               	incf	4,f
  4061     0A39  3000               	movlw	0
  4062     0A3A  0080               	movwf	0
  4063     0A3B                     l2056:
  4064                           
  4065                           ;TTL_Logic.c: 174:     }
  4066     0A3B  3001               	movlw	1
  4067     0A3C  07D9               	addwf	_i,f
  4068     0A3D  1803               	skipnc
  4069     0A3E  0ADA               	incf	_i+1,f
  4070     0A3F  3000               	movlw	0
  4071     0A40  07DA               	addwf	_i+1,f
  4072     0A41  2A26               	goto	l2050
  4073     0A42                     l324:
  4074     0A42  0008               	return
  4075     0A43                     __end_of_gate_1:
  4076                           
  4077                           	psect	text12
  4078     09F3                     __ptext12:	
  4079 ;; *************** function ___bmul *****************
  4080 ;; Defined at:
  4081 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul8.c"
  4082 ;; Parameters:    Size  Location     Type
  4083 ;;  multiplier      1    wreg     unsigned char 
  4084 ;;  multiplicand    1    0[COMMON] unsigned char 
  4085 ;; Auto vars:     Size  Location     Type
  4086 ;;  multiplier      1    2[COMMON] unsigned char 
  4087 ;;  product         1    1[COMMON] unsigned char 
  4088 ;; Return value:  Size  Location     Type
  4089 ;;                  1    wreg      unsigned char 
  4090 ;; Registers used:
  4091 ;;		wreg, status,2, status,0, btemp+1
  4092 ;; Tracked objects:
  4093 ;;		On entry : 0/0
  4094 ;;		On exit  : 0/0
  4095 ;;		Unchanged: 0/0
  4096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4097 ;;      Params:         1       0       0       0       0
  4098 ;;      Locals:         2       0       0       0       0
  4099 ;;      Temps:          0       0       0       0       0
  4100 ;;      Totals:         3       0       0       0       0
  4101 ;;Total ram usage:        3 bytes
  4102 ;; Hardware stack levels used: 1
  4103 ;; This function calls:
  4104 ;;		Nothing
  4105 ;; This function is called by:
  4106 ;;		_main
  4107 ;;		_Auto
  4108 ;; This function uses a non-reentrant model
  4109 ;;
  4110                           
  4111     09F3                     ___bmul:	
  4112                           ;psect for function ___bmul
  4113                           
  4114                           
  4115                           ;incstack = 0
  4116                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
  4117                           ;___bmul@multiplier stored from wreg
  4118     09F3  00F2               	movwf	___bmul@multiplier
  4119     09F4                     l2234:
  4120     09F4  01F1               	clrf	___bmul@product
  4121     09F5                     l2236:
  4122     09F5  1C72               	btfss	___bmul@multiplier,0
  4123     09F6  29F8               	goto	u3331
  4124     09F7  29F9               	goto	u3330
  4125     09F8                     u3331:
  4126     09F8  29FD               	goto	l2240
  4127     09F9                     u3330:
  4128     09F9                     l2238:
  4129     09F9  0870               	movf	___bmul@multiplicand,w
  4130     09FA  00FF               	movwf	btemp+1
  4131     09FB  087F               	movf	btemp+1,w
  4132     09FC  07F1               	addwf	___bmul@product,f
  4133     09FD                     l2240:
  4134     09FD  1003               	clrc
  4135     09FE  0DF0               	rlf	___bmul@multiplicand,f
  4136     09FF                     l2242:
  4137     09FF  1003               	clrc
  4138     0A00  0CF2               	rrf	___bmul@multiplier,f
  4139     0A01                     l2244:
  4140     0A01  0872               	movf	___bmul@multiplier,w
  4141     0A02  1D03               	btfss	3,2
  4142     0A03  2A05               	goto	u3341
  4143     0A04  2A06               	goto	u3340
  4144     0A05                     u3341:
  4145     0A05  29F5               	goto	l2236
  4146     0A06                     u3340:
  4147     0A06                     l2246:
  4148     0A06  0871               	movf	___bmul@product,w
  4149     0A07                     l496:
  4150     0A07  0008               	return
  4151     0A08                     __end_of___bmul:
  4152                           
  4153                           	psect	text13
  4154     0A8A                     __ptext13:	
  4155 ;; *************** function _Write_IC *****************
  4156 ;; Defined at:
  4157 ;;		line 9 in file "TTL_Logic.c"
  4158 ;; Parameters:    Size  Location     Type
  4159 ;;		None
  4160 ;; Auto vars:     Size  Location     Type
  4161 ;;		None
  4162 ;; Return value:  Size  Location     Type
  4163 ;;                  1    wreg      void 
  4164 ;; Registers used:
  4165 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4166 ;; Tracked objects:
  4167 ;;		On entry : 0/0
  4168 ;;		On exit  : 0/0
  4169 ;;		Unchanged: 0/0
  4170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4171 ;;      Params:         0       0       0       0       0
  4172 ;;      Locals:         0       0       0       0       0
  4173 ;;      Temps:          0       0       0       0       0
  4174 ;;      Totals:         0       0       0       0       0
  4175 ;;Total ram usage:        0 bytes
  4176 ;; Hardware stack levels used: 1
  4177 ;; Hardware stack levels required when called: 3
  4178 ;; This function calls:
  4179 ;;		_LCD_Clear
  4180 ;;		_LCD_Set_Cursor
  4181 ;;		_LCD_Write_String
  4182 ;; This function is called by:
  4183 ;;		_main
  4184 ;;		_Auto
  4185 ;; This function uses a non-reentrant model
  4186 ;;
  4187                           
  4188     0A8A                     _Write_IC:	
  4189                           ;psect for function _Write_IC
  4190                           
  4191     0A8A                     l1960:	
  4192                           ;incstack = 0
  4193                           ; Regs used in _Write_IC: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4194                           
  4195                           
  4196                           ;TTL_Logic.c: 11:     LCD_Clear();
  4197     0A8A  120A  158A  21C3  120A  158A  	fcall	_LCD_Clear
  4198                           
  4199                           ;TTL_Logic.c: 12:     LCD_Set_Cursor(1,1);
  4200     0A8F  01F4               	clrf	LCD_Set_Cursor@c
  4201     0A90  0AF4               	incf	LCD_Set_Cursor@c,f
  4202     0A91  3001               	movlw	1
  4203     0A92  120A  158A  2375  120A  158A  	fcall	_LCD_Set_Cursor
  4204     0A97                     l1962:
  4205                           
  4206                           ;TTL_Logic.c: 13:     LCD_Write_String("IC  ");
  4207     0A97  3092               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  4208     0A98  00F6               	movwf	LCD_Write_String@str
  4209     0A99  3080               	movlw	128
  4210     0A9A  00F7               	movwf	LCD_Write_String@str+1
  4211     0A9B  120A  158A  22EF  120A  158A  	fcall	_LCD_Write_String
  4212     0AA0                     l1964:
  4213                           
  4214                           ;TTL_Logic.c: 14:     if(n>5){LCD_Write_String("74");}
  4215     0AA0  3000               	movlw	0
  4216     0AA1  1283               	bcf	3,5	;RP0=0, select bank0
  4217     0AA2  1303               	bcf	3,6	;RP1=0, select bank0
  4218     0AA3  026A               	subwf	_n+1,w
  4219     0AA4  3006               	movlw	6
  4220     0AA5  1903               	skipnz
  4221     0AA6  0269               	subwf	_n,w
  4222     0AA7  1C03               	skipc
  4223     0AA8  2AAA               	goto	u2361
  4224     0AA9  2AAB               	goto	u2360
  4225     0AAA                     u2361:
  4226     0AAA  2AB4               	goto	l275
  4227     0AAB                     u2360:
  4228     0AAB                     l1966:
  4229     0AAB  3097               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  4230     0AAC  00F6               	movwf	LCD_Write_String@str
  4231     0AAD  3080               	movlw	128
  4232     0AAE  00F7               	movwf	LCD_Write_String@str+1
  4233     0AAF  120A  158A  22EF  120A  158A  	fcall	_LCD_Write_String
  4234     0AB4                     l275:
  4235     0AB4  0008               	return
  4236     0AB5                     __end_of_Write_IC:
  4237                           
  4238                           	psect	text14
  4239     0AEF                     __ptext14:	
  4240 ;; *************** function _LCD_Write_String *****************
  4241 ;; Defined at:
  4242 ;;		line 101 in file "lcd.c"
  4243 ;; Parameters:    Size  Location     Type
  4244 ;;  str             2    6[COMMON] PTR const unsigned char 
  4245 ;;		 -> STR_10(10), STR_9(11), STR_8(10), STR_7(11), 
  4246 ;;		 -> print@charNum(3), STR_5(15), STR_4(3), STR_3(5), 
  4247 ;;		 -> STR_2(11), name(55), STR_1(10), 
  4248 ;; Auto vars:     Size  Location     Type
  4249 ;;  i               2   11[COMMON] int 
  4250 ;; Return value:  Size  Location     Type
  4251 ;;                  1    wreg      void 
  4252 ;; Registers used:
  4253 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4254 ;; Tracked objects:
  4255 ;;		On entry : 0/0
  4256 ;;		On exit  : 0/0
  4257 ;;		Unchanged: 0/0
  4258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4259 ;;      Params:         2       0       0       0       0
  4260 ;;      Locals:         2       0       0       0       0
  4261 ;;      Temps:          3       0       0       0       0
  4262 ;;      Totals:         7       0       0       0       0
  4263 ;;Total ram usage:        7 bytes
  4264 ;; Hardware stack levels used: 1
  4265 ;; Hardware stack levels required when called: 2
  4266 ;; This function calls:
  4267 ;;		_LCD_Write_Char
  4268 ;; This function is called by:
  4269 ;;		_main
  4270 ;;		_Write_IC
  4271 ;;		_Auto
  4272 ;;		_print
  4273 ;;		_TRI_NAN
  4274 ;; This function uses a non-reentrant model
  4275 ;;
  4276                           
  4277     0AEF                     _LCD_Write_String:	
  4278                           ;psect for function _LCD_Write_String
  4279                           
  4280     0AEF                     l1826:	
  4281                           ;incstack = 0
  4282                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4283                           
  4284                           
  4285                           ;lcd.c: 101: void LCD_Write_String(const char *str);lcd.c: 102: {;lcd.c: 103:   int i;;l
      +                          cd.c: 104:   for(i=0;str[i]!='\0';i++)
  4286     0AEF  01FB               	clrf	LCD_Write_String@i
  4287     0AF0  01FC               	clrf	LCD_Write_String@i+1
  4288     0AF1  2B14               	goto	l1832
  4289     0AF2                     l1828:
  4290                           
  4291                           ;lcd.c: 105:     LCD_Write_Char(str[i]);
  4292     0AF2  087B               	movf	LCD_Write_String@i,w
  4293     0AF3  0776               	addwf	LCD_Write_String@str,w
  4294     0AF4  00F9               	movwf	??_LCD_Write_String+1
  4295     0AF5  0877               	movf	LCD_Write_String@str+1,w
  4296     0AF6  00F8               	movwf	??_LCD_Write_String
  4297     0AF7  1803               	skipnc
  4298     0AF8  0AF8               	incf	??_LCD_Write_String,f
  4299     0AF9  1FFB               	btfss	LCD_Write_String@i,7
  4300     0AFA  2AFC               	goto	u1960
  4301     0AFB  03F8               	decf	??_LCD_Write_String,f
  4302     0AFC                     u1960:
  4303     0AFC  0878               	movf	??_LCD_Write_String,w
  4304     0AFD  00FA               	movwf	??_LCD_Write_String+2
  4305     0AFE  087A               	movf	??_LCD_Write_String+2,w
  4306     0AFF  1283               	bcf	3,5	;RP0=0, select bank0
  4307     0B00  1303               	bcf	3,6	;RP1=0, select bank0
  4308     0B01  00FF               	movwf	btemp+1
  4309     0B02  0879               	movf	??_LCD_Write_String+1,w
  4310     0B03  0084               	movwf	4
  4311     0B04  120A  158A  2000  120A  158A  	fcall	stringtab
  4312     0B09  120A  158A  23BA  120A  158A  	fcall	_LCD_Write_Char
  4313     0B0E                     l1830:
  4314     0B0E  3001               	movlw	1
  4315     0B0F  07FB               	addwf	LCD_Write_String@i,f
  4316     0B10  1803               	skipnc
  4317     0B11  0AFC               	incf	LCD_Write_String@i+1,f
  4318     0B12  3000               	movlw	0
  4319     0B13  07FC               	addwf	LCD_Write_String@i+1,f
  4320     0B14                     l1832:
  4321     0B14  087B               	movf	LCD_Write_String@i,w
  4322     0B15  0776               	addwf	LCD_Write_String@str,w
  4323     0B16  00F9               	movwf	??_LCD_Write_String+1
  4324     0B17  0877               	movf	LCD_Write_String@str+1,w
  4325     0B18  00F8               	movwf	??_LCD_Write_String
  4326     0B19  1803               	skipnc
  4327     0B1A  0AF8               	incf	??_LCD_Write_String,f
  4328     0B1B  1FFB               	btfss	LCD_Write_String@i,7
  4329     0B1C  2B1E               	goto	u1970
  4330     0B1D  03F8               	decf	??_LCD_Write_String,f
  4331     0B1E                     u1970:
  4332     0B1E  0878               	movf	??_LCD_Write_String,w
  4333     0B1F  00FA               	movwf	??_LCD_Write_String+2
  4334     0B20  087A               	movf	??_LCD_Write_String+2,w
  4335     0B21  1283               	bcf	3,5	;RP0=0, select bank0
  4336     0B22  1303               	bcf	3,6	;RP1=0, select bank0
  4337     0B23  00FF               	movwf	btemp+1
  4338     0B24  0879               	movf	??_LCD_Write_String+1,w
  4339     0B25  0084               	movwf	4
  4340     0B26  120A  158A  2000  120A  158A  	fcall	stringtab
  4341     0B2B  3A00               	xorlw	0
  4342     0B2C  1D03               	skipz
  4343     0B2D  2B2F               	goto	u1981
  4344     0B2E  2B30               	goto	u1980
  4345     0B2F                     u1981:
  4346     0B2F  2AF2               	goto	l1828
  4347     0B30                     u1980:
  4348     0B30                     l54:
  4349     0B30  0008               	return
  4350     0B31                     __end_of_LCD_Write_String:
  4351                           
  4352                           	psect	text15
  4353     0BBA                     __ptext15:	
  4354 ;; *************** function _LCD_Write_Char *****************
  4355 ;; Defined at:
  4356 ;;		line 84 in file "lcd.c"
  4357 ;; Parameters:    Size  Location     Type
  4358 ;;  Data            1    wreg     unsigned char 
  4359 ;; Auto vars:     Size  Location     Type
  4360 ;;  Data            1    5[COMMON] unsigned char 
  4361 ;;  High4           1    4[COMMON] unsigned char 
  4362 ;;  Low4            1    3[COMMON] unsigned char 
  4363 ;; Return value:  Size  Location     Type
  4364 ;;                  1    wreg      void 
  4365 ;; Registers used:
  4366 ;;		wreg, status,2, status,0, pclath, cstack
  4367 ;; Tracked objects:
  4368 ;;		On entry : 0/0
  4369 ;;		On exit  : 0/0
  4370 ;;		Unchanged: 0/0
  4371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4372 ;;      Params:         0       0       0       0       0
  4373 ;;      Locals:         3       0       0       0       0
  4374 ;;      Temps:          2       0       0       0       0
  4375 ;;      Totals:         5       0       0       0       0
  4376 ;;Total ram usage:        5 bytes
  4377 ;; Hardware stack levels used: 1
  4378 ;; Hardware stack levels required when called: 1
  4379 ;; This function calls:
  4380 ;;		_LCD_DATA
  4381 ;; This function is called by:
  4382 ;;		_LCD_Write_String
  4383 ;;		_Auto
  4384 ;; This function uses a non-reentrant model
  4385 ;;
  4386                           
  4387     0BBA                     _LCD_Write_Char:	
  4388                           ;psect for function _LCD_Write_Char
  4389                           
  4390                           
  4391                           ;incstack = 0
  4392                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  4393                           ;LCD_Write_Char@Data stored from wreg
  4394     0BBA  00F5               	movwf	LCD_Write_Char@Data
  4395     0BBB                     l1732:
  4396                           
  4397                           ;lcd.c: 84: void LCD_Write_Char(char Data);lcd.c: 85: {;lcd.c: 86:   char Low4,High4;;lc
      +                          d.c: 87:   Low4 = Data & 0x0F;
  4398     0BBB  0875               	movf	LCD_Write_Char@Data,w
  4399     0BBC  390F               	andlw	15
  4400     0BBD  00F3               	movwf	LCD_Write_Char@Low4
  4401                           
  4402                           ;lcd.c: 88:   High4 = Data & 0xF0;
  4403     0BBE  0875               	movf	LCD_Write_Char@Data,w
  4404     0BBF  39F0               	andlw	240
  4405     0BC0  00F4               	movwf	LCD_Write_Char@High4
  4406     0BC1                     l1734:
  4407                           
  4408                           ;lcd.c: 89:   RC6 = 1;
  4409     0BC1  1283               	bcf	3,5	;RP0=0, select bank0
  4410     0BC2  1303               	bcf	3,6	;RP1=0, select bank0
  4411     0BC3  1707               	bsf	7,6	;volatile
  4412     0BC4                     l1736:
  4413                           
  4414                           ;lcd.c: 90:   LCD_DATA(High4>>4);
  4415     0BC4  0874               	movf	LCD_Write_Char@High4,w
  4416     0BC5  00F1               	movwf	??_LCD_Write_Char
  4417     0BC6  3004               	movlw	4
  4418     0BC7                     u1785:
  4419     0BC7  1003               	clrc
  4420     0BC8  0CF1               	rrf	??_LCD_Write_Char,f
  4421     0BC9  3EFF               	addlw	-1
  4422     0BCA  1D03               	skipz
  4423     0BCB  2BC7               	goto	u1785
  4424     0BCC  0871               	movf	??_LCD_Write_Char,w
  4425     0BCD  120A  158A  2243  120A  158A  	fcall	_LCD_DATA
  4426     0BD2                     l1738:
  4427                           
  4428                           ;lcd.c: 91:   RC7 = 1;
  4429     0BD2  1283               	bcf	3,5	;RP0=0, select bank0
  4430     0BD3  1303               	bcf	3,6	;RP1=0, select bank0
  4431     0BD4  1787               	bsf	7,7	;volatile
  4432     0BD5                     l1740:
  4433                           
  4434                           ;lcd.c: 92:   _delay((unsigned long)((500)*(16000000/4000000.0)));
  4435     0BD5  3003               	movlw	3
  4436     0BD6  00F2               	movwf	??_LCD_Write_Char+1
  4437     0BD7  3097               	movlw	151
  4438     0BD8  00F1               	movwf	??_LCD_Write_Char
  4439     0BD9                     u3597:
  4440     0BD9  0BF1               	decfsz	??_LCD_Write_Char,f
  4441     0BDA  2BD9               	goto	u3597
  4442     0BDB  0BF2               	decfsz	??_LCD_Write_Char+1,f
  4443     0BDC  2BD9               	goto	u3597
  4444     0BDD  2BDE               	nop2
  4445     0BDE                     l1742:
  4446                           
  4447                           ;lcd.c: 93:   RC7 = 0;
  4448     0BDE  1283               	bcf	3,5	;RP0=0, select bank0
  4449     0BDF  1303               	bcf	3,6	;RP1=0, select bank0
  4450     0BE0  1387               	bcf	7,7	;volatile
  4451     0BE1                     l1744:
  4452                           
  4453                           ;lcd.c: 94:   _delay((unsigned long)((500)*(16000000/4000000.0)));
  4454     0BE1  3003               	movlw	3
  4455     0BE2  00F2               	movwf	??_LCD_Write_Char+1
  4456     0BE3  3097               	movlw	151
  4457     0BE4  00F1               	movwf	??_LCD_Write_Char
  4458     0BE5                     u3607:
  4459     0BE5  0BF1               	decfsz	??_LCD_Write_Char,f
  4460     0BE6  2BE5               	goto	u3607
  4461     0BE7  0BF2               	decfsz	??_LCD_Write_Char+1,f
  4462     0BE8  2BE5               	goto	u3607
  4463     0BE9  2BEA               	nop2
  4464     0BEA                     l1746:
  4465                           
  4466                           ;lcd.c: 95:   LCD_DATA(Low4);
  4467     0BEA  0873               	movf	LCD_Write_Char@Low4,w
  4468     0BEB  120A  158A  2243  120A  158A  	fcall	_LCD_DATA
  4469     0BF0                     l1748:
  4470                           
  4471                           ;lcd.c: 96:   RC7 = 1;
  4472     0BF0  1283               	bcf	3,5	;RP0=0, select bank0
  4473     0BF1  1303               	bcf	3,6	;RP1=0, select bank0
  4474     0BF2  1787               	bsf	7,7	;volatile
  4475     0BF3                     l1750:
  4476                           
  4477                           ;lcd.c: 97:   _delay((unsigned long)((500)*(16000000/4000000.0)));
  4478     0BF3  3003               	movlw	3
  4479     0BF4  00F2               	movwf	??_LCD_Write_Char+1
  4480     0BF5  3097               	movlw	151
  4481     0BF6  00F1               	movwf	??_LCD_Write_Char
  4482     0BF7                     u3617:
  4483     0BF7  0BF1               	decfsz	??_LCD_Write_Char,f
  4484     0BF8  2BF7               	goto	u3617
  4485     0BF9  0BF2               	decfsz	??_LCD_Write_Char+1,f
  4486     0BFA  2BF7               	goto	u3617
  4487     0BFB  2BFC               	nop2
  4488     0BFC                     l1752:
  4489                           
  4490                           ;lcd.c: 98:   RC7 = 0;
  4491     0BFC  1283               	bcf	3,5	;RP0=0, select bank0
  4492     0BFD  1303               	bcf	3,6	;RP1=0, select bank0
  4493     0BFE  1387               	bcf	7,7	;volatile
  4494     0BFF                     l1754:
  4495                           
  4496                           ;lcd.c: 99:   _delay((unsigned long)((500)*(16000000/4000000.0)));
  4497     0BFF  3003               	movlw	3
  4498     0C00  00F2               	movwf	??_LCD_Write_Char+1
  4499     0C01  3097               	movlw	151
  4500     0C02  00F1               	movwf	??_LCD_Write_Char
  4501     0C03                     u3627:
  4502     0C03  0BF1               	decfsz	??_LCD_Write_Char,f
  4503     0C04  2C03               	goto	u3627
  4504     0C05  0BF2               	decfsz	??_LCD_Write_Char+1,f
  4505     0C06  2C03               	goto	u3627
  4506     0C07  2C08               	nop2
  4507     0C08                     l48:
  4508     0C08  0008               	return
  4509     0C09                     __end_of_LCD_Write_Char:
  4510                           
  4511                           	psect	text16
  4512     0B75                     __ptext16:	
  4513 ;; *************** function _LCD_Set_Cursor *****************
  4514 ;; Defined at:
  4515 ;;		line 41 in file "lcd.c"
  4516 ;; Parameters:    Size  Location     Type
  4517 ;;  r               1    wreg     unsigned char 
  4518 ;;  c               1    4[COMMON] unsigned char 
  4519 ;; Auto vars:     Size  Location     Type
  4520 ;;  r               1    6[COMMON] unsigned char 
  4521 ;;  Temp            1    9[COMMON] unsigned char 
  4522 ;;  High4           1    8[COMMON] unsigned char 
  4523 ;;  Low4            1    7[COMMON] unsigned char 
  4524 ;; Return value:  Size  Location     Type
  4525 ;;                  1    wreg      void 
  4526 ;; Registers used:
  4527 ;;		wreg, status,2, status,0, pclath, cstack
  4528 ;; Tracked objects:
  4529 ;;		On entry : 0/0
  4530 ;;		On exit  : 0/0
  4531 ;;		Unchanged: 0/0
  4532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4533 ;;      Params:         1       0       0       0       0
  4534 ;;      Locals:         4       0       0       0       0
  4535 ;;      Temps:          1       0       0       0       0
  4536 ;;      Totals:         6       0       0       0       0
  4537 ;;Total ram usage:        6 bytes
  4538 ;; Hardware stack levels used: 1
  4539 ;; Hardware stack levels required when called: 2
  4540 ;; This function calls:
  4541 ;;		_LCD_CMD
  4542 ;; This function is called by:
  4543 ;;		_main
  4544 ;;		_Write_IC
  4545 ;;		_Auto
  4546 ;;		_print
  4547 ;;		_TRI_NAN
  4548 ;; This function uses a non-reentrant model
  4549 ;;
  4550                           
  4551     0B75                     _LCD_Set_Cursor:	
  4552                           ;psect for function _LCD_Set_Cursor
  4553                           
  4554                           
  4555                           ;incstack = 0
  4556                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  4557                           ;LCD_Set_Cursor@r stored from wreg
  4558     0B75  00F6               	movwf	LCD_Set_Cursor@r
  4559     0B76                     l1806:
  4560                           
  4561                           ;lcd.c: 41: void LCD_Set_Cursor(unsigned char r, unsigned char c);lcd.c: 42: {;lcd.c: 43
      +                          :   unsigned char Temp,Low4,High4;;lcd.c: 44:   if(r == 1)
  4562     0B76  0376               	decf	LCD_Set_Cursor@r,w
  4563     0B77  1D03               	btfss	3,2
  4564     0B78  2B7A               	goto	u1921
  4565     0B79  2B7B               	goto	u1920
  4566     0B7A                     u1921:
  4567     0B7A  2B97               	goto	l1816
  4568     0B7B                     u1920:
  4569     0B7B                     l1808:
  4570                           
  4571                           ;lcd.c: 45:   {;lcd.c: 46:     Temp = 0x80 + c - 1;
  4572     0B7B  0874               	movf	LCD_Set_Cursor@c,w
  4573     0B7C  3E7F               	addlw	127
  4574     0B7D  00F9               	movwf	LCD_Set_Cursor@Temp
  4575                           
  4576                           ;lcd.c: 47:     High4 = Temp >> 4;
  4577     0B7E  0879               	movf	LCD_Set_Cursor@Temp,w
  4578     0B7F  00F5               	movwf	??_LCD_Set_Cursor
  4579     0B80  3004               	movlw	4
  4580     0B81                     u1935:
  4581     0B81  1003               	clrc
  4582     0B82  0CF5               	rrf	??_LCD_Set_Cursor,f
  4583     0B83  3EFF               	addlw	-1
  4584     0B84  1D03               	skipz
  4585     0B85  2B81               	goto	u1935
  4586     0B86  0875               	movf	??_LCD_Set_Cursor,w
  4587     0B87  00F8               	movwf	LCD_Set_Cursor@High4
  4588     0B88                     l1810:
  4589                           
  4590                           ;lcd.c: 48:     Low4 = Temp & 0x0F;
  4591     0B88  0879               	movf	LCD_Set_Cursor@Temp,w
  4592     0B89  390F               	andlw	15
  4593     0B8A  00F7               	movwf	LCD_Set_Cursor@Low4
  4594     0B8B                     l1812:
  4595                           
  4596                           ;lcd.c: 49:     LCD_CMD(High4);
  4597     0B8B  0878               	movf	LCD_Set_Cursor@High4,w
  4598     0B8C  120A  158A  2208  120A  158A  	fcall	_LCD_CMD
  4599     0B91                     l1814:
  4600                           
  4601                           ;lcd.c: 50:     LCD_CMD(Low4);
  4602     0B91  0877               	movf	LCD_Set_Cursor@Low4,w
  4603     0B92  120A  158A  2208  120A  158A  	fcall	_LCD_CMD
  4604     0B97                     l1816:
  4605                           
  4606                           ;lcd.c: 52:   if(r == 2)
  4607     0B97  3002               	movlw	2
  4608     0B98  0676               	xorwf	LCD_Set_Cursor@r,w
  4609     0B99  1D03               	btfss	3,2
  4610     0B9A  2B9C               	goto	u1941
  4611     0B9B  2B9D               	goto	u1940
  4612     0B9C                     u1941:
  4613     0B9C  2BB9               	goto	l42
  4614     0B9D                     u1940:
  4615     0B9D                     l1818:
  4616                           
  4617                           ;lcd.c: 53:   {;lcd.c: 54:     Temp = 0xC0 + c - 1;
  4618     0B9D  0874               	movf	LCD_Set_Cursor@c,w
  4619     0B9E  3EBF               	addlw	191
  4620     0B9F  00F9               	movwf	LCD_Set_Cursor@Temp
  4621                           
  4622                           ;lcd.c: 55:     High4 = Temp >> 4;
  4623     0BA0  0879               	movf	LCD_Set_Cursor@Temp,w
  4624     0BA1  00F5               	movwf	??_LCD_Set_Cursor
  4625     0BA2  3004               	movlw	4
  4626     0BA3                     u1955:
  4627     0BA3  1003               	clrc
  4628     0BA4  0CF5               	rrf	??_LCD_Set_Cursor,f
  4629     0BA5  3EFF               	addlw	-1
  4630     0BA6  1D03               	skipz
  4631     0BA7  2BA3               	goto	u1955
  4632     0BA8  0875               	movf	??_LCD_Set_Cursor,w
  4633     0BA9  00F8               	movwf	LCD_Set_Cursor@High4
  4634     0BAA                     l1820:
  4635                           
  4636                           ;lcd.c: 56:     Low4 = Temp & 0x0F;
  4637     0BAA  0879               	movf	LCD_Set_Cursor@Temp,w
  4638     0BAB  390F               	andlw	15
  4639     0BAC  00F7               	movwf	LCD_Set_Cursor@Low4
  4640     0BAD                     l1822:
  4641                           
  4642                           ;lcd.c: 57:     LCD_CMD(High4);
  4643     0BAD  0878               	movf	LCD_Set_Cursor@High4,w
  4644     0BAE  120A  158A  2208  120A  158A  	fcall	_LCD_CMD
  4645     0BB3                     l1824:
  4646                           
  4647                           ;lcd.c: 58:     LCD_CMD(Low4);
  4648     0BB3  0877               	movf	LCD_Set_Cursor@Low4,w
  4649     0BB4  120A  158A  2208  120A  158A  	fcall	_LCD_CMD
  4650     0BB9                     l42:
  4651     0BB9  0008               	return
  4652     0BBA                     __end_of_LCD_Set_Cursor:
  4653                           
  4654                           	psect	text17
  4655     09C3                     __ptext17:	
  4656 ;; *************** function _LCD_Clear *****************
  4657 ;; Defined at:
  4658 ;;		line 36 in file "lcd.c"
  4659 ;; Parameters:    Size  Location     Type
  4660 ;;		None
  4661 ;; Auto vars:     Size  Location     Type
  4662 ;;		None
  4663 ;; Return value:  Size  Location     Type
  4664 ;;                  1    wreg      void 
  4665 ;; Registers used:
  4666 ;;		wreg, status,2, status,0, pclath, cstack
  4667 ;; Tracked objects:
  4668 ;;		On entry : 0/0
  4669 ;;		On exit  : 0/0
  4670 ;;		Unchanged: 0/0
  4671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4672 ;;      Params:         0       0       0       0       0
  4673 ;;      Locals:         0       0       0       0       0
  4674 ;;      Temps:          0       0       0       0       0
  4675 ;;      Totals:         0       0       0       0       0
  4676 ;;Total ram usage:        0 bytes
  4677 ;; Hardware stack levels used: 1
  4678 ;; Hardware stack levels required when called: 2
  4679 ;; This function calls:
  4680 ;;		_LCD_CMD
  4681 ;; This function is called by:
  4682 ;;		_main
  4683 ;;		_Write_IC
  4684 ;; This function uses a non-reentrant model
  4685 ;;
  4686                           
  4687     09C3                     _LCD_Clear:	
  4688                           ;psect for function _LCD_Clear
  4689                           
  4690     09C3                     l1804:	
  4691                           ;incstack = 0
  4692                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  4693                           
  4694                           
  4695                           ;lcd.c: 38:   LCD_CMD(0);
  4696     09C3  3000               	movlw	0
  4697     09C4  120A  158A  2208  120A  158A  	fcall	_LCD_CMD
  4698                           
  4699                           ;lcd.c: 39:   LCD_CMD(1);
  4700     09C9  3001               	movlw	1
  4701     09CA  120A  158A  2208  120A  158A  	fcall	_LCD_CMD
  4702     09CF                     l37:
  4703     09CF  0008               	return
  4704     09D0                     __end_of_LCD_Clear:
  4705                           
  4706                           	psect	text18
  4707     0A08                     __ptext18:	
  4708 ;; *************** function _LCD_CMD *****************
  4709 ;; Defined at:
  4710 ;;		line 25 in file "lcd.c"
  4711 ;; Parameters:    Size  Location     Type
  4712 ;;  CMD             1    wreg     unsigned char 
  4713 ;; Auto vars:     Size  Location     Type
  4714 ;;  CMD             1    3[COMMON] unsigned char 
  4715 ;; Return value:  Size  Location     Type
  4716 ;;                  1    wreg      void 
  4717 ;; Registers used:
  4718 ;;		wreg, status,2, status,0, pclath, cstack
  4719 ;; Tracked objects:
  4720 ;;		On entry : 0/0
  4721 ;;		On exit  : 0/0
  4722 ;;		Unchanged: 0/0
  4723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4724 ;;      Params:         0       0       0       0       0
  4725 ;;      Locals:         1       0       0       0       0
  4726 ;;      Temps:          2       0       0       0       0
  4727 ;;      Totals:         3       0       0       0       0
  4728 ;;Total ram usage:        3 bytes
  4729 ;; Hardware stack levels used: 1
  4730 ;; Hardware stack levels required when called: 1
  4731 ;; This function calls:
  4732 ;;		_LCD_DATA
  4733 ;; This function is called by:
  4734 ;;		_LCD_Clear
  4735 ;;		_LCD_Set_Cursor
  4736 ;;		_LCD_Init
  4737 ;;		_LCD_SL
  4738 ;;		_LCD_SR
  4739 ;; This function uses a non-reentrant model
  4740 ;;
  4741                           
  4742     0A08                     _LCD_CMD:	
  4743                           ;psect for function _LCD_CMD
  4744                           
  4745                           
  4746                           ;incstack = 0
  4747                           ; Regs used in _LCD_CMD: [wreg+status,2+status,0+pclath+cstack]
  4748                           ;LCD_CMD@CMD stored from wreg
  4749     0A08  00F3               	movwf	LCD_CMD@CMD
  4750     0A09                     l1722:
  4751                           
  4752                           ;lcd.c: 25: void LCD_CMD(unsigned char CMD);lcd.c: 26: {;lcd.c: 28:   RC6 = 0;
  4753     0A09  1283               	bcf	3,5	;RP0=0, select bank0
  4754     0A0A  1303               	bcf	3,6	;RP1=0, select bank0
  4755     0A0B  1307               	bcf	7,6	;volatile
  4756     0A0C                     l1724:
  4757                           
  4758                           ;lcd.c: 30:   LCD_DATA(CMD);
  4759     0A0C  0873               	movf	LCD_CMD@CMD,w
  4760     0A0D  120A  158A  2243  120A  158A  	fcall	_LCD_DATA
  4761     0A12                     l1726:
  4762                           
  4763                           ;lcd.c: 32:   RC7 = 1;
  4764     0A12  1283               	bcf	3,5	;RP0=0, select bank0
  4765     0A13  1303               	bcf	3,6	;RP1=0, select bank0
  4766     0A14  1787               	bsf	7,7	;volatile
  4767     0A15                     l1728:
  4768                           
  4769                           ;lcd.c: 33:   _delay((unsigned long)((500)*(16000000/4000000.0)));
  4770     0A15  3003               	movlw	3
  4771     0A16  00F2               	movwf	??_LCD_CMD+1
  4772     0A17  3097               	movlw	151
  4773     0A18  00F1               	movwf	??_LCD_CMD
  4774     0A19                     u3637:
  4775     0A19  0BF1               	decfsz	??_LCD_CMD,f
  4776     0A1A  2A19               	goto	u3637
  4777     0A1B  0BF2               	decfsz	??_LCD_CMD+1,f
  4778     0A1C  2A19               	goto	u3637
  4779     0A1D  2A1E               	nop2
  4780     0A1E                     l1730:
  4781                           
  4782                           ;lcd.c: 34:   RC7 = 0;
  4783     0A1E  1283               	bcf	3,5	;RP0=0, select bank0
  4784     0A1F  1303               	bcf	3,6	;RP1=0, select bank0
  4785     0A20  1387               	bcf	7,7	;volatile
  4786     0A21                     l34:
  4787     0A21  0008               	return
  4788     0A22                     __end_of_LCD_CMD:
  4789                           
  4790                           	psect	text19
  4791     0A43                     __ptext19:	
  4792 ;; *************** function _LCD_DATA *****************
  4793 ;; Defined at:
  4794 ;;		line 6 in file "lcd.c"
  4795 ;; Parameters:    Size  Location     Type
  4796 ;;  Data            1    wreg     unsigned char 
  4797 ;; Auto vars:     Size  Location     Type
  4798 ;;  Data            1    0[COMMON] unsigned char 
  4799 ;; Return value:  Size  Location     Type
  4800 ;;                  1    wreg      void 
  4801 ;; Registers used:
  4802 ;;		wreg
  4803 ;; Tracked objects:
  4804 ;;		On entry : 0/0
  4805 ;;		On exit  : 0/0
  4806 ;;		Unchanged: 0/0
  4807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4808 ;;      Params:         0       0       0       0       0
  4809 ;;      Locals:         1       0       0       0       0
  4810 ;;      Temps:          0       0       0       0       0
  4811 ;;      Totals:         1       0       0       0       0
  4812 ;;Total ram usage:        1 bytes
  4813 ;; Hardware stack levels used: 1
  4814 ;; This function calls:
  4815 ;;		Nothing
  4816 ;; This function is called by:
  4817 ;;		_LCD_CMD
  4818 ;;		_LCD_Init
  4819 ;;		_LCD_Write_Char
  4820 ;; This function uses a non-reentrant model
  4821 ;;
  4822                           
  4823     0A43                     _LCD_DATA:	
  4824                           ;psect for function _LCD_DATA
  4825                           
  4826                           
  4827                           ;incstack = 0
  4828                           ; Regs used in _LCD_DATA: [wreg]
  4829                           ;LCD_DATA@Data stored from wreg
  4830     0A43  00F0               	movwf	LCD_DATA@Data
  4831     0A44                     l1712:
  4832                           
  4833                           ;lcd.c: 6: void LCD_DATA(unsigned char Data);lcd.c: 7: {;lcd.c: 8:   if(Data & 1)
  4834     0A44  1C70               	btfss	LCD_DATA@Data,0
  4835     0A45  2A47               	goto	u1741
  4836     0A46  2A48               	goto	u1740
  4837     0A47                     u1741:
  4838     0A47  2A4C               	goto	l23
  4839     0A48                     u1740:
  4840     0A48                     l1714:
  4841                           
  4842                           ;lcd.c: 9:     RC2 = 1;
  4843     0A48  1283               	bcf	3,5	;RP0=0, select bank0
  4844     0A49  1303               	bcf	3,6	;RP1=0, select bank0
  4845     0A4A  1507               	bsf	7,2	;volatile
  4846     0A4B  2A4F               	goto	l24
  4847     0A4C                     l23:	
  4848                           ;lcd.c: 10:   else
  4849                           
  4850                           
  4851                           ;lcd.c: 11:     RC2 = 0;
  4852     0A4C  1283               	bcf	3,5	;RP0=0, select bank0
  4853     0A4D  1303               	bcf	3,6	;RP1=0, select bank0
  4854     0A4E  1107               	bcf	7,2	;volatile
  4855     0A4F                     l24:
  4856                           
  4857                           ;lcd.c: 12:   if(Data & 2)
  4858     0A4F  1CF0               	btfss	LCD_DATA@Data,1
  4859     0A50  2A52               	goto	u1751
  4860     0A51  2A53               	goto	u1750
  4861     0A52                     u1751:
  4862     0A52  2A55               	goto	l25
  4863     0A53                     u1750:
  4864     0A53                     l1716:
  4865                           
  4866                           ;lcd.c: 13:     RC3 = 1;
  4867     0A53  1587               	bsf	7,3	;volatile
  4868     0A54  2A56               	goto	l26
  4869     0A55                     l25:	
  4870                           ;lcd.c: 14:   else
  4871                           
  4872                           
  4873                           ;lcd.c: 15:     RC3 = 0;
  4874     0A55  1187               	bcf	7,3	;volatile
  4875     0A56                     l26:
  4876                           
  4877                           ;lcd.c: 16:   if(Data & 4)
  4878     0A56  1D70               	btfss	LCD_DATA@Data,2
  4879     0A57  2A59               	goto	u1761
  4880     0A58  2A5A               	goto	u1760
  4881     0A59                     u1761:
  4882     0A59  2A5C               	goto	l27
  4883     0A5A                     u1760:
  4884     0A5A                     l1718:
  4885                           
  4886                           ;lcd.c: 17:     RC4 = 1;
  4887     0A5A  1607               	bsf	7,4	;volatile
  4888     0A5B  2A5D               	goto	l28
  4889     0A5C                     l27:	
  4890                           ;lcd.c: 18:   else
  4891                           
  4892                           
  4893                           ;lcd.c: 19:     RC4 = 0;
  4894     0A5C  1207               	bcf	7,4	;volatile
  4895     0A5D                     l28:
  4896                           
  4897                           ;lcd.c: 20:   if(Data & 8)
  4898     0A5D  1DF0               	btfss	LCD_DATA@Data,3
  4899     0A5E  2A60               	goto	u1771
  4900     0A5F  2A61               	goto	u1770
  4901     0A60                     u1771:
  4902     0A60  2A63               	goto	l29
  4903     0A61                     u1770:
  4904     0A61                     l1720:
  4905                           
  4906                           ;lcd.c: 21:     RC5 = 1;
  4907     0A61  1687               	bsf	7,5	;volatile
  4908     0A62  2A64               	goto	l31
  4909     0A63                     l29:	
  4910                           ;lcd.c: 22:   else
  4911                           
  4912                           
  4913                           ;lcd.c: 23:     RC5 = 0;
  4914     0A63  1287               	bcf	7,5	;volatile
  4915     0A64                     l31:
  4916     0A64  0008               	return
  4917     0A65                     __end_of_LCD_DATA:
  4918                           
  4919                           	psect	text20
  4920     0196                     __ptext20:	
  4921 ;; *************** function _Mode_6 *****************
  4922 ;; Defined at:
  4923 ;;		line 138 in file "TTL_Logic.c"
  4924 ;; Parameters:    Size  Location     Type
  4925 ;;		None
  4926 ;; Auto vars:     Size  Location     Type
  4927 ;;		None
  4928 ;; Return value:  Size  Location     Type
  4929 ;;                  1    wreg      void 
  4930 ;; Registers used:
  4931 ;;		wreg, status,2, status,0, pclath, cstack
  4932 ;; Tracked objects:
  4933 ;;		On entry : 0/0
  4934 ;;		On exit  : 0/0
  4935 ;;		Unchanged: 0/0
  4936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4937 ;;      Params:         0       0       0       0       0
  4938 ;;      Locals:         0       0       0       0       0
  4939 ;;      Temps:          3       0       0       0       0
  4940 ;;      Totals:         3       0       0       0       0
  4941 ;;Total ram usage:        3 bytes
  4942 ;; Hardware stack levels used: 1
  4943 ;; Hardware stack levels required when called: 1
  4944 ;; This function calls:
  4945 ;;		___wmul
  4946 ;; This function is called by:
  4947 ;;		_Test
  4948 ;;		_Auto
  4949 ;; This function uses a non-reentrant model
  4950 ;;
  4951                           
  4952     0196                     _Mode_6:	
  4953                           ;psect for function _Mode_6
  4954                           
  4955     0196                     l1968:	
  4956                           ;incstack = 0
  4957                           ; Regs used in _Mode_6: [wreg+status,2+status,0+pclath+cstack]
  4958                           
  4959                           
  4960                           ;TTL_Logic.c: 140:     k=0;
  4961     0196  1283               	bcf	3,5	;RP0=0, select bank0
  4962     0197  1303               	bcf	3,6	;RP1=0, select bank0
  4963     0198  01D5               	clrf	_k
  4964     0199  01D6               	clrf	_k+1
  4965     019A                     l1970:
  4966                           
  4967                           ;TTL_Logic.c: 141:     TRISB0=TRISD6=TRISD4=TRISB5=TRISB3=TRISB1=0;
  4968     019A  1683               	bsf	3,5	;RP0=1, select bank1
  4969     019B  1303               	bcf	3,6	;RP1=0, select bank1
  4970     019C  1086               	bcf	6,1	;volatile
  4971     019D  1186               	bcf	6,3	;volatile
  4972     019E  1286               	bcf	6,5	;volatile
  4973     019F  1208               	bcf	8,4	;volatile
  4974     01A0  1308               	bcf	8,6	;volatile
  4975     01A1  1006               	bcf	6,0	;volatile
  4976     01A2                     l1972:
  4977                           
  4978                           ;TTL_Logic.c: 142:     TRISD7=TRISD5=TRISD3=TRISB6=TRISB2=TRISB4=1;
  4979     01A2  1606               	bsf	6,4	;volatile
  4980     01A3  1A06               	btfsc	6,4	;volatile
  4981     01A4  29A6               	goto	u2371
  4982     01A5  29AA               	goto	u2370
  4983     01A6                     u2371:
  4984     01A6  1683               	bsf	3,5	;RP0=1, select bank1
  4985     01A7  1303               	bcf	3,6	;RP1=0, select bank1
  4986     01A8  1506               	bsf	6,2	;volatile
  4987     01A9  29AD               	goto	u2384
  4988     01AA                     u2370:
  4989     01AA  1683               	bsf	3,5	;RP0=1, select bank1
  4990     01AB  1303               	bcf	3,6	;RP1=0, select bank1
  4991     01AC  1106               	bcf	6,2	;volatile
  4992     01AD                     u2384:
  4993     01AD  1906               	btfsc	6,2	;volatile
  4994     01AE  29B0               	goto	u2381
  4995     01AF  29B4               	goto	u2380
  4996     01B0                     u2381:
  4997     01B0  1683               	bsf	3,5	;RP0=1, select bank1
  4998     01B1  1303               	bcf	3,6	;RP1=0, select bank1
  4999     01B2  1706               	bsf	6,6	;volatile
  5000     01B3  29B7               	goto	u2394
  5001     01B4                     u2380:
  5002     01B4  1683               	bsf	3,5	;RP0=1, select bank1
  5003     01B5  1303               	bcf	3,6	;RP1=0, select bank1
  5004     01B6  1306               	bcf	6,6	;volatile
  5005     01B7                     u2394:
  5006     01B7  1B06               	btfsc	6,6	;volatile
  5007     01B8  29BA               	goto	u2391
  5008     01B9  29BE               	goto	u2390
  5009     01BA                     u2391:
  5010     01BA  1683               	bsf	3,5	;RP0=1, select bank1
  5011     01BB  1303               	bcf	3,6	;RP1=0, select bank1
  5012     01BC  1588               	bsf	8,3	;volatile
  5013     01BD  29C1               	goto	u2404
  5014     01BE                     u2390:
  5015     01BE  1683               	bsf	3,5	;RP0=1, select bank1
  5016     01BF  1303               	bcf	3,6	;RP1=0, select bank1
  5017     01C0  1188               	bcf	8,3	;volatile
  5018     01C1                     u2404:
  5019     01C1  1988               	btfsc	8,3	;volatile
  5020     01C2  29C4               	goto	u2401
  5021     01C3  29C8               	goto	u2400
  5022     01C4                     u2401:
  5023     01C4  1683               	bsf	3,5	;RP0=1, select bank1
  5024     01C5  1303               	bcf	3,6	;RP1=0, select bank1
  5025     01C6  1688               	bsf	8,5	;volatile
  5026     01C7  29CB               	goto	u2414
  5027     01C8                     u2400:
  5028     01C8  1683               	bsf	3,5	;RP0=1, select bank1
  5029     01C9  1303               	bcf	3,6	;RP1=0, select bank1
  5030     01CA  1288               	bcf	8,5	;volatile
  5031     01CB                     u2414:
  5032     01CB  1A88               	btfsc	8,5	;volatile
  5033     01CC  29CE               	goto	u2411
  5034     01CD  29D2               	goto	u2410
  5035     01CE                     u2411:
  5036     01CE  1683               	bsf	3,5	;RP0=1, select bank1
  5037     01CF  1303               	bcf	3,6	;RP1=0, select bank1
  5038     01D0  1788               	bsf	8,7	;volatile
  5039     01D1  29D5               	goto	u2424
  5040     01D2                     u2410:
  5041     01D2  1683               	bsf	3,5	;RP0=1, select bank1
  5042     01D3  1303               	bcf	3,6	;RP1=0, select bank1
  5043     01D4  1388               	bcf	8,7	;volatile
  5044     01D5                     u2424:
  5045     01D5                     l1974:
  5046                           
  5047                           ;TTL_Logic.c: 143:     _delay((unsigned long)((20)*(16000000/4000.0)));
  5048     01D5  3068               	movlw	104
  5049     01D6  00F7               	movwf	??_Mode_6+1
  5050     01D7  30E4               	movlw	228
  5051     01D8  00F6               	movwf	??_Mode_6
  5052     01D9                     u3647:
  5053     01D9  0BF6               	decfsz	??_Mode_6,f
  5054     01DA  29D9               	goto	u3647
  5055     01DB  0BF7               	decfsz	??_Mode_6+1,f
  5056     01DC  29D9               	goto	u3647
  5057     01DD  0000               	nop
  5058     01DE                     l1976:
  5059                           
  5060                           ;TTL_Logic.c: 144:     for(i=0;i<2;i++)
  5061     01DE  1283               	bcf	3,5	;RP0=0, select bank0
  5062     01DF  1303               	bcf	3,6	;RP1=0, select bank0
  5063     01E0  01D9               	clrf	_i
  5064     01E1  01DA               	clrf	_i+1
  5065     01E2  3000               	movlw	0
  5066     01E3  025A               	subwf	_i+1,w
  5067     01E4  3002               	movlw	2
  5068     01E5  1903               	skipnz
  5069     01E6  0259               	subwf	_i,w
  5070     01E7  1C03               	skipc
  5071     01E8  29EA               	goto	u2431
  5072     01E9  29EB               	goto	u2430
  5073     01EA                     u2431:
  5074     01EA  29EC               	goto	l317
  5075     01EB                     u2430:
  5076     01EB  2B32               	goto	l319
  5077     01EC                     l317:
  5078                           
  5079                           ;TTL_Logic.c: 145:     {;TTL_Logic.c: 146:         RB0=RD6=RD4=RB5=RB3=RB1=(__bit)i;
  5080     01EC  1859               	btfsc	_i,0
  5081     01ED  29EF               	goto	u2441
  5082     01EE  29F3               	goto	u2440
  5083     01EF                     u2441:
  5084     01EF  1283               	bcf	3,5	;RP0=0, select bank0
  5085     01F0  1303               	bcf	3,6	;RP1=0, select bank0
  5086     01F1  1486               	bsf	6,1	;volatile
  5087     01F2  29F6               	goto	u2454
  5088     01F3                     u2440:
  5089     01F3  1283               	bcf	3,5	;RP0=0, select bank0
  5090     01F4  1303               	bcf	3,6	;RP1=0, select bank0
  5091     01F5  1086               	bcf	6,1	;volatile
  5092     01F6                     u2454:
  5093     01F6  1886               	btfsc	6,1	;volatile
  5094     01F7  29F9               	goto	u2451
  5095     01F8  29FD               	goto	u2450
  5096     01F9                     u2451:
  5097     01F9  1283               	bcf	3,5	;RP0=0, select bank0
  5098     01FA  1303               	bcf	3,6	;RP1=0, select bank0
  5099     01FB  1586               	bsf	6,3	;volatile
  5100     01FC  2A00               	goto	u2464
  5101     01FD                     u2450:
  5102     01FD  1283               	bcf	3,5	;RP0=0, select bank0
  5103     01FE  1303               	bcf	3,6	;RP1=0, select bank0
  5104     01FF  1186               	bcf	6,3	;volatile
  5105     0200                     u2464:
  5106     0200  1986               	btfsc	6,3	;volatile
  5107     0201  2A03               	goto	u2461
  5108     0202  2A07               	goto	u2460
  5109     0203                     u2461:
  5110     0203  1283               	bcf	3,5	;RP0=0, select bank0
  5111     0204  1303               	bcf	3,6	;RP1=0, select bank0
  5112     0205  1686               	bsf	6,5	;volatile
  5113     0206  2A0A               	goto	u2474
  5114     0207                     u2460:
  5115     0207  1283               	bcf	3,5	;RP0=0, select bank0
  5116     0208  1303               	bcf	3,6	;RP1=0, select bank0
  5117     0209  1286               	bcf	6,5	;volatile
  5118     020A                     u2474:
  5119     020A  1A86               	btfsc	6,5	;volatile
  5120     020B  2A0D               	goto	u2471
  5121     020C  2A11               	goto	u2470
  5122     020D                     u2471:
  5123     020D  1283               	bcf	3,5	;RP0=0, select bank0
  5124     020E  1303               	bcf	3,6	;RP1=0, select bank0
  5125     020F  1608               	bsf	8,4	;volatile
  5126     0210  2A14               	goto	u2484
  5127     0211                     u2470:
  5128     0211  1283               	bcf	3,5	;RP0=0, select bank0
  5129     0212  1303               	bcf	3,6	;RP1=0, select bank0
  5130     0213  1208               	bcf	8,4	;volatile
  5131     0214                     u2484:
  5132     0214  1A08               	btfsc	8,4	;volatile
  5133     0215  2A17               	goto	u2481
  5134     0216  2A1B               	goto	u2480
  5135     0217                     u2481:
  5136     0217  1283               	bcf	3,5	;RP0=0, select bank0
  5137     0218  1303               	bcf	3,6	;RP1=0, select bank0
  5138     0219  1708               	bsf	8,6	;volatile
  5139     021A  2A1E               	goto	u2494
  5140     021B                     u2480:
  5141     021B  1283               	bcf	3,5	;RP0=0, select bank0
  5142     021C  1303               	bcf	3,6	;RP1=0, select bank0
  5143     021D  1308               	bcf	8,6	;volatile
  5144     021E                     u2494:
  5145     021E  1B08               	btfsc	8,6	;volatile
  5146     021F  2A21               	goto	u2491
  5147     0220  2A25               	goto	u2490
  5148     0221                     u2491:
  5149     0221  1283               	bcf	3,5	;RP0=0, select bank0
  5150     0222  1303               	bcf	3,6	;RP1=0, select bank0
  5151     0223  1406               	bsf	6,0	;volatile
  5152     0224  2A28               	goto	u2504
  5153     0225                     u2490:
  5154     0225  1283               	bcf	3,5	;RP0=0, select bank0
  5155     0226  1303               	bcf	3,6	;RP1=0, select bank0
  5156     0227  1006               	bcf	6,0	;volatile
  5157     0228                     u2504:
  5158     0228                     l1980:
  5159                           
  5160                           ;TTL_Logic.c: 147:         _delay((unsigned long)((50)*(16000000/4000.0)));
  5161     0228  3002               	movlw	2
  5162     0229  00F8               	movwf	??_Mode_6+2
  5163     022A  3004               	movlw	4
  5164     022B  00F7               	movwf	??_Mode_6+1
  5165     022C  30BA               	movlw	186
  5166     022D  00F6               	movwf	??_Mode_6
  5167     022E                     u3657:
  5168     022E  0BF6               	decfsz	??_Mode_6,f
  5169     022F  2A2E               	goto	u3657
  5170     0230  0BF7               	decfsz	??_Mode_6+1,f
  5171     0231  2A2E               	goto	u3657
  5172     0232  0BF8               	decfsz	??_Mode_6+2,f
  5173     0233  2A2E               	goto	u3657
  5174     0234  0000               	nop
  5175     0235                     l1982:
  5176                           
  5177                           ;TTL_Logic.c: 148:         k=(int)RD7;
  5178     0235  1003               	clrc
  5179     0236  1283               	bcf	3,5	;RP0=0, select bank0
  5180     0237  1303               	bcf	3,6	;RP1=0, select bank0
  5181     0238  1B88               	btfsc	8,7	;volatile
  5182     0239  1403               	setc
  5183     023A  3000               	movlw	0
  5184     023B  1803               	skipnc
  5185     023C  3001               	movlw	1
  5186     023D  00F6               	movwf	??_Mode_6
  5187     023E  01F7               	clrf	??_Mode_6+1
  5188     023F  0876               	movf	??_Mode_6,w
  5189     0240  00D5               	movwf	_k
  5190     0241  0877               	movf	??_Mode_6+1,w
  5191     0242  00D6               	movwf	_k+1
  5192     0243                     l1984:
  5193                           
  5194                           ;TTL_Logic.c: 149:         gate[0]*=10;
  5195     0243  300A               	movlw	10
  5196     0244  00F0               	movwf	___wmul@multiplier
  5197     0245  3000               	movlw	0
  5198     0246  00F1               	movwf	___wmul@multiplier+1
  5199     0247  085E               	movf	_gate+1,w
  5200     0248  00F3               	movwf	___wmul@multiplicand+1
  5201     0249  085D               	movf	_gate,w
  5202     024A  00F2               	movwf	___wmul@multiplicand
  5203     024B  120A  158A  2265  120A  118A  	fcall	___wmul
  5204     0250  0871               	movf	?___wmul+1,w
  5205     0251  1283               	bcf	3,5	;RP0=0, select bank0
  5206     0252  1303               	bcf	3,6	;RP1=0, select bank0
  5207     0253  00DE               	movwf	_gate+1
  5208     0254  0870               	movf	?___wmul,w
  5209     0255  00DD               	movwf	_gate
  5210     0256                     l1986:
  5211                           
  5212                           ;TTL_Logic.c: 150:         gate[0]+=k;
  5213     0256  0855               	movf	_k,w
  5214     0257  07DD               	addwf	_gate,f
  5215     0258  1803               	skipnc
  5216     0259  0ADE               	incf	_gate+1,f
  5217     025A  0856               	movf	_k+1,w
  5218     025B  07DE               	addwf	_gate+1,f
  5219     025C                     l1988:
  5220                           
  5221                           ;TTL_Logic.c: 151:         k=(int)RD5;
  5222     025C  1003               	clrc
  5223     025D  1A88               	btfsc	8,5	;volatile
  5224     025E  1403               	setc
  5225     025F  3000               	movlw	0
  5226     0260  1803               	skipnc
  5227     0261  3001               	movlw	1
  5228     0262  00F6               	movwf	??_Mode_6
  5229     0263  01F7               	clrf	??_Mode_6+1
  5230     0264  0876               	movf	??_Mode_6,w
  5231     0265  00D5               	movwf	_k
  5232     0266  0877               	movf	??_Mode_6+1,w
  5233     0267  00D6               	movwf	_k+1
  5234                           
  5235                           ;TTL_Logic.c: 152:         gate[1]*=10;
  5236     0268  300A               	movlw	10
  5237     0269  00F0               	movwf	___wmul@multiplier
  5238     026A  3000               	movlw	0
  5239     026B  00F1               	movwf	___wmul@multiplier+1
  5240     026C  0860               	movf	_gate+3,w
  5241     026D  00F3               	movwf	___wmul@multiplicand+1
  5242     026E  085F               	movf	_gate+2,w
  5243     026F  00F2               	movwf	___wmul@multiplicand
  5244     0270  120A  158A  2265  120A  118A  	fcall	___wmul
  5245     0275  0871               	movf	?___wmul+1,w
  5246     0276  1283               	bcf	3,5	;RP0=0, select bank0
  5247     0277  1303               	bcf	3,6	;RP1=0, select bank0
  5248     0278  00E0               	movwf	_gate+3
  5249     0279  0870               	movf	?___wmul,w
  5250     027A  00DF               	movwf	_gate+2
  5251     027B                     l1990:
  5252                           
  5253                           ;TTL_Logic.c: 153:         gate[1]+=k;
  5254     027B  0855               	movf	_k,w
  5255     027C  07DF               	addwf	_gate+2,f
  5256     027D  1803               	skipnc
  5257     027E  0AE0               	incf	_gate+3,f
  5258     027F  0856               	movf	_k+1,w
  5259     0280  07E0               	addwf	_gate+3,f
  5260     0281                     l1992:
  5261                           
  5262                           ;TTL_Logic.c: 154:         k=(int)RD3;
  5263     0281  1003               	clrc
  5264     0282  1988               	btfsc	8,3	;volatile
  5265     0283  1403               	setc
  5266     0284  3000               	movlw	0
  5267     0285  1803               	skipnc
  5268     0286  3001               	movlw	1
  5269     0287  00F6               	movwf	??_Mode_6
  5270     0288  01F7               	clrf	??_Mode_6+1
  5271     0289  0876               	movf	??_Mode_6,w
  5272     028A  00D5               	movwf	_k
  5273     028B  0877               	movf	??_Mode_6+1,w
  5274     028C  00D6               	movwf	_k+1
  5275     028D                     l1994:
  5276                           
  5277                           ;TTL_Logic.c: 155:         gate[2]*=10;
  5278     028D  300A               	movlw	10
  5279     028E  00F0               	movwf	___wmul@multiplier
  5280     028F  3000               	movlw	0
  5281     0290  00F1               	movwf	___wmul@multiplier+1
  5282     0291  0862               	movf	_gate+5,w
  5283     0292  00F3               	movwf	___wmul@multiplicand+1
  5284     0293  0861               	movf	_gate+4,w
  5285     0294  00F2               	movwf	___wmul@multiplicand
  5286     0295  120A  158A  2265  120A  118A  	fcall	___wmul
  5287     029A  0871               	movf	?___wmul+1,w
  5288     029B  1283               	bcf	3,5	;RP0=0, select bank0
  5289     029C  1303               	bcf	3,6	;RP1=0, select bank0
  5290     029D  00E2               	movwf	_gate+5
  5291     029E  0870               	movf	?___wmul,w
  5292     029F  00E1               	movwf	_gate+4
  5293     02A0                     l1996:
  5294                           
  5295                           ;TTL_Logic.c: 156:         gate[2]+=k;
  5296     02A0  0855               	movf	_k,w
  5297     02A1  07E1               	addwf	_gate+4,f
  5298     02A2  1803               	skipnc
  5299     02A3  0AE2               	incf	_gate+5,f
  5300     02A4  0856               	movf	_k+1,w
  5301     02A5  07E2               	addwf	_gate+5,f
  5302                           
  5303                           ;TTL_Logic.c: 157:         k=(int)RB6;
  5304     02A6  1003               	clrc
  5305     02A7  1B06               	btfsc	6,6	;volatile
  5306     02A8  1403               	setc
  5307     02A9  3000               	movlw	0
  5308     02AA  1803               	skipnc
  5309     02AB  3001               	movlw	1
  5310     02AC  00F6               	movwf	??_Mode_6
  5311     02AD  01F7               	clrf	??_Mode_6+1
  5312     02AE  0876               	movf	??_Mode_6,w
  5313     02AF  00D5               	movwf	_k
  5314     02B0  0877               	movf	??_Mode_6+1,w
  5315     02B1  00D6               	movwf	_k+1
  5316     02B2                     l1998:
  5317                           
  5318                           ;TTL_Logic.c: 158:         gate[3]*=10;
  5319     02B2  300A               	movlw	10
  5320     02B3  00F0               	movwf	___wmul@multiplier
  5321     02B4  3000               	movlw	0
  5322     02B5  00F1               	movwf	___wmul@multiplier+1
  5323     02B6  0864               	movf	_gate+7,w
  5324     02B7  00F3               	movwf	___wmul@multiplicand+1
  5325     02B8  0863               	movf	_gate+6,w
  5326     02B9  00F2               	movwf	___wmul@multiplicand
  5327     02BA  120A  158A  2265  120A  118A  	fcall	___wmul
  5328     02BF  0871               	movf	?___wmul+1,w
  5329     02C0  1283               	bcf	3,5	;RP0=0, select bank0
  5330     02C1  1303               	bcf	3,6	;RP1=0, select bank0
  5331     02C2  00E4               	movwf	_gate+7
  5332     02C3  0870               	movf	?___wmul,w
  5333     02C4  00E3               	movwf	_gate+6
  5334     02C5                     l2000:
  5335                           
  5336                           ;TTL_Logic.c: 159:         gate[3]+=k;
  5337     02C5  0855               	movf	_k,w
  5338     02C6  07E3               	addwf	_gate+6,f
  5339     02C7  1803               	skipnc
  5340     02C8  0AE4               	incf	_gate+7,f
  5341     02C9  0856               	movf	_k+1,w
  5342     02CA  07E4               	addwf	_gate+7,f
  5343     02CB                     l2002:
  5344                           
  5345                           ;TTL_Logic.c: 160:         k=(int)RB4;
  5346     02CB  1003               	clrc
  5347     02CC  1A06               	btfsc	6,4	;volatile
  5348     02CD  1403               	setc
  5349     02CE  3000               	movlw	0
  5350     02CF  1803               	skipnc
  5351     02D0  3001               	movlw	1
  5352     02D1  00F6               	movwf	??_Mode_6
  5353     02D2  01F7               	clrf	??_Mode_6+1
  5354     02D3  0876               	movf	??_Mode_6,w
  5355     02D4  00D5               	movwf	_k
  5356     02D5  0877               	movf	??_Mode_6+1,w
  5357     02D6  00D6               	movwf	_k+1
  5358     02D7                     l2004:
  5359                           
  5360                           ;TTL_Logic.c: 161:         gate[4]*=10;
  5361     02D7  300A               	movlw	10
  5362     02D8  00F0               	movwf	___wmul@multiplier
  5363     02D9  3000               	movlw	0
  5364     02DA  00F1               	movwf	___wmul@multiplier+1
  5365     02DB  0866               	movf	_gate+9,w
  5366     02DC  00F3               	movwf	___wmul@multiplicand+1
  5367     02DD  0865               	movf	_gate+8,w
  5368     02DE  00F2               	movwf	___wmul@multiplicand
  5369     02DF  120A  158A  2265  120A  118A  	fcall	___wmul
  5370     02E4  0871               	movf	?___wmul+1,w
  5371     02E5  1283               	bcf	3,5	;RP0=0, select bank0
  5372     02E6  1303               	bcf	3,6	;RP1=0, select bank0
  5373     02E7  00E6               	movwf	_gate+9
  5374     02E8  0870               	movf	?___wmul,w
  5375     02E9  00E5               	movwf	_gate+8
  5376                           
  5377                           ;TTL_Logic.c: 162:         gate[4]+=k;
  5378     02EA  0855               	movf	_k,w
  5379     02EB  07E5               	addwf	_gate+8,f
  5380     02EC  1803               	skipnc
  5381     02ED  0AE6               	incf	_gate+9,f
  5382     02EE  0856               	movf	_k+1,w
  5383     02EF  07E6               	addwf	_gate+9,f
  5384     02F0                     l2006:
  5385                           
  5386                           ;TTL_Logic.c: 163:         k=(int)RB2;
  5387     02F0  1003               	clrc
  5388     02F1  1906               	btfsc	6,2	;volatile
  5389     02F2  1403               	setc
  5390     02F3  3000               	movlw	0
  5391     02F4  1803               	skipnc
  5392     02F5  3001               	movlw	1
  5393     02F6  00F6               	movwf	??_Mode_6
  5394     02F7  01F7               	clrf	??_Mode_6+1
  5395     02F8  0876               	movf	??_Mode_6,w
  5396     02F9  00D5               	movwf	_k
  5397     02FA  0877               	movf	??_Mode_6+1,w
  5398     02FB  00D6               	movwf	_k+1
  5399     02FC                     l2008:
  5400                           
  5401                           ;TTL_Logic.c: 164:         gate[5]*=10;
  5402     02FC  300A               	movlw	10
  5403     02FD  00F0               	movwf	___wmul@multiplier
  5404     02FE  3000               	movlw	0
  5405     02FF  00F1               	movwf	___wmul@multiplier+1
  5406     0300  0868               	movf	_gate+11,w
  5407     0301  00F3               	movwf	___wmul@multiplicand+1
  5408     0302  0867               	movf	_gate+10,w
  5409     0303  00F2               	movwf	___wmul@multiplicand
  5410     0304  120A  158A  2265  120A  118A  	fcall	___wmul
  5411     0309  0871               	movf	?___wmul+1,w
  5412     030A  1283               	bcf	3,5	;RP0=0, select bank0
  5413     030B  1303               	bcf	3,6	;RP1=0, select bank0
  5414     030C  00E8               	movwf	_gate+11
  5415     030D  0870               	movf	?___wmul,w
  5416     030E  00E7               	movwf	_gate+10
  5417     030F                     l2010:
  5418                           
  5419                           ;TTL_Logic.c: 165:         gate[5]+=k;
  5420     030F  0855               	movf	_k,w
  5421     0310  07E7               	addwf	_gate+10,f
  5422     0311  1803               	skipnc
  5423     0312  0AE8               	incf	_gate+11,f
  5424     0313  0856               	movf	_k+1,w
  5425     0314  07E8               	addwf	_gate+11,f
  5426     0315                     l2012:
  5427                           
  5428                           ;TTL_Logic.c: 166:         _delay((unsigned long)((100)*(16000000/4000.0)));
  5429     0315  3003               	movlw	3
  5430     0316  00F8               	movwf	??_Mode_6+2
  5431     0317  3008               	movlw	8
  5432     0318  00F7               	movwf	??_Mode_6+1
  5433     0319  3077               	movlw	119
  5434     031A  00F6               	movwf	??_Mode_6
  5435     031B                     u3667:
  5436     031B  0BF6               	decfsz	??_Mode_6,f
  5437     031C  2B1B               	goto	u3667
  5438     031D  0BF7               	decfsz	??_Mode_6+1,f
  5439     031E  2B1B               	goto	u3667
  5440     031F  0BF8               	decfsz	??_Mode_6+2,f
  5441     0320  2B1B               	goto	u3667
  5442     0321                     l2014:
  5443                           
  5444                           ;TTL_Logic.c: 167:     }
  5445     0321  3001               	movlw	1
  5446     0322  1283               	bcf	3,5	;RP0=0, select bank0
  5447     0323  1303               	bcf	3,6	;RP1=0, select bank0
  5448     0324  07D9               	addwf	_i,f
  5449     0325  1803               	skipnc
  5450     0326  0ADA               	incf	_i+1,f
  5451     0327  3000               	movlw	0
  5452     0328  07DA               	addwf	_i+1,f
  5453     0329                     l2016:
  5454     0329  3000               	movlw	0
  5455     032A  025A               	subwf	_i+1,w
  5456     032B  3002               	movlw	2
  5457     032C  1903               	skipnz
  5458     032D  0259               	subwf	_i,w
  5459     032E  1C03               	skipc
  5460     032F  2B31               	goto	u2511
  5461     0330  2B32               	goto	u2510
  5462     0331                     u2511:
  5463     0331  29EC               	goto	l317
  5464     0332                     u2510:
  5465     0332                     l319:
  5466     0332  0008               	return
  5467     0333                     __end_of_Mode_6:
  5468                           
  5469                           	psect	text21
  5470     051C                     __ptext21:	
  5471 ;; *************** function _Mode_4 *****************
  5472 ;; Defined at:
  5473 ;;		line 86 in file "TTL_Logic.c"
  5474 ;; Parameters:    Size  Location     Type
  5475 ;;		None
  5476 ;; Auto vars:     Size  Location     Type
  5477 ;;		None
  5478 ;; Return value:  Size  Location     Type
  5479 ;;                  1    wreg      void 
  5480 ;; Registers used:
  5481 ;;		wreg, status,2, status,0, pclath, cstack
  5482 ;; Tracked objects:
  5483 ;;		On entry : 0/0
  5484 ;;		On exit  : 0/0
  5485 ;;		Unchanged: 0/0
  5486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5487 ;;      Params:         0       0       0       0       0
  5488 ;;      Locals:         0       0       0       0       0
  5489 ;;      Temps:          3       0       0       0       0
  5490 ;;      Totals:         3       0       0       0       0
  5491 ;;Total ram usage:        3 bytes
  5492 ;; Hardware stack levels used: 1
  5493 ;; Hardware stack levels required when called: 1
  5494 ;; This function calls:
  5495 ;;		___wmul
  5496 ;; This function is called by:
  5497 ;;		_Test
  5498 ;;		_Auto
  5499 ;; This function uses a non-reentrant model
  5500 ;;
  5501                           
  5502     051C                     _Mode_4:	
  5503                           ;psect for function _Mode_4
  5504                           
  5505     051C                     l2060:	
  5506                           ;incstack = 0
  5507                           ; Regs used in _Mode_4: [wreg+status,2+status,0+pclath+cstack]
  5508                           
  5509                           
  5510                           ;TTL_Logic.c: 88:     k=0;
  5511     051C  1283               	bcf	3,5	;RP0=0, select bank0
  5512     051D  1303               	bcf	3,6	;RP1=0, select bank0
  5513     051E  01D5               	clrf	_k
  5514     051F  01D6               	clrf	_k+1
  5515     0520                     l2062:
  5516                           
  5517                           ;TTL_Logic.c: 89:     if(n==1){
  5518     0520  0369               	decf	_n,w
  5519     0521  046A               	iorwf	_n+1,w
  5520     0522  1D03               	btfss	3,2
  5521     0523  2D25               	goto	u2571
  5522     0524  2D26               	goto	u2570
  5523     0525                     u2571:
  5524     0525  2E7B               	goto	l304
  5525     0526                     u2570:
  5526     0526                     l2064:
  5527                           
  5528                           ;TTL_Logic.c: 90:     TRISD7=TRISD6=TRISD4=TRISD3=TRISB5=TRISB6=TRISB2=TRISB3=0;
  5529     0526  1683               	bsf	3,5	;RP0=1, select bank1
  5530     0527  1303               	bcf	3,6	;RP1=0, select bank1
  5531     0528  1186               	bcf	6,3	;volatile
  5532     0529  1106               	bcf	6,2	;volatile
  5533     052A  1306               	bcf	6,6	;volatile
  5534     052B  1286               	bcf	6,5	;volatile
  5535     052C  1188               	bcf	8,3	;volatile
  5536     052D  1208               	bcf	8,4	;volatile
  5537     052E  1308               	bcf	8,6	;volatile
  5538     052F  1388               	bcf	8,7	;volatile
  5539                           
  5540                           ;TTL_Logic.c: 91:     TRISB0=TRISD5=TRISB4=TRISB1=1;
  5541     0530  1486               	bsf	6,1	;volatile
  5542     0531  1886               	btfsc	6,1	;volatile
  5543     0532  2D34               	goto	u2581
  5544     0533  2D38               	goto	u2580
  5545     0534                     u2581:
  5546     0534  1683               	bsf	3,5	;RP0=1, select bank1
  5547     0535  1303               	bcf	3,6	;RP1=0, select bank1
  5548     0536  1606               	bsf	6,4	;volatile
  5549     0537  2D3B               	goto	u2594
  5550     0538                     u2580:
  5551     0538  1683               	bsf	3,5	;RP0=1, select bank1
  5552     0539  1303               	bcf	3,6	;RP1=0, select bank1
  5553     053A  1206               	bcf	6,4	;volatile
  5554     053B                     u2594:
  5555     053B  1A06               	btfsc	6,4	;volatile
  5556     053C  2D3E               	goto	u2591
  5557     053D  2D42               	goto	u2590
  5558     053E                     u2591:
  5559     053E  1683               	bsf	3,5	;RP0=1, select bank1
  5560     053F  1303               	bcf	3,6	;RP1=0, select bank1
  5561     0540  1688               	bsf	8,5	;volatile
  5562     0541  2D45               	goto	u2604
  5563     0542                     u2590:
  5564     0542  1683               	bsf	3,5	;RP0=1, select bank1
  5565     0543  1303               	bcf	3,6	;RP1=0, select bank1
  5566     0544  1288               	bcf	8,5	;volatile
  5567     0545                     u2604:
  5568     0545  1A88               	btfsc	8,5	;volatile
  5569     0546  2D48               	goto	u2601
  5570     0547  2D4C               	goto	u2600
  5571     0548                     u2601:
  5572     0548  1683               	bsf	3,5	;RP0=1, select bank1
  5573     0549  1303               	bcf	3,6	;RP1=0, select bank1
  5574     054A  1406               	bsf	6,0	;volatile
  5575     054B  2D4F               	goto	u2614
  5576     054C                     u2600:
  5577     054C  1683               	bsf	3,5	;RP0=1, select bank1
  5578     054D  1303               	bcf	3,6	;RP1=0, select bank1
  5579     054E  1006               	bcf	6,0	;volatile
  5580     054F                     u2614:
  5581     054F                     l2066:
  5582                           
  5583                           ;TTL_Logic.c: 92:     _delay((unsigned long)((20)*(16000000/4000.0)));
  5584     054F  3068               	movlw	104
  5585     0550  00F7               	movwf	??_Mode_4+1
  5586     0551  30E4               	movlw	228
  5587     0552  00F6               	movwf	??_Mode_4
  5588     0553                     u3677:
  5589     0553  0BF6               	decfsz	??_Mode_4,f
  5590     0554  2D53               	goto	u3677
  5591     0555  0BF7               	decfsz	??_Mode_4+1,f
  5592     0556  2D53               	goto	u3677
  5593     0557  0000               	nop
  5594     0558                     l2068:
  5595                           
  5596                           ;TTL_Logic.c: 93:     for(i=0;i<2;i++)
  5597     0558  1283               	bcf	3,5	;RP0=0, select bank0
  5598     0559  1303               	bcf	3,6	;RP1=0, select bank0
  5599     055A  01D9               	clrf	_i
  5600     055B  01DA               	clrf	_i+1
  5601     055C                     l2070:
  5602     055C  3000               	movlw	0
  5603     055D  025A               	subwf	_i+1,w
  5604     055E  3002               	movlw	2
  5605     055F  1903               	skipnz
  5606     0560  0259               	subwf	_i,w
  5607     0561  1C03               	skipc
  5608     0562  2D64               	goto	u2621
  5609     0563  2D65               	goto	u2620
  5610     0564                     u2621:
  5611     0564  2D66               	goto	l2074
  5612     0565                     u2620:
  5613     0565  2FCF               	goto	l314
  5614     0566                     l2074:
  5615                           
  5616                           ;TTL_Logic.c: 94:     {;TTL_Logic.c: 95:         for(j=0;j<2;j++)
  5617     0566  01D7               	clrf	_j
  5618     0567  01D8               	clrf	_j+1
  5619     0568                     l2076:
  5620     0568  3000               	movlw	0
  5621     0569  0258               	subwf	_j+1,w
  5622     056A  3002               	movlw	2
  5623     056B  1903               	skipnz
  5624     056C  0257               	subwf	_j,w
  5625     056D  1C03               	skipc
  5626     056E  2D70               	goto	u2631
  5627     056F  2D71               	goto	u2630
  5628     0570                     u2631:
  5629     0570  2D72               	goto	l307
  5630     0571                     u2630:
  5631     0571  2E6B               	goto	l2106
  5632     0572                     l307:
  5633                           
  5634                           ;TTL_Logic.c: 96:         {;TTL_Logic.c: 97:             RD7=RD4=RB5=RB2=(__bit)i;
  5635     0572  1859               	btfsc	_i,0
  5636     0573  2D75               	goto	u2641
  5637     0574  2D79               	goto	u2640
  5638     0575                     u2641:
  5639     0575  1283               	bcf	3,5	;RP0=0, select bank0
  5640     0576  1303               	bcf	3,6	;RP1=0, select bank0
  5641     0577  1506               	bsf	6,2	;volatile
  5642     0578  2D7C               	goto	u2654
  5643     0579                     u2640:
  5644     0579  1283               	bcf	3,5	;RP0=0, select bank0
  5645     057A  1303               	bcf	3,6	;RP1=0, select bank0
  5646     057B  1106               	bcf	6,2	;volatile
  5647     057C                     u2654:
  5648     057C  1906               	btfsc	6,2	;volatile
  5649     057D  2D7F               	goto	u2651
  5650     057E  2D83               	goto	u2650
  5651     057F                     u2651:
  5652     057F  1283               	bcf	3,5	;RP0=0, select bank0
  5653     0580  1303               	bcf	3,6	;RP1=0, select bank0
  5654     0581  1686               	bsf	6,5	;volatile
  5655     0582  2D86               	goto	u2664
  5656     0583                     u2650:
  5657     0583  1283               	bcf	3,5	;RP0=0, select bank0
  5658     0584  1303               	bcf	3,6	;RP1=0, select bank0
  5659     0585  1286               	bcf	6,5	;volatile
  5660     0586                     u2664:
  5661     0586  1A86               	btfsc	6,5	;volatile
  5662     0587  2D89               	goto	u2661
  5663     0588  2D8D               	goto	u2660
  5664     0589                     u2661:
  5665     0589  1283               	bcf	3,5	;RP0=0, select bank0
  5666     058A  1303               	bcf	3,6	;RP1=0, select bank0
  5667     058B  1608               	bsf	8,4	;volatile
  5668     058C  2D90               	goto	u2674
  5669     058D                     u2660:
  5670     058D  1283               	bcf	3,5	;RP0=0, select bank0
  5671     058E  1303               	bcf	3,6	;RP1=0, select bank0
  5672     058F  1208               	bcf	8,4	;volatile
  5673     0590                     u2674:
  5674     0590  1A08               	btfsc	8,4	;volatile
  5675     0591  2D93               	goto	u2671
  5676     0592  2D97               	goto	u2670
  5677     0593                     u2671:
  5678     0593  1283               	bcf	3,5	;RP0=0, select bank0
  5679     0594  1303               	bcf	3,6	;RP1=0, select bank0
  5680     0595  1788               	bsf	8,7	;volatile
  5681     0596  2D9A               	goto	u2684
  5682     0597                     u2670:
  5683     0597  1283               	bcf	3,5	;RP0=0, select bank0
  5684     0598  1303               	bcf	3,6	;RP1=0, select bank0
  5685     0599  1388               	bcf	8,7	;volatile
  5686     059A                     u2684:
  5687                           
  5688                           ;TTL_Logic.c: 98:             RD6=RD3=RB6=RB3=(__bit)j;
  5689     059A  1857               	btfsc	_j,0
  5690     059B  2D9D               	goto	u2691
  5691     059C  2DA1               	goto	u2690
  5692     059D                     u2691:
  5693     059D  1283               	bcf	3,5	;RP0=0, select bank0
  5694     059E  1303               	bcf	3,6	;RP1=0, select bank0
  5695     059F  1586               	bsf	6,3	;volatile
  5696     05A0  2DA4               	goto	u2704
  5697     05A1                     u2690:
  5698     05A1  1283               	bcf	3,5	;RP0=0, select bank0
  5699     05A2  1303               	bcf	3,6	;RP1=0, select bank0
  5700     05A3  1186               	bcf	6,3	;volatile
  5701     05A4                     u2704:
  5702     05A4  1986               	btfsc	6,3	;volatile
  5703     05A5  2DA7               	goto	u2701
  5704     05A6  2DAB               	goto	u2700
  5705     05A7                     u2701:
  5706     05A7  1283               	bcf	3,5	;RP0=0, select bank0
  5707     05A8  1303               	bcf	3,6	;RP1=0, select bank0
  5708     05A9  1706               	bsf	6,6	;volatile
  5709     05AA  2DAE               	goto	u2714
  5710     05AB                     u2700:
  5711     05AB  1283               	bcf	3,5	;RP0=0, select bank0
  5712     05AC  1303               	bcf	3,6	;RP1=0, select bank0
  5713     05AD  1306               	bcf	6,6	;volatile
  5714     05AE                     u2714:
  5715     05AE  1B06               	btfsc	6,6	;volatile
  5716     05AF  2DB1               	goto	u2711
  5717     05B0  2DB5               	goto	u2710
  5718     05B1                     u2711:
  5719     05B1  1283               	bcf	3,5	;RP0=0, select bank0
  5720     05B2  1303               	bcf	3,6	;RP1=0, select bank0
  5721     05B3  1588               	bsf	8,3	;volatile
  5722     05B4  2DB8               	goto	u2724
  5723     05B5                     u2710:
  5724     05B5  1283               	bcf	3,5	;RP0=0, select bank0
  5725     05B6  1303               	bcf	3,6	;RP1=0, select bank0
  5726     05B7  1188               	bcf	8,3	;volatile
  5727     05B8                     u2724:
  5728     05B8  1988               	btfsc	8,3	;volatile
  5729     05B9  2DBB               	goto	u2721
  5730     05BA  2DBF               	goto	u2720
  5731     05BB                     u2721:
  5732     05BB  1283               	bcf	3,5	;RP0=0, select bank0
  5733     05BC  1303               	bcf	3,6	;RP1=0, select bank0
  5734     05BD  1708               	bsf	8,6	;volatile
  5735     05BE  2DC2               	goto	u2734
  5736     05BF                     u2720:
  5737     05BF  1283               	bcf	3,5	;RP0=0, select bank0
  5738     05C0  1303               	bcf	3,6	;RP1=0, select bank0
  5739     05C1  1308               	bcf	8,6	;volatile
  5740     05C2                     u2734:
  5741     05C2                     l2080:
  5742                           
  5743                           ;TTL_Logic.c: 99:             k=(int)RB0;
  5744     05C2  1003               	clrc
  5745     05C3  1806               	btfsc	6,0	;volatile
  5746     05C4  1403               	setc
  5747     05C5  3000               	movlw	0
  5748     05C6  1803               	skipnc
  5749     05C7  3001               	movlw	1
  5750     05C8  00F6               	movwf	??_Mode_4
  5751     05C9  01F7               	clrf	??_Mode_4+1
  5752     05CA  0876               	movf	??_Mode_4,w
  5753     05CB  00D5               	movwf	_k
  5754     05CC  0877               	movf	??_Mode_4+1,w
  5755     05CD  00D6               	movwf	_k+1
  5756     05CE                     l2082:
  5757                           
  5758                           ;TTL_Logic.c: 100:             gate[0]*=10;
  5759     05CE  300A               	movlw	10
  5760     05CF  00F0               	movwf	___wmul@multiplier
  5761     05D0  3000               	movlw	0
  5762     05D1  00F1               	movwf	___wmul@multiplier+1
  5763     05D2  085E               	movf	_gate+1,w
  5764     05D3  00F3               	movwf	___wmul@multiplicand+1
  5765     05D4  085D               	movf	_gate,w
  5766     05D5  00F2               	movwf	___wmul@multiplicand
  5767     05D6  120A  158A  2265  120A  118A  	fcall	___wmul
  5768     05DB  0871               	movf	?___wmul+1,w
  5769     05DC  1283               	bcf	3,5	;RP0=0, select bank0
  5770     05DD  1303               	bcf	3,6	;RP1=0, select bank0
  5771     05DE  00DE               	movwf	_gate+1
  5772     05DF  0870               	movf	?___wmul,w
  5773     05E0  00DD               	movwf	_gate
  5774     05E1                     l2084:
  5775                           
  5776                           ;TTL_Logic.c: 101:             gate[0]+=k;
  5777     05E1  0855               	movf	_k,w
  5778     05E2  07DD               	addwf	_gate,f
  5779     05E3  1803               	skipnc
  5780     05E4  0ADE               	incf	_gate+1,f
  5781     05E5  0856               	movf	_k+1,w
  5782     05E6  07DE               	addwf	_gate+1,f
  5783     05E7                     l2086:
  5784                           
  5785                           ;TTL_Logic.c: 102:             k=(int)RD5;
  5786     05E7  1003               	clrc
  5787     05E8  1A88               	btfsc	8,5	;volatile
  5788     05E9  1403               	setc
  5789     05EA  3000               	movlw	0
  5790     05EB  1803               	skipnc
  5791     05EC  3001               	movlw	1
  5792     05ED  00F6               	movwf	??_Mode_4
  5793     05EE  01F7               	clrf	??_Mode_4+1
  5794     05EF  0876               	movf	??_Mode_4,w
  5795     05F0  00D5               	movwf	_k
  5796     05F1  0877               	movf	??_Mode_4+1,w
  5797     05F2  00D6               	movwf	_k+1
  5798     05F3                     l2088:
  5799                           
  5800                           ;TTL_Logic.c: 103:             gate[1]*=10;
  5801     05F3  300A               	movlw	10
  5802     05F4  00F0               	movwf	___wmul@multiplier
  5803     05F5  3000               	movlw	0
  5804     05F6  00F1               	movwf	___wmul@multiplier+1
  5805     05F7  0860               	movf	_gate+3,w
  5806     05F8  00F3               	movwf	___wmul@multiplicand+1
  5807     05F9  085F               	movf	_gate+2,w
  5808     05FA  00F2               	movwf	___wmul@multiplicand
  5809     05FB  120A  158A  2265  120A  118A  	fcall	___wmul
  5810     0600  0871               	movf	?___wmul+1,w
  5811     0601  1283               	bcf	3,5	;RP0=0, select bank0
  5812     0602  1303               	bcf	3,6	;RP1=0, select bank0
  5813     0603  00E0               	movwf	_gate+3
  5814     0604  0870               	movf	?___wmul,w
  5815     0605  00DF               	movwf	_gate+2
  5816                           
  5817                           ;TTL_Logic.c: 104:             gate[1]+=k;
  5818     0606  0855               	movf	_k,w
  5819     0607  07DF               	addwf	_gate+2,f
  5820     0608  1803               	skipnc
  5821     0609  0AE0               	incf	_gate+3,f
  5822     060A  0856               	movf	_k+1,w
  5823     060B  07E0               	addwf	_gate+3,f
  5824     060C                     l2090:
  5825                           
  5826                           ;TTL_Logic.c: 105:             k=(int)RB4;
  5827     060C  1003               	clrc
  5828     060D  1A06               	btfsc	6,4	;volatile
  5829     060E  1403               	setc
  5830     060F  3000               	movlw	0
  5831     0610  1803               	skipnc
  5832     0611  3001               	movlw	1
  5833     0612  00F6               	movwf	??_Mode_4
  5834     0613  01F7               	clrf	??_Mode_4+1
  5835     0614  0876               	movf	??_Mode_4,w
  5836     0615  00D5               	movwf	_k
  5837     0616  0877               	movf	??_Mode_4+1,w
  5838     0617  00D6               	movwf	_k+1
  5839     0618                     l2092:
  5840                           
  5841                           ;TTL_Logic.c: 106:             gate[2]*=10;
  5842     0618  300A               	movlw	10
  5843     0619  00F0               	movwf	___wmul@multiplier
  5844     061A  3000               	movlw	0
  5845     061B  00F1               	movwf	___wmul@multiplier+1
  5846     061C  0862               	movf	_gate+5,w
  5847     061D  00F3               	movwf	___wmul@multiplicand+1
  5848     061E  0861               	movf	_gate+4,w
  5849     061F  00F2               	movwf	___wmul@multiplicand
  5850     0620  120A  158A  2265  120A  118A  	fcall	___wmul
  5851     0625  0871               	movf	?___wmul+1,w
  5852     0626  1283               	bcf	3,5	;RP0=0, select bank0
  5853     0627  1303               	bcf	3,6	;RP1=0, select bank0
  5854     0628  00E2               	movwf	_gate+5
  5855     0629  0870               	movf	?___wmul,w
  5856     062A  00E1               	movwf	_gate+4
  5857     062B                     l2094:
  5858                           
  5859                           ;TTL_Logic.c: 107:             gate[2]+=k;
  5860     062B  0855               	movf	_k,w
  5861     062C  07E1               	addwf	_gate+4,f
  5862     062D  1803               	skipnc
  5863     062E  0AE2               	incf	_gate+5,f
  5864     062F  0856               	movf	_k+1,w
  5865     0630  07E2               	addwf	_gate+5,f
  5866     0631                     l2096:
  5867                           
  5868                           ;TTL_Logic.c: 108:             k=(int)RB1;
  5869     0631  1003               	clrc
  5870     0632  1886               	btfsc	6,1	;volatile
  5871     0633  1403               	setc
  5872     0634  3000               	movlw	0
  5873     0635  1803               	skipnc
  5874     0636  3001               	movlw	1
  5875     0637  00F6               	movwf	??_Mode_4
  5876     0638  01F7               	clrf	??_Mode_4+1
  5877     0639  0876               	movf	??_Mode_4,w
  5878     063A  00D5               	movwf	_k
  5879     063B  0877               	movf	??_Mode_4+1,w
  5880     063C  00D6               	movwf	_k+1
  5881                           
  5882                           ;TTL_Logic.c: 109:             gate[3]*=10;
  5883     063D  300A               	movlw	10
  5884     063E  00F0               	movwf	___wmul@multiplier
  5885     063F  3000               	movlw	0
  5886     0640  00F1               	movwf	___wmul@multiplier+1
  5887     0641  0864               	movf	_gate+7,w
  5888     0642  00F3               	movwf	___wmul@multiplicand+1
  5889     0643  0863               	movf	_gate+6,w
  5890     0644  00F2               	movwf	___wmul@multiplicand
  5891     0645  120A  158A  2265  120A  118A  	fcall	___wmul
  5892     064A  0871               	movf	?___wmul+1,w
  5893     064B  1283               	bcf	3,5	;RP0=0, select bank0
  5894     064C  1303               	bcf	3,6	;RP1=0, select bank0
  5895     064D  00E4               	movwf	_gate+7
  5896     064E  0870               	movf	?___wmul,w
  5897     064F  00E3               	movwf	_gate+6
  5898     0650                     l2098:
  5899                           
  5900                           ;TTL_Logic.c: 110:             gate[3]+=k;
  5901     0650  0855               	movf	_k,w
  5902     0651  07E3               	addwf	_gate+6,f
  5903     0652  1803               	skipnc
  5904     0653  0AE4               	incf	_gate+7,f
  5905     0654  0856               	movf	_k+1,w
  5906     0655  07E4               	addwf	_gate+7,f
  5907     0656                     l2100:
  5908                           
  5909                           ;TTL_Logic.c: 111:             _delay((unsigned long)((100)*(16000000/4000.0)));
  5910     0656  3003               	movlw	3
  5911     0657  00F8               	movwf	??_Mode_4+2
  5912     0658  3008               	movlw	8
  5913     0659  00F7               	movwf	??_Mode_4+1
  5914     065A  3077               	movlw	119
  5915     065B  00F6               	movwf	??_Mode_4
  5916     065C                     u3687:
  5917     065C  0BF6               	decfsz	??_Mode_4,f
  5918     065D  2E5C               	goto	u3687
  5919     065E  0BF7               	decfsz	??_Mode_4+1,f
  5920     065F  2E5C               	goto	u3687
  5921     0660  0BF8               	decfsz	??_Mode_4+2,f
  5922     0661  2E5C               	goto	u3687
  5923     0662                     l2102:
  5924                           
  5925                           ;TTL_Logic.c: 112:         }}
  5926     0662  3001               	movlw	1
  5927     0663  1283               	bcf	3,5	;RP0=0, select bank0
  5928     0664  1303               	bcf	3,6	;RP1=0, select bank0
  5929     0665  07D7               	addwf	_j,f
  5930     0666  1803               	skipnc
  5931     0667  0AD8               	incf	_j+1,f
  5932     0668  3000               	movlw	0
  5933     0669  07D8               	addwf	_j+1,f
  5934     066A  2D68               	goto	l2076
  5935     066B                     l2106:
  5936     066B  3001               	movlw	1
  5937     066C  07D9               	addwf	_i,f
  5938     066D  1803               	skipnc
  5939     066E  0ADA               	incf	_i+1,f
  5940     066F  3000               	movlw	0
  5941     0670  07DA               	addwf	_i+1,f
  5942     0671  3000               	movlw	0
  5943     0672  025A               	subwf	_i+1,w
  5944     0673  3002               	movlw	2
  5945     0674  1903               	skipnz
  5946     0675  0259               	subwf	_i,w
  5947     0676  1C03               	skipc
  5948     0677  2E79               	goto	u2741
  5949     0678  2E7A               	goto	u2740
  5950     0679                     u2741:
  5951     0679  2D66               	goto	l2074
  5952     067A                     u2740:
  5953     067A  2FCF               	goto	l314
  5954     067B                     l304:	
  5955                           ;TTL_Logic.c: 114:     else{
  5956                           
  5957                           
  5958                           ;TTL_Logic.c: 115:     TRISB0=TRISD7=TRISD5=TRISD4=TRISB5=TRISB4=TRISB2=TRISB1=0;
  5959     067B  1683               	bsf	3,5	;RP0=1, select bank1
  5960     067C  1303               	bcf	3,6	;RP1=0, select bank1
  5961     067D  1086               	bcf	6,1	;volatile
  5962     067E  1106               	bcf	6,2	;volatile
  5963     067F  1206               	bcf	6,4	;volatile
  5964     0680  1286               	bcf	6,5	;volatile
  5965     0681  1208               	bcf	8,4	;volatile
  5966     0682  1288               	bcf	8,5	;volatile
  5967     0683  1388               	bcf	8,7	;volatile
  5968     0684  1006               	bcf	6,0	;volatile
  5969                           
  5970                           ;TTL_Logic.c: 116:     TRISD6=TRISD3=TRISB6=TRISB3=1;
  5971     0685  1586               	bsf	6,3	;volatile
  5972     0686  1986               	btfsc	6,3	;volatile
  5973     0687  2E89               	goto	u2751
  5974     0688  2E8D               	goto	u2750
  5975     0689                     u2751:
  5976     0689  1683               	bsf	3,5	;RP0=1, select bank1
  5977     068A  1303               	bcf	3,6	;RP1=0, select bank1
  5978     068B  1706               	bsf	6,6	;volatile
  5979     068C  2E90               	goto	u2764
  5980     068D                     u2750:
  5981     068D  1683               	bsf	3,5	;RP0=1, select bank1
  5982     068E  1303               	bcf	3,6	;RP1=0, select bank1
  5983     068F  1306               	bcf	6,6	;volatile
  5984     0690                     u2764:
  5985     0690  1B06               	btfsc	6,6	;volatile
  5986     0691  2E93               	goto	u2761
  5987     0692  2E97               	goto	u2760
  5988     0693                     u2761:
  5989     0693  1683               	bsf	3,5	;RP0=1, select bank1
  5990     0694  1303               	bcf	3,6	;RP1=0, select bank1
  5991     0695  1588               	bsf	8,3	;volatile
  5992     0696  2E9A               	goto	u2774
  5993     0697                     u2760:
  5994     0697  1683               	bsf	3,5	;RP0=1, select bank1
  5995     0698  1303               	bcf	3,6	;RP1=0, select bank1
  5996     0699  1188               	bcf	8,3	;volatile
  5997     069A                     u2774:
  5998     069A  1988               	btfsc	8,3	;volatile
  5999     069B  2E9D               	goto	u2771
  6000     069C  2EA1               	goto	u2770
  6001     069D                     u2771:
  6002     069D  1683               	bsf	3,5	;RP0=1, select bank1
  6003     069E  1303               	bcf	3,6	;RP1=0, select bank1
  6004     069F  1708               	bsf	8,6	;volatile
  6005     06A0  2EA4               	goto	u2784
  6006     06A1                     u2770:
  6007     06A1  1683               	bsf	3,5	;RP0=1, select bank1
  6008     06A2  1303               	bcf	3,6	;RP1=0, select bank1
  6009     06A3  1308               	bcf	8,6	;volatile
  6010     06A4                     u2784:
  6011     06A4                     l2108:
  6012                           
  6013                           ;TTL_Logic.c: 117:     _delay((unsigned long)((20)*(16000000/4000.0)));
  6014     06A4  3068               	movlw	104
  6015     06A5  00F7               	movwf	??_Mode_4+1
  6016     06A6  30E4               	movlw	228
  6017     06A7  00F6               	movwf	??_Mode_4
  6018     06A8                     u3697:
  6019     06A8  0BF6               	decfsz	??_Mode_4,f
  6020     06A9  2EA8               	goto	u3697
  6021     06AA  0BF7               	decfsz	??_Mode_4+1,f
  6022     06AB  2EA8               	goto	u3697
  6023     06AC  0000               	nop
  6024     06AD                     l2110:
  6025                           
  6026                           ;TTL_Logic.c: 118:     for(i=0;i<2;i++)
  6027     06AD  1283               	bcf	3,5	;RP0=0, select bank0
  6028     06AE  1303               	bcf	3,6	;RP1=0, select bank0
  6029     06AF  01D9               	clrf	_i
  6030     06B0  01DA               	clrf	_i+1
  6031     06B1                     l2112:
  6032     06B1  3000               	movlw	0
  6033     06B2  025A               	subwf	_i+1,w
  6034     06B3  3002               	movlw	2
  6035     06B4  1903               	skipnz
  6036     06B5  0259               	subwf	_i,w
  6037     06B6  1C03               	skipc
  6038     06B7  2EB9               	goto	u2791
  6039     06B8  2EBA               	goto	u2790
  6040     06B9                     u2791:
  6041     06B9  2EBB               	goto	l2116
  6042     06BA                     u2790:
  6043     06BA  2FCF               	goto	l314
  6044     06BB                     l2116:
  6045                           
  6046                           ;TTL_Logic.c: 119:     {;TTL_Logic.c: 120:         for(j=0;j<2;j++)
  6047     06BB  01D7               	clrf	_j
  6048     06BC  01D8               	clrf	_j+1
  6049     06BD                     l2118:
  6050     06BD  3000               	movlw	0
  6051     06BE  0258               	subwf	_j+1,w
  6052     06BF  3002               	movlw	2
  6053     06C0  1903               	skipnz
  6054     06C1  0257               	subwf	_j,w
  6055     06C2  1C03               	skipc
  6056     06C3  2EC5               	goto	u2801
  6057     06C4  2EC6               	goto	u2800
  6058     06C5                     u2801:
  6059     06C5  2EC7               	goto	l312
  6060     06C6                     u2800:
  6061     06C6  2FC0               	goto	l2148
  6062     06C7                     l312:
  6063                           
  6064                           ;TTL_Logic.c: 121:         {;TTL_Logic.c: 122:             RB0=RD5=RB5=RB2=(__bit)i;
  6065     06C7  1859               	btfsc	_i,0
  6066     06C8  2ECA               	goto	u2811
  6067     06C9  2ECE               	goto	u2810
  6068     06CA                     u2811:
  6069     06CA  1283               	bcf	3,5	;RP0=0, select bank0
  6070     06CB  1303               	bcf	3,6	;RP1=0, select bank0
  6071     06CC  1506               	bsf	6,2	;volatile
  6072     06CD  2ED1               	goto	u2824
  6073     06CE                     u2810:
  6074     06CE  1283               	bcf	3,5	;RP0=0, select bank0
  6075     06CF  1303               	bcf	3,6	;RP1=0, select bank0
  6076     06D0  1106               	bcf	6,2	;volatile
  6077     06D1                     u2824:
  6078     06D1  1906               	btfsc	6,2	;volatile
  6079     06D2  2ED4               	goto	u2821
  6080     06D3  2ED8               	goto	u2820
  6081     06D4                     u2821:
  6082     06D4  1283               	bcf	3,5	;RP0=0, select bank0
  6083     06D5  1303               	bcf	3,6	;RP1=0, select bank0
  6084     06D6  1686               	bsf	6,5	;volatile
  6085     06D7  2EDB               	goto	u2834
  6086     06D8                     u2820:
  6087     06D8  1283               	bcf	3,5	;RP0=0, select bank0
  6088     06D9  1303               	bcf	3,6	;RP1=0, select bank0
  6089     06DA  1286               	bcf	6,5	;volatile
  6090     06DB                     u2834:
  6091     06DB  1A86               	btfsc	6,5	;volatile
  6092     06DC  2EDE               	goto	u2831
  6093     06DD  2EE2               	goto	u2830
  6094     06DE                     u2831:
  6095     06DE  1283               	bcf	3,5	;RP0=0, select bank0
  6096     06DF  1303               	bcf	3,6	;RP1=0, select bank0
  6097     06E0  1688               	bsf	8,5	;volatile
  6098     06E1  2EE5               	goto	u2844
  6099     06E2                     u2830:
  6100     06E2  1283               	bcf	3,5	;RP0=0, select bank0
  6101     06E3  1303               	bcf	3,6	;RP1=0, select bank0
  6102     06E4  1288               	bcf	8,5	;volatile
  6103     06E5                     u2844:
  6104     06E5  1A88               	btfsc	8,5	;volatile
  6105     06E6  2EE8               	goto	u2841
  6106     06E7  2EEC               	goto	u2840
  6107     06E8                     u2841:
  6108     06E8  1283               	bcf	3,5	;RP0=0, select bank0
  6109     06E9  1303               	bcf	3,6	;RP1=0, select bank0
  6110     06EA  1406               	bsf	6,0	;volatile
  6111     06EB  2EEF               	goto	u2854
  6112     06EC                     u2840:
  6113     06EC  1283               	bcf	3,5	;RP0=0, select bank0
  6114     06ED  1303               	bcf	3,6	;RP1=0, select bank0
  6115     06EE  1006               	bcf	6,0	;volatile
  6116     06EF                     u2854:
  6117                           
  6118                           ;TTL_Logic.c: 123:             RD7=RD4=RB4=RB1=(__bit)j;
  6119     06EF  1857               	btfsc	_j,0
  6120     06F0  2EF2               	goto	u2861
  6121     06F1  2EF6               	goto	u2860
  6122     06F2                     u2861:
  6123     06F2  1283               	bcf	3,5	;RP0=0, select bank0
  6124     06F3  1303               	bcf	3,6	;RP1=0, select bank0
  6125     06F4  1486               	bsf	6,1	;volatile
  6126     06F5  2EF9               	goto	u2874
  6127     06F6                     u2860:
  6128     06F6  1283               	bcf	3,5	;RP0=0, select bank0
  6129     06F7  1303               	bcf	3,6	;RP1=0, select bank0
  6130     06F8  1086               	bcf	6,1	;volatile
  6131     06F9                     u2874:
  6132     06F9  1886               	btfsc	6,1	;volatile
  6133     06FA  2EFC               	goto	u2871
  6134     06FB  2F00               	goto	u2870
  6135     06FC                     u2871:
  6136     06FC  1283               	bcf	3,5	;RP0=0, select bank0
  6137     06FD  1303               	bcf	3,6	;RP1=0, select bank0
  6138     06FE  1606               	bsf	6,4	;volatile
  6139     06FF  2F03               	goto	u2884
  6140     0700                     u2870:
  6141     0700  1283               	bcf	3,5	;RP0=0, select bank0
  6142     0701  1303               	bcf	3,6	;RP1=0, select bank0
  6143     0702  1206               	bcf	6,4	;volatile
  6144     0703                     u2884:
  6145     0703  1A06               	btfsc	6,4	;volatile
  6146     0704  2F06               	goto	u2881
  6147     0705  2F0A               	goto	u2880
  6148     0706                     u2881:
  6149     0706  1283               	bcf	3,5	;RP0=0, select bank0
  6150     0707  1303               	bcf	3,6	;RP1=0, select bank0
  6151     0708  1608               	bsf	8,4	;volatile
  6152     0709  2F0D               	goto	u2894
  6153     070A                     u2880:
  6154     070A  1283               	bcf	3,5	;RP0=0, select bank0
  6155     070B  1303               	bcf	3,6	;RP1=0, select bank0
  6156     070C  1208               	bcf	8,4	;volatile
  6157     070D                     u2894:
  6158     070D  1A08               	btfsc	8,4	;volatile
  6159     070E  2F10               	goto	u2891
  6160     070F  2F14               	goto	u2890
  6161     0710                     u2891:
  6162     0710  1283               	bcf	3,5	;RP0=0, select bank0
  6163     0711  1303               	bcf	3,6	;RP1=0, select bank0
  6164     0712  1788               	bsf	8,7	;volatile
  6165     0713  2F17               	goto	u2904
  6166     0714                     u2890:
  6167     0714  1283               	bcf	3,5	;RP0=0, select bank0
  6168     0715  1303               	bcf	3,6	;RP1=0, select bank0
  6169     0716  1388               	bcf	8,7	;volatile
  6170     0717                     u2904:
  6171     0717                     l2122:
  6172                           
  6173                           ;TTL_Logic.c: 124:             k=(int)RD6;
  6174     0717  1003               	clrc
  6175     0718  1B08               	btfsc	8,6	;volatile
  6176     0719  1403               	setc
  6177     071A  3000               	movlw	0
  6178     071B  1803               	skipnc
  6179     071C  3001               	movlw	1
  6180     071D  00F6               	movwf	??_Mode_4
  6181     071E  01F7               	clrf	??_Mode_4+1
  6182     071F  0876               	movf	??_Mode_4,w
  6183     0720  00D5               	movwf	_k
  6184     0721  0877               	movf	??_Mode_4+1,w
  6185     0722  00D6               	movwf	_k+1
  6186     0723                     l2124:
  6187                           
  6188                           ;TTL_Logic.c: 125:             gate[0]*=10;
  6189     0723  300A               	movlw	10
  6190     0724  00F0               	movwf	___wmul@multiplier
  6191     0725  3000               	movlw	0
  6192     0726  00F1               	movwf	___wmul@multiplier+1
  6193     0727  085E               	movf	_gate+1,w
  6194     0728  00F3               	movwf	___wmul@multiplicand+1
  6195     0729  085D               	movf	_gate,w
  6196     072A  00F2               	movwf	___wmul@multiplicand
  6197     072B  120A  158A  2265  120A  118A  	fcall	___wmul
  6198     0730  0871               	movf	?___wmul+1,w
  6199     0731  1283               	bcf	3,5	;RP0=0, select bank0
  6200     0732  1303               	bcf	3,6	;RP1=0, select bank0
  6201     0733  00DE               	movwf	_gate+1
  6202     0734  0870               	movf	?___wmul,w
  6203     0735  00DD               	movwf	_gate
  6204     0736                     l2126:
  6205                           
  6206                           ;TTL_Logic.c: 126:             gate[0]+=k;
  6207     0736  0855               	movf	_k,w
  6208     0737  07DD               	addwf	_gate,f
  6209     0738  1803               	skipnc
  6210     0739  0ADE               	incf	_gate+1,f
  6211     073A  0856               	movf	_k+1,w
  6212     073B  07DE               	addwf	_gate+1,f
  6213     073C                     l2128:
  6214                           
  6215                           ;TTL_Logic.c: 127:             k=(int)RD3;
  6216     073C  1003               	clrc
  6217     073D  1988               	btfsc	8,3	;volatile
  6218     073E  1403               	setc
  6219     073F  3000               	movlw	0
  6220     0740  1803               	skipnc
  6221     0741  3001               	movlw	1
  6222     0742  00F6               	movwf	??_Mode_4
  6223     0743  01F7               	clrf	??_Mode_4+1
  6224     0744  0876               	movf	??_Mode_4,w
  6225     0745  00D5               	movwf	_k
  6226     0746  0877               	movf	??_Mode_4+1,w
  6227     0747  00D6               	movwf	_k+1
  6228     0748                     l2130:
  6229                           
  6230                           ;TTL_Logic.c: 128:             gate[1]*=10;
  6231     0748  300A               	movlw	10
  6232     0749  00F0               	movwf	___wmul@multiplier
  6233     074A  3000               	movlw	0
  6234     074B  00F1               	movwf	___wmul@multiplier+1
  6235     074C  0860               	movf	_gate+3,w
  6236     074D  00F3               	movwf	___wmul@multiplicand+1
  6237     074E  085F               	movf	_gate+2,w
  6238     074F  00F2               	movwf	___wmul@multiplicand
  6239     0750  120A  158A  2265  120A  118A  	fcall	___wmul
  6240     0755  0871               	movf	?___wmul+1,w
  6241     0756  1283               	bcf	3,5	;RP0=0, select bank0
  6242     0757  1303               	bcf	3,6	;RP1=0, select bank0
  6243     0758  00E0               	movwf	_gate+3
  6244     0759  0870               	movf	?___wmul,w
  6245     075A  00DF               	movwf	_gate+2
  6246                           
  6247                           ;TTL_Logic.c: 129:             gate[1]+=k;
  6248     075B  0855               	movf	_k,w
  6249     075C  07DF               	addwf	_gate+2,f
  6250     075D  1803               	skipnc
  6251     075E  0AE0               	incf	_gate+3,f
  6252     075F  0856               	movf	_k+1,w
  6253     0760  07E0               	addwf	_gate+3,f
  6254     0761                     l2132:
  6255                           
  6256                           ;TTL_Logic.c: 130:             k=(int)RB6;
  6257     0761  1003               	clrc
  6258     0762  1B06               	btfsc	6,6	;volatile
  6259     0763  1403               	setc
  6260     0764  3000               	movlw	0
  6261     0765  1803               	skipnc
  6262     0766  3001               	movlw	1
  6263     0767  00F6               	movwf	??_Mode_4
  6264     0768  01F7               	clrf	??_Mode_4+1
  6265     0769  0876               	movf	??_Mode_4,w
  6266     076A  00D5               	movwf	_k
  6267     076B  0877               	movf	??_Mode_4+1,w
  6268     076C  00D6               	movwf	_k+1
  6269     076D                     l2134:
  6270                           
  6271                           ;TTL_Logic.c: 131:             gate[2]*=10;
  6272     076D  300A               	movlw	10
  6273     076E  00F0               	movwf	___wmul@multiplier
  6274     076F  3000               	movlw	0
  6275     0770  00F1               	movwf	___wmul@multiplier+1
  6276     0771  0862               	movf	_gate+5,w
  6277     0772  00F3               	movwf	___wmul@multiplicand+1
  6278     0773  0861               	movf	_gate+4,w
  6279     0774  00F2               	movwf	___wmul@multiplicand
  6280     0775  120A  158A  2265  120A  118A  	fcall	___wmul
  6281     077A  0871               	movf	?___wmul+1,w
  6282     077B  1283               	bcf	3,5	;RP0=0, select bank0
  6283     077C  1303               	bcf	3,6	;RP1=0, select bank0
  6284     077D  00E2               	movwf	_gate+5
  6285     077E  0870               	movf	?___wmul,w
  6286     077F  00E1               	movwf	_gate+4
  6287     0780                     l2136:
  6288                           
  6289                           ;TTL_Logic.c: 132:             gate[2]+=k;
  6290     0780  0855               	movf	_k,w
  6291     0781  07E1               	addwf	_gate+4,f
  6292     0782  1803               	skipnc
  6293     0783  0AE2               	incf	_gate+5,f
  6294     0784  0856               	movf	_k+1,w
  6295     0785  07E2               	addwf	_gate+5,f
  6296     0786                     l2138:
  6297                           
  6298                           ;TTL_Logic.c: 133:             k=(int)RB3;
  6299     0786  1003               	clrc
  6300     0787  1986               	btfsc	6,3	;volatile
  6301     0788  1403               	setc
  6302     0789  3000               	movlw	0
  6303     078A  1803               	skipnc
  6304     078B  3001               	movlw	1
  6305     078C  00F6               	movwf	??_Mode_4
  6306     078D  01F7               	clrf	??_Mode_4+1
  6307     078E  0876               	movf	??_Mode_4,w
  6308     078F  00D5               	movwf	_k
  6309     0790  0877               	movf	??_Mode_4+1,w
  6310     0791  00D6               	movwf	_k+1
  6311                           
  6312                           ;TTL_Logic.c: 134:             gate[3]*=10;
  6313     0792  300A               	movlw	10
  6314     0793  00F0               	movwf	___wmul@multiplier
  6315     0794  3000               	movlw	0
  6316     0795  00F1               	movwf	___wmul@multiplier+1
  6317     0796  0864               	movf	_gate+7,w
  6318     0797  00F3               	movwf	___wmul@multiplicand+1
  6319     0798  0863               	movf	_gate+6,w
  6320     0799  00F2               	movwf	___wmul@multiplicand
  6321     079A  120A  158A  2265  120A  118A  	fcall	___wmul
  6322     079F  0871               	movf	?___wmul+1,w
  6323     07A0  1283               	bcf	3,5	;RP0=0, select bank0
  6324     07A1  1303               	bcf	3,6	;RP1=0, select bank0
  6325     07A2  00E4               	movwf	_gate+7
  6326     07A3  0870               	movf	?___wmul,w
  6327     07A4  00E3               	movwf	_gate+6
  6328     07A5                     l2140:
  6329                           
  6330                           ;TTL_Logic.c: 135:             gate[3]+=k;
  6331     07A5  0855               	movf	_k,w
  6332     07A6  07E3               	addwf	_gate+6,f
  6333     07A7  1803               	skipnc
  6334     07A8  0AE4               	incf	_gate+7,f
  6335     07A9  0856               	movf	_k+1,w
  6336     07AA  07E4               	addwf	_gate+7,f
  6337     07AB                     l2142:
  6338                           
  6339                           ;TTL_Logic.c: 136:             _delay((unsigned long)((100)*(16000000/4000.0)));
  6340     07AB  3003               	movlw	3
  6341     07AC  00F8               	movwf	??_Mode_4+2
  6342     07AD  3008               	movlw	8
  6343     07AE  00F7               	movwf	??_Mode_4+1
  6344     07AF  3077               	movlw	119
  6345     07B0  00F6               	movwf	??_Mode_4
  6346     07B1                     u3707:
  6347     07B1  0BF6               	decfsz	??_Mode_4,f
  6348     07B2  2FB1               	goto	u3707
  6349     07B3  0BF7               	decfsz	??_Mode_4+1,f
  6350     07B4  2FB1               	goto	u3707
  6351     07B5  0BF8               	decfsz	??_Mode_4+2,f
  6352     07B6  2FB1               	goto	u3707
  6353     07B7                     l2144:
  6354                           
  6355                           ;TTL_Logic.c: 137:         }}}}
  6356     07B7  3001               	movlw	1
  6357     07B8  1283               	bcf	3,5	;RP0=0, select bank0
  6358     07B9  1303               	bcf	3,6	;RP1=0, select bank0
  6359     07BA  07D7               	addwf	_j,f
  6360     07BB  1803               	skipnc
  6361     07BC  0AD8               	incf	_j+1,f
  6362     07BD  3000               	movlw	0
  6363     07BE  07D8               	addwf	_j+1,f
  6364     07BF  2EBD               	goto	l2118
  6365     07C0                     l2148:
  6366     07C0  3001               	movlw	1
  6367     07C1  07D9               	addwf	_i,f
  6368     07C2  1803               	skipnc
  6369     07C3  0ADA               	incf	_i+1,f
  6370     07C4  3000               	movlw	0
  6371     07C5  07DA               	addwf	_i+1,f
  6372     07C6  3000               	movlw	0
  6373     07C7  025A               	subwf	_i+1,w
  6374     07C8  3002               	movlw	2
  6375     07C9  1903               	skipnz
  6376     07CA  0259               	subwf	_i,w
  6377     07CB  1C03               	skipc
  6378     07CC  2FCE               	goto	u2911
  6379     07CD  2FCF               	goto	u2910
  6380     07CE                     u2911:
  6381     07CE  2EBB               	goto	l2116
  6382     07CF                     u2910:
  6383     07CF                     l314:
  6384     07CF  0008               	return
  6385     07D0                     __end_of_Mode_4:
  6386                           
  6387                           	psect	text22
  6388     0A65                     __ptext22:	
  6389 ;; *************** function ___wmul *****************
  6390 ;; Defined at:
  6391 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul16.c"
  6392 ;; Parameters:    Size  Location     Type
  6393 ;;  multiplier      2    0[COMMON] unsigned int 
  6394 ;;  multiplicand    2    2[COMMON] unsigned int 
  6395 ;; Auto vars:     Size  Location     Type
  6396 ;;  product         2    4[COMMON] unsigned int 
  6397 ;; Return value:  Size  Location     Type
  6398 ;;                  2    0[COMMON] unsigned int 
  6399 ;; Registers used:
  6400 ;;		wreg, status,2, status,0
  6401 ;; Tracked objects:
  6402 ;;		On entry : 0/0
  6403 ;;		On exit  : 0/0
  6404 ;;		Unchanged: 0/0
  6405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6406 ;;      Params:         4       0       0       0       0
  6407 ;;      Locals:         2       0       0       0       0
  6408 ;;      Temps:          0       0       0       0       0
  6409 ;;      Totals:         6       0       0       0       0
  6410 ;;Total ram usage:        6 bytes
  6411 ;; Hardware stack levels used: 1
  6412 ;; This function calls:
  6413 ;;		Nothing
  6414 ;; This function is called by:
  6415 ;;		_Mode_4
  6416 ;;		_Mode_6
  6417 ;; This function uses a non-reentrant model
  6418 ;;
  6419                           
  6420     0A65                     ___wmul:	
  6421                           ;psect for function ___wmul
  6422                           
  6423     0A65                     l1946:	
  6424                           ;incstack = 0
  6425                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6426                           
  6427     0A65  01F4               	clrf	___wmul@product
  6428     0A66  01F5               	clrf	___wmul@product+1
  6429     0A67                     l1948:
  6430     0A67  1C70               	btfss	___wmul@multiplier,0
  6431     0A68  2A6A               	goto	u2321
  6432     0A69  2A6B               	goto	u2320
  6433     0A6A                     u2321:
  6434     0A6A  2A71               	goto	l470
  6435     0A6B                     u2320:
  6436     0A6B                     l1950:
  6437     0A6B  0872               	movf	___wmul@multiplicand,w
  6438     0A6C  07F4               	addwf	___wmul@product,f
  6439     0A6D  1803               	skipnc
  6440     0A6E  0AF5               	incf	___wmul@product+1,f
  6441     0A6F  0873               	movf	___wmul@multiplicand+1,w
  6442     0A70  07F5               	addwf	___wmul@product+1,f
  6443     0A71                     l470:
  6444     0A71  3001               	movlw	1
  6445     0A72                     u2335:
  6446     0A72  1003               	clrc
  6447     0A73  0DF2               	rlf	___wmul@multiplicand,f
  6448     0A74  0DF3               	rlf	___wmul@multiplicand+1,f
  6449     0A75  3EFF               	addlw	-1
  6450     0A76  1D03               	skipz
  6451     0A77  2A72               	goto	u2335
  6452     0A78                     l1952:
  6453     0A78  3001               	movlw	1
  6454     0A79                     u2345:
  6455     0A79  1003               	clrc
  6456     0A7A  0CF1               	rrf	___wmul@multiplier+1,f
  6457     0A7B  0CF0               	rrf	___wmul@multiplier,f
  6458     0A7C  3EFF               	addlw	-1
  6459     0A7D  1D03               	skipz
  6460     0A7E  2A79               	goto	u2345
  6461     0A7F                     l1954:
  6462     0A7F  0870               	movf	___wmul@multiplier,w
  6463     0A80  0471               	iorwf	___wmul@multiplier+1,w
  6464     0A81  1D03               	btfss	3,2
  6465     0A82  2A84               	goto	u2351
  6466     0A83  2A85               	goto	u2350
  6467     0A84                     u2351:
  6468     0A84  2A67               	goto	l1948
  6469     0A85                     u2350:
  6470     0A85                     l1956:
  6471     0A85  0875               	movf	___wmul@product+1,w
  6472     0A86  00F1               	movwf	?___wmul+1
  6473     0A87  0874               	movf	___wmul@product,w
  6474     0A88  00F0               	movwf	?___wmul
  6475     0A89                     l472:
  6476     0A89  0008               	return
  6477     0A8A                     __end_of___wmul:
  6478     007E                     btemp	set	126	;btemp
  6479     007E                     wtemp0	set	126
  6480                           
  6481                           	psect	config
  6482                           
  6483                           ;Config register CONFIG @ 0x2007
  6484                           ;	Oscillator Selection bits
  6485                           ;	FOSC = HS, HS oscillator
  6486                           ;	Watchdog Timer Enable bit
  6487                           ;	WDTE = OFF, WDT disabled
  6488                           ;	Power-up Timer Enable bit
  6489                           ;	PWRTE = ON, PWRT enabled
  6490                           ;	Brown-out Reset Enable bit
  6491                           ;	BOREN = OFF, BOR disabled
  6492                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  6493                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  6494                           ;	Data EEPROM Memory Code Protection bit
  6495                           ;	CPD = OFF, Data EEPROM code protection off
  6496                           ;	Flash Program Memory Write Enable bits
  6497                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  6498                           ;	In-Circuit Debugger Mode bit
  6499                           ;	DEBUG = 0x1, unprogrammed default
  6500                           ;	Flash Program Memory Code Protection bit
  6501                           ;	CP = OFF, Code protection off
  6502     2007                     	org	8199
  6503     2007  3F32               	dw	16178

Data Sizes:
    Strings     79
    Constant    77
    Data        30
    BSS         37
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     33      75
    BANK1            80      0      24
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_6(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 3
		 -> print@charNum(BANK0[3]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    LCD_Write_String@str	PTR const unsigned char  size(2) Largest target is 55
		 -> STR_10(CODE[10]), STR_9(CODE[11]), STR_8(CODE[10]), STR_7(CODE[11]), 
		 -> print@charNum(BANK0[3]), STR_5(CODE[15]), STR_4(CODE[3]), STR_3(CODE[5]), 
		 -> STR_2(CODE[11]), name(CODE[55]), STR_1(CODE[10]), 


Critical Paths under _main in COMMON

    _main->_LCD_Write_String
    _TRI_NAN->_LCD_Write_String
    _LCD_Init->_LCD_CMD
    _Auto->_LCD_Write_String
    _print->_LCD_Write_String
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Write_IC->_LCD_Write_String
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Char->_LCD_DATA
    _LCD_Set_Cursor->_LCD_CMD
    _LCD_Clear->_LCD_CMD
    _LCD_CMD->_LCD_DATA
    _Mode_6->___wmul
    _Mode_4->___wmul

Critical Paths under _main in BANK0

    _main->_Auto
    _main->_Test
    _Test->_print
    _Auto->_print
    _print->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   34375
                                             30 BANK0      3     3      0
                               _Auto
                          _LCD_Clear
                           _LCD_Init
                     _LCD_Set_Cursor
                   _LCD_Write_String
                               _Test
                           _Write_IC
                             ___bmul
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) _Test                                                 2     0      2   12791
                                             28 BANK0      2     0      2
                             _Mode_4
                             _Mode_6
                            _TRI_NAN
                             _gate_1
                              _print
 ---------------------------------------------------------------------------------
 (2) _TRI_NAN                                              5     3      2    2626
                                              0 BANK0      5     3      2
                     _LCD_Set_Cursor
                   _LCD_Write_String
                           _TRI_GOOD
 ---------------------------------------------------------------------------------
 (3) _TRI_GOOD                                             5     3      2     164
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _LCD_CMD
                           _LCD_DATA
 ---------------------------------------------------------------------------------
 (1) _Auto                                                 2     2      0   15715
                                             28 BANK0      2     2      0
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                   _LCD_Write_String
                             _Mode_4
                             _Mode_6
                           _Write_IC
                             ___bmul
                             _gate_1
                        _is_all_good
                              _print
 ---------------------------------------------------------------------------------
 (2) _print                                               15    11      4    4717
                                             13 BANK0     15    11      4
                     _LCD_Set_Cursor
                   _LCD_Write_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             21    18      3    1515
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4     615
                                              7 COMMON     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     314
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) _is_all_good                                         10     6      4     522
                                              0 COMMON    10     6      4
 ---------------------------------------------------------------------------------
 (2) _gate_1                                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               3     2      1     196
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _Write_IC                                             0     0      0    2430
                          _LCD_Clear
                     _LCD_Set_Cursor
                   _LCD_Write_String
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_String                                     7     5      2    1484
                                              6 COMMON     7     5      2
                     _LCD_Write_Char
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Char                                       5     5      0     178
                                              1 COMMON     5     5      0
                           _LCD_DATA
 ---------------------------------------------------------------------------------
 (2) _LCD_Set_Cursor                                       6     5      1     836
                                              4 COMMON     6     5      1
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0     110
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _LCD_CMD                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _LCD_DATA
 ---------------------------------------------------------------------------------
 (4) _LCD_DATA                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Mode_6                                               3     3      0    2620
                                              6 COMMON     3     3      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _Mode_4                                               3     3      0    2620
                                              6 COMMON     3     3      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    2620
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Auto
     _LCD_Set_Cursor
       _LCD_CMD
         _LCD_DATA
     _LCD_Write_Char
       _LCD_DATA
     _LCD_Write_String
       _LCD_Write_Char
       ___bmul (ARG)
     _Mode_4
       ___wmul
     _Mode_6
       ___wmul
     _Write_IC
       _LCD_Clear
         _LCD_CMD
       _LCD_Set_Cursor
       _LCD_Write_String
     ___bmul
     _gate_1
     _is_all_good
     _print
       _LCD_Set_Cursor
       _LCD_Write_String
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
   _LCD_Clear
   _LCD_Init
     _LCD_CMD
     _LCD_DATA
   _LCD_Set_Cursor
   _LCD_Write_String
   _Test
     _Mode_4
     _Mode_6
     _TRI_NAN
       _LCD_Set_Cursor
       _LCD_Write_String
       _TRI_GOOD
     _gate_1
     _print
   _Write_IC
   ___bmul
   ___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      18       7       30.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     21      4B       5       93.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      71      12        0.0%
ABS                  0      0      71       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue Oct 10 15:14:37 2023

                       _i 0059                         _j 0057                         _k 0055  
                       _l 0053                         _n 0069                         _x 0051  
                       pc 0002            ___bmul@product 0071                        l31 0A64  
                      l23 0A4C                        l24 0A4F                        l25 0A55  
                      l26 0A56                        l34 0A21                        l42 0BB9  
                      l27 0A5C                        l28 0A5D                        l29 0A63  
                      l37 09CF                        l45 0078                        l54 0B30  
                      l48 0C08                        _x1 007D                        _x2 005C  
                      _x3 005B                        fsr 0004       ___wmul@multiplicand 0072  
                     l300 0C59                       l312 06C7                       l304 067B  
                     l314 07CF                       l307 0572                       l324 0A42  
                     l317 01EC                       l165 0CB1                       l319 0332  
                     l335 0446                       l327 036B                       l346 0EF5  
                     l275 0AB4                       l339 051B                       l292 0D3F  
                     l470 0A71                       l295 0C42                       l279 0FFF  
                     l472 0A89                       l297 0C3C                       l466 0E19  
                     l742 0B74                       l496 0A07                       l752 0AEE  
                     _RA0 0028                       _RA1 0029                       _RA2 002A  
                     _RB0 0030                       _RA3 002B                       _RB1 0031  
                     _RA4 002C                       _RB2 0032                       _RB3 0033  
                     _RC2 003A                       _RB4 0034                       _RC3 003B  
                     _RB5 0035                       _RC4 003C                       _RB6 0036  
                     _RC5 003D                       _RD3 0043                       _RC6 003E  
                     _RD4 0044                       _RC7 003F                       _RD5 0045  
                     _RD6 0046                       _RD7 0047                       fsr0 0004  
                     indf 0000           __end_of_LCD_CMD 0A22            _LCD_Set_Cursor 0B75  
                    l2000 02C5                      l2010 030F                      l2002 02CB  
                    l2100 0656                      l2012 0315                      l2004 02D7  
                    l2020 0CB2                      l2110 06AD                      l2102 0662  
                    l2014 0321                      l2006 02F0                      l2030 0CEF  
                    l2022 0CBA                      l2112 06B1                      l2016 0329  
                    l2008 02FC                      l2040 0D1C                      l2032 0CFB  
                    l2024 0CBE                      l2200 04C9                      l2130 0748  
                    l2122 0717                      l2106 066B                      l2050 0A26  
                    l2042 0D25                      l2034 0D04                      l2026 0CC1  
                    l2018 0CB2                      l2202 04D3                      l2210 04FA  
                    l2140 07A5                      l2132 0761                      l2124 0723  
                    l2116 06BB                      l2108 06A4                      l2060 051C  
                    l2220 0C36                      l2044 0D2E                      l2028 0CE7  
                    l2036 0D0C                      l2212 0508                      l2300 0C8F  
                    l2142 07AB                      l2134 076D                      l2126 0736  
                    l2118 06BD                      l2070 055C                      l2062 0520  
                    l2054 0A30                      l2230 0C58                      l2222 0C4C  
                    l2046 0D36                      l2038 0D12                      l2310 0EFB  
                    l2214 0512                      l2206 04DC                      l2150 0333  
                    l2144 07B7                      l2136 0780                      l2128 073C  
                    l2080 05C2                      l2064 0526                      l2240 09FD  
                    l2056 0A3B                      l2048 0A22                      l2224 0C56  
                    l2216 0C09                      l2320 0F23                      l2312 0F00  
                    l2208 04EB                      l2160 039A                      l2152 0337  
                    l2304 0C9F                      l2400 00E6                      l2138 0786  
                    l2090 060C                      l2082 05CE                      l2074 0566  
                    l2066 054F                      l2242 09FF                      l2234 09F4  
                    l2218 0C10                      l2330 0F42                      l2322 0F31  
                    l2314 0F11                      l2250 0012                      l2162 039E  
                    l2154 033F                      l2306 0CA8                      l2402 00EC  
                    l2410 012A                      l2148 07C0                      l2092 0618  
                    l2084 05E1                      l2076 0568                      l2068 0558  
                    l2244 0A01                      l2236 09F5                      l2332 0F48  
                    l2316 0F15                      l2308 0EF6                      l2260 0025  
                    l2252 0015                      l2180 03C9                      l2172 03B4  
                    l2156 034A                      l2420 0175                      l2412 0130  
                    l2404 0103                      l2094 062B                      l2086 05E7  
                    l2246 0A06                      l2238 09F9                      l2350 0F93  
                    l2342 0F7D                      l2334 0F4D                      l2318 0F1A  
                    l2326 0F37                      l2270 0048                      l2262 002E  
                    l2254 0016                      l2190 04A0                      l2182 0423  
                    l2174 03B6                      l2166 03A8                      l2158 038B  
                    l2422 017E                      l2414 0153                      l2406 0108  
                    l2096 0631                      l2088 05F3                      l1720 0A61  
                    l1712 0A44                      l1800 0AEA                      l2344 0F83  
                    l2336 0F5F                      l2328 0F3D                      l2280 0066  
                    l2272 004E                      l2264 0034                      l2256 0017  
                    l2192 04AB                      l2184 042D                      l2168 03AA  
                    l2424 0183                      l2416 0162                      l2408 011B  
                    l2098 0650                      l1714 0A48                      l1730 0A1E  
                    l1722 0A09                      l1810 0B88                      l2370 0FFB  
                    l2362 0FD5                      l2346 0F88                      l2282 006C  
                    l2274 0054                      l2266 003D                      l2258 001D  
                    l2194 04B5                      l2186 0437                      l2178 03C0  
                    l2290 0C67                      l2418 0168                      l2426 0192  
                    l1716 0A53                      l1724 0A0C                      l1804 09C3  
                    l1820 0BAA                      l1812 0B8B                      l1740 0BD5  
                    l1732 0BBB                      l2364 0FDD                      l2356 0F99  
                    l2348 0F8E                      l2284 0072                      l2276 005A  
                    l2268 0043                      l1900 0E1E                      l2196 04BC  
                    l2188 043E                      l2292 0C75                      l2380 0083  
                    l1718 0A5A                      l1726 0A12                      l1822 0BAD  
                    l1814 0B91                      l1806 0B76                      l1750 0BF3  
                    l1742 0BDE                      l1734 0BC1                      l1830 0B0E  
                    l2366 0FEA                      l2358 0FAD                      l2278 0060  
                    l2198 04C3                      l2294 0C7B                      l2286 0C5A  
                    l2390 00A2                      l2382 0087                      l1728 0A15  
                    l1824 0BB3                      l1808 0B7B                      l1816 0B97  
                    l1752 0BFC                      l1744 0BE1                      l1736 0BC4  
                    l1832 0B14                      l1760 0B39                      l2448 0D69  
                    l1840 0D51                      l2368 0FF2                      l1920 0E87  
                    l1912 0E58                      l1904 0E28                      l2296 0C81  
                    l2288 0C62                      l2392 00A8                      l2384 008C  
                    l2376 0079                      l1818 0B9D                      l1754 0BFF  
                    l1746 0BEA                      l1738 0BD2                      l1826 0AEF  
                    l1770 0B5C                      l1762 0B3C                      l1850 0D7C  
                    l1842 0D56                      l1834 0D43                      l1930 0EBD  
                    l1922 0E8E                      l1914 0E5F                      l1906 0E2F  
                    l2298 0C8A                      l2394 00BF                      l2386 0091  
                    l2378 0080                      l1748 0BF0                      l1828 0AF2  
                    l1772 0B62                      l1764 0B43                      l1756 0B31  
                    l1852 0D80                      l1836 0D46                      l1908 0E56  
                    l1940 0EE5                      l2396 00C4                      l2388 0099  
     LCD_Write_String@str 0076                      l1950 0A6B                      l1774 0B63  
                    l1766 0B47                      l1758 0B33                      l1790 0AC9  
                    l1782 0AB5                      l1870 0DAF                      l1854 0D84  
                    l1846 0D57                      l1838 0D4C                      l1942 0EF4  
                    l2398 00D7                      l1952 0A78                      l1960 0A8A  
                    l1776 0B6A                      l1768 0B4B                      l1792 0ACD  
                    l1784 0ABB                      l1880 0DC7                      l1872 0DB5  
                    l1864 0D8F                      l1856 0D88                      l1848 0D74  
                    l1928 0EB6                      l1954 0A7F                      l1946 0A65  
                    l1970 019A                      l1962 0A97                      l1778 0B70  
                    l1794 0AD7                      l1786 0ABE                      l1882 0DF3  
                    l1874 0DBB                      l1858 0D8D                      l1890 0E15  
                    l1956 0A85                      l1948 0A67                      l1980 0228  
                    l1972 01A2                      l1964 0AA0                      l1796 0ADD  
                    l1788 0AC5                      l1884 0DF8                      l1876 0DC0  
                    l1868 0DAB                      l1990 027B                      l1982 0235  
                    l1974 01D5                      l1966 0AAB                      l1798 0AE4  
                    l1886 0DFC                      l1878 0DC4                      l1992 0281  
                    l1984 0243                      l1976 01DE                      l1968 0196  
                    l1888 0E05                      l1994 028D                      l1986 0256  
                    l1898 0E1A                      l1996 02A0                      l1988 025C  
                    l1998 02B2                      STR_1 0897                      STR_2 0882  
                    STR_3 08A1                      STR_4 08A6                      STR_5 085D  
                    STR_6 08A9                      STR_7 086C                      STR_8 088D  
                    STR_9 0877                      u2000 0D84                      u2001 0D83  
                    u2010 0DAA                      u2011 0DA9                      u2020 0DB5  
                    u2100 0E50                      u2021 0DB4                      u2101 0E4E  
                    u2030 0DBB                      u2110 0E51                      u2031 0DBA  
                    u2015 0DA6                      u2040 0E05                      u2200 0EA8  
                    u2120 0E56                      u3000 03B3                      u2041 0E04  
                    u2201 0EA6                      u2121 0E55                      u3001 03B2  
                    u2050 0E15                      u2210 0EA9                      u2130 0E5F  
                    u3010 03BF                      u2051 0E14                      u2131 0E5E  
                    u3011 03BE                      u2300 0EE4                      u2220 0EAF  
                    u2140 0E79                      u2060 0E27                      u3020 03C9  
                    u2301 0EE3                      u2221 0EAD                      u2141 0E77  
                    u2061 0E26                      u3021 03C8                      u2310 0EF4  
                    u2230 0EB0                      u2150 0E7A                      u2070 0E2F  
                    u3110 040C                      u3030 03D0                      u2311 0EF3  
                    u2071 0E2E                      u3111 0408                      u3031 03CC  
                    u2320 0A6B                      u2400 01C8                      u2240 0EB5  
                    u2160 0E80                      u2080 0E49                      u3200 0475  
                    u3120 0416                      u3104 0405                      u3040 03DA  
                    u2321 0A6A                      u2401 01C4                      u2241 0EB4  
                    u2161 0E7E                      u2081 0E47                      u3201 0471  
                    u3121 0412                      u3041 03D6                      u2410 01D2  
                    u2250 0EBD                      u2170 0E81                      u2090 0E4A  
                    u3210 047F                      u3130 0420                      u3050 03E4  
                    u2411 01CE                      u2251 0EBC                      u3211 047B  
                    u3131 041C                      u3051 03E0                      u2404 01C1  
                    u3300 0C36                      u2260 0ED7                      u2180 0E86  
                    u3204 046E                      u3124 040F                      u3044 03D3  
                    u3301 0C35                      u2261 0ED5                      u2181 0E85  
                    u2350 0A85                      u2510 0332                      u2430 01EB  
                    u2414 01CB                      u3310 0C4C                      u2270 0ED8  
                    u2190 0E8E                      u3230 0489                      u3214 0478  
                    u3150 044D                      u3134 0419                      u3070 03EE  
                    u3054 03DD                      u2351 0A84                      u2335 0A72  
                    u2511 0331                      u2431 01EA                      u3311 0C4B  
                    u2191 0E8D                      u3231 0485                      u3151 0449  
                    u3071 03EA                      u2600 054C                      u2504 0228  
                    u2440 01F3                      u2424 01D5                      u2360 0AAB  
                    u3320 0C56                      u2520 0CE7                      u3400 0F5F  
                    u2280 0EDE                      u3240 0493                      u3224 0482  
                    u3160 0457                      u3144 0423                      u3080 03F8  
                    u3064 03E7                      u2345 0A79                      u2601 0548  
                    u2441 01EF                      u2361 0AAA                      u3321 0C55  
                    u3305 0C32                      u2521 0CE6                      u3401 0F5E  
                    u2281 0EDC                      u3241 048F                      u3161 0453  
                    u3081 03F4                      u2450 01FD                      u2370 01AA  
                    u3330 09F9                      u1810 0B4B                      u2530 0D1C  
                    u3410 0FAD                      u2290 0EDF                      u3250 049D  
                    u3170 0461                      u3090 0402                      u2451 01F9  
                    u2371 01A6                      u3331 09F8                      u3315 0C48  
                    u1811 0B4A                      u2531 0D1B                      u3411 0FAC  
                    u3251 0499                      u3171 045D                      u3091 03FE  
                    u2700 05AB                      u2620 0565                      u2604 0545  
                    u2460 0207                      u2380 01B4                      u1740 0A48  
                    u3340 0A06                      u2540 0D25                      u3420 0FEA  
                    u3244 048C                      u3164 0450                      u3084 03F1  
                    u2701 05A7                      u2621 0564                      u2461 0203  
                    u2381 01B0                      u1741 0A47                      u3341 0A05  
                    u3325 0C52                      u1805 0B3D                      u2541 0D24  
                    u2525 0CE3                      u3421 0FE9                      u2710 05B5  
                    u2630 0571                      u2614 054F                      u2470 0211  
                    u2454 01F6                      u2390 01BE                      u1750 0A53  
                    u1830 0B5C                      u1910 0AEA                      u2550 0D36  
                    u3270 04EB                      u3254 0496                      u3190 046B  
                    u3174 045A                      u3094 03FB                      u3350 0C62  
                    u3430 00A8                      u2711 05B1                      u2631 0570  
                    u2471 020D                      u2391 01BA                      u1751 0A52  
                    u1831 0B5B                      u1911 0AE9                      u2551 0D35  
                    u2535 0D18                      u3271 04EA                      u3191 0467  
                    u3351 0C61                      u3431 00A7                      u2800 06C6  
                    u2720 05BF                      u2704 05A4                      u2640 0579  
                    u2480 021B                      u2464 0200                      u2384 01AD  
                    u1760 0A5A                      u1920 0B7B                      u2560 0A2F  
                    u3280 04FA                      u3264 04A0                      u3184 0464  
                    u3360 0C81                      u3440 00EC                      u2801 06C5  
                    u2721 05BB                      u2641 0575                      u2481 0217  
                    u1761 0A59                      u1921 0B7A                      u2561 0A2E  
                    u1825 0B4C                      u1905 0ADE                      u3425 0FE6  
                    u3281 04F9                      u3361 0C80                      u3441 00EB  
                    u2810 06CE                      u2714 05AE                      u2650 0583  
                    u2570 0526                      u2490 0225                      u2474 020A  
                    u2394 01B7                      u1770 0A61                      u1850 0B70  
                    u3290 0508                      u3370 0C8A                      u3450 0130  
                    u2811 06CA                      u2651 057F                      u2571 0525  
                    u2491 0221                      u1771 0A60                      u1851 0B6F  
                    u1835 0B58                      u3291 0507                      u3371 0C89  
                    u3507 018B                      u3451 012F                      u2820 06D8  
                    u2740 067A                      u2724 05B8                      u2660 058D  
                    u2580 0538                      u2484 0214                      u1940 0B9D  
                    u1860 0ABB                      u3380 0CA8                      u3460 0168  
                    u2821 06D4                      u2741 0679                      u2661 0589  
                    u2581 0534                      u1941 0B9C                      u1845 0B64  
                    u1861 0ABA                      u3517 0393                      u3381 0CA7  
                    u3461 0167                      u2910 07CF                      u2830 06E2  
                    u2750 068D                      u2734 05C2                      u2670 0597  
                    u2654 057C                      u2590 0542                      u2494 021E  
                    u1790 0B39                      u3390 0F11                      u2911 07CE  
                    u2831 06DE                      u2751 0689                      u2671 0593  
                    u2591 053E                      u1935 0B81                      u3607 0BE5  
                    u1791 0B38                      u3391 0F10                      u3527 0429  
                    u2904 0717                      u2840 06EC                      u2824 06D1  
                    u2760 0697                      u2664 0586                      u1960 0AFC  
                    u1880 0ACD                      u2920 034A                      u2841 06E8  
                    u2761 0693                      u3617 0BF7                      u1785 0BC7  
                    u1881 0ACC                      u3537 04A6                      u2921 0349  
                    u2834 06DB                      u2770 06A1                      u2690 05A1  
                    u2674 0590                      u2594 053B                      u1970 0B1E  
                    u1890 0AD7                      u2930 035D                      u3707 07B1  
                    u2771 069D                      u2691 059D                      u1955 0BA3  
                    u3627 0C03                      u1891 0AD6                      u1875 0ABF  
                    u3547 04CF                      u2931 0359                      u2860 06F6  
                    u2844 06E5                      u2764 0690                      u2684 059A  
                    u1980 0B30                      u2940 0367                      u2861 06F2  
                    u3637 0A19                      u1981 0B2F                      u3557 0021  
                    u2941 0363                      u3477 00DF                      u2870 0700  
                    u2854 06EF                      u2790 06BA                      u2774 069A  
                    u1990 0D4C                      u2871 06FC                      u2791 06B9  
                    u3647 01D9                      u1895 0AD3                      u1991 0D4B  
                    u3567 0029                      u3487 0123                      u2880 070A  
                    u2784 06A4                      u2960 037E                      u2944 0360  
                    u2881 0706                      u3657 022E                      u3577 0038  
                    u2961 037A                      u3497 015B                      u2890 0714  
                    u2874 06F9                      u2970 0388                      u2954 036A  
                    u2891 0710                      u3667 031B                      u3587 0045  
                    u2971 0384                      u2884 0703                      u3677 0553  
                    u3597 0BD9                      u2894 070D                      u2990 03A7  
                    u2974 0381                      u3687 065C                      u2991 03A6  
                    u2984 038B                      u3697 06A8                      _OR_3 00A0  
                    _Auto 0EF6                      _Test 0C5A         ?_LCD_Write_String 0076  
                    _gate 005D                      _main 0079                      _name 0826  
                    btemp 007E           __end_of_TRI_NAN 051C                      start 0000  
      ??_LCD_Write_String 0078              ?_is_all_good 0070         ___bmul@multiplier 0072  
        __end_of_LCD_DATA 0A65          __end_of_LCD_Init 0079                     ?_Auto 0070  
                   ?_Test 003C                     ?_main 0070                     STR_10 088D  
                   _AND_3 00A8           __end_of___lwdiv 0B75           __end_of___lwmod 0AEF  
                   Auto@i 003C                     _TRISC 0087    __end_of_LCD_Set_Cursor 0BBA  
                   Test@n 003C                     _gate1 0049                     _gate2 0041  
                   _gate3 00B0           __end_of_dpowers 0826                     _print 0CB2  
        __end_of_TRI_GOOD 0EF6                     _truth 0810                     pclath 000A  
                   status 0003                     wtemp0 007E           __end_of_sprintf 0E1A  
          _LCD_Write_Char 0BBA              __end_of_Auto 1000           __initialization 07D0  
            __end_of_Test 0CB2              __end_of_main 0196              __end_of_name 085D  
                  ??_Auto 007D                    ??_Test 007D                    ??_main 003E  
       __end_of_LCD_Clear 09D0                 ??_LCD_CMD 0071           ?_LCD_Set_Cursor 0074  
                  _ADCON0 001F                    _ADCON1 009F                 ??_TRI_NAN 0022  
                  ?_print 002D          __end_of_Write_IC 0AB5                    _TRISA0 0428  
                  _TRISA1 0429                    _TRISA2 042A                    _TRISB0 0430  
                  _TRISA3 042B                    _TRISB1 0431                    _TRISA4 042C  
                  _TRISB2 0432                    _TRISB3 0433                    _TRISB4 0434  
                  _TRISB5 0435                    _TRISB6 0436                    _TRISD3 0443  
                  _TRISC6 043E                    _TRISD4 0444                    _TRISC7 043F  
                  _TRISD5 0445                    _TRISD6 0446                    _TRISD7 0447  
  __end_of_LCD_Write_Char 0C09                    _Mode_4 051C                    _Mode_6 0196  
                  ___bmul 09F3                    ___wmul 0A65                    _gate_1 0A22  
               ??___lwdiv 0074                 ??___lwmod 007B                    print@n 002D  
               ??_sprintf 0023           LCD_Set_Cursor@c 0074           LCD_Set_Cursor@r 0076  
               ?_LCD_DATA 0070   __end_of__initialization 07FC                 ?_LCD_Init 0070  
         ?_LCD_Write_Char 0070       ___bmul@multiplicand 0070            __pcstackCOMMON 0070  
            __pidataBANK0 0004              __pidataBANK1 09D0             __end_of_print 0D40  
           __end_of_truth 081C                 ?_TRI_GOOD 0070             TRI_NAN@ic_num 0020  
                 ??_print 0031                __pbssBANK0 0041                __pbssBANK1 00B0  
              ??_LCD_DATA 0070                ??_LCD_Init 0074              is_all_good@n 0070  
                 ?_Mode_4 0070                   ?_Mode_6 0070                __pmaintext 0079  
                 ?___bmul 0070                   ?___wmul 0070                   ?_gate_1 0070  
              ??_TRI_GOOD 0072                 ?_Write_IC 0070                   _LCD_CMD 0A08  
                 _TRI_NAN 0333                __stringtab 0800                   ___lwdiv 0B31  
                 ___lwmod 0AB5                ??_Write_IC 007D          ??_LCD_Set_Cursor 0075  
                 __ptext1 0C5A                   __ptext2 0333                   __ptext3 0E1A  
                 __ptext4 0012                   __ptext5 0EF6                   __ptext6 0CB2  
                 __ptext7 0D40                   __ptext8 0AB5                   __ptext9 0B31  
                 _dpowers 081C                 _LCD_Clear 09C3                   _sprintf 0D40  
                 clrloop0 09BC      end_of_initialization 07FC                   print@no 002F  
              LCD_CMD@CMD 0073                ?_LCD_Clear 0070         LCD_Write_String@i 007B  
        ??_LCD_Write_Char 0071            __end_of_Mode_4 07D0            __end_of_Mode_6 0333  
          TRI_GOOD@ic_num 0070            __end_of___bmul 0A08            __end_of___wmul 0A8A  
        _LCD_Write_String 0AEF            __end_of_gate_1 0A43       start_initialization 07D0  
           ??_is_all_good 0074                  ??_Mode_4 0076                  ??_Mode_6 0076  
                ??___bmul 0071                  ??___wmul 0074                init_fetch0 09E0  
                ??_gate_1 0070               __pdataBANK0 005D               __pdataBANK1 00A0  
                ?_LCD_CMD 0070               __pbssCOMMON 007D                 ___latbits 0002  
           __pcstackBANK0 0020               ??_LCD_Clear 0074                  ?_TRI_NAN 0020  
             sprintf@flag 0027               sprintf@prec 0028             is_all_good@no 0072  
        ___lwdiv@dividend 0072                  ?___lwdiv 0070                  ?___lwmod 0077  
     __end_of_is_all_good 0C5A                 __pstrings 0800          ___lwdiv@quotient 0074  
                ?_sprintf 0020                  _LCD_DATA 0A43                  _LCD_Init 0012  
          ___wmul@product 0074                 clear_ram0 09BB                  _TRI_GOOD 0E1A  
             __stringbase 080F         ___wmul@multiplier 0070  __end_of_LCD_Write_String 0B31  
             _is_all_good 0C09       LCD_Write_Char@High4 0074                  _Write_IC 0A8A  
      __end_of__stringtab 0810                sprintf@val 0029           ___lwdiv@divisor 0070  
         ___lwdiv@counter 0076                  __ptext10 0C09                  __ptext11 0A22  
                __ptext20 0196                  __ptext12 09F3                  __ptext21 051C  
                __ptext13 0A8A                  __ptext22 0A65                  __ptext14 0AEF  
                __ptext15 0BBA                  __ptext16 0B75                  __ptext17 09C3  
                __ptext18 0A08                  __ptext19 0A43       LCD_Set_Cursor@High4 0078  
      LCD_Write_Char@Data 0075        LCD_Write_Char@Low4 0073                  init_ram0 09E4  
               sprintf@ap 0026                 sprintf@sp 002B          ___lwmod@dividend 0079  
               stringcode 080A                  print@num 003A        LCD_Set_Cursor@Low4 0077  
      LCD_Set_Cursor@Temp 0079                  sprintf@c 002C                  sprintf@f 0020  
            LCD_DATA@Data 0070           ___lwmod@divisor 0077           ___lwmod@counter 007B  
                stringdir 080A                  stringtab 0800              print@charNum 0037  
